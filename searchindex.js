Search.setIndex({"docnames": ["index", "pymap.admin", "pymap.backend", "pymap.backend.dict", "pymap.backend.maildir", "pymap.backend.redis", "pymap.bytes", "pymap.cluster", "pymap.concurrent", "pymap.config", "pymap.context", "pymap.exceptions", "pymap.fetch", "pymap.filter", "pymap.flags", "pymap.imap", "pymap.interfaces", "pymap.listtree", "pymap.mailbox", "pymap.message", "pymap.mime", "pymap.parsing", "pymap.plugin", "pymap.search", "pymap.selected", "pymap.service", "pymap.sieve", "pymap.sockets", "pymap.threads", "pymap.token", "pymap.user"], "filenames": ["index.rst", "pymap.admin.rst", "pymap.backend.rst", "pymap.backend.dict.rst", "pymap.backend.maildir.rst", "pymap.backend.redis.rst", "pymap.bytes.rst", "pymap.cluster.rst", "pymap.concurrent.rst", "pymap.config.rst", "pymap.context.rst", "pymap.exceptions.rst", "pymap.fetch.rst", "pymap.filter.rst", "pymap.flags.rst", "pymap.imap.rst", "pymap.interfaces.rst", "pymap.listtree.rst", "pymap.mailbox.rst", "pymap.message.rst", "pymap.mime.rst", "pymap.parsing.rst", "pymap.plugin.rst", "pymap.search.rst", "pymap.selected.rst", "pymap.service.rst", "pymap.sieve.rst", "pymap.sockets.rst", "pymap.threads.rst", "pymap.token.rst", "pymap.user.rst"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap</span></code> Documentation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.admin</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.backend</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.backend.dict</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.backend.maildir</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.backend.redis</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.bytes</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.cluster</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.concurrent</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.config</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.context</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.exceptions</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.filter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.flags</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.imap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.interfaces</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.listtree</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.mailbox</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.message</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.mime</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.parsing</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.plugin</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.selected</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.service</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.sieve</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.sockets</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.token</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pymap.user</span></code>"], "terms": {"byte": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 23, 26, 29, 30], "concurr": [0, 9, 10, 21, 24], "config": [0, 1, 2, 3, 4, 5, 7, 15, 16, 26, 29, 30], "context": [0, 1, 9, 12, 21], "except": [0, 1, 2, 7, 13, 16, 26, 30], "fetch": [0, 2, 16, 19, 21, 24], "filter": [0, 1, 2, 5, 14, 17, 21, 26], "flag": [0, 2, 16, 18, 19, 21, 23, 24], "listtre": [0, 2], "mailbox": [0, 1, 4, 5, 11, 12, 14, 17, 19, 21, 23, 24, 26], "messag": [0, 1, 2, 4, 5, 9, 11, 12, 14, 18, 20, 23, 24, 26, 28], "search": [0, 2, 11, 16, 19, 21], "select": [0, 2, 12, 14, 16, 21, 23], "socket": [0, 9, 15, 26], "interfac": [0, 3, 4, 5, 18, 19, 24], "pars": [0, 2, 3, 4, 5, 9, 14, 16, 18, 19, 24, 26, 29], "mime": [0, 16, 19, 21], "thread": [0, 8, 9, 16, 19, 21, 30], "plugin": [0, 1, 2, 13, 15, 25, 29], "servic": [0, 1, 7, 9, 15, 16, 26, 27], "user": [0, 1, 2, 5, 9, 11, 16, 21], "backend": [0, 1, 7, 9, 10, 11, 15, 18, 21, 24, 26], "dict": [0, 2, 20], "maildir": [0, 2], "redi": [0, 2], "imap": [0, 3, 4, 5, 9, 10, 11, 14, 16, 20, 21, 23, 29], "admin": [0, 9, 29], "cluster": [0, 10], "token": [0, 1, 9, 16, 30], "siev": 0, "index": [0, 16, 19], "modul": [0, 11, 14, 21], "page": 0, "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "adminservic": 1, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "A": [1, 3, 4, 5, 6, 7, 15, 20, 21, 22, 24, 26, 29, 30], "implement": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30], "grpc": 1, "server": [1, 5, 9, 10, 11, 15, 16, 21, 26], "perform": [1, 2, 6, 16], "function": [1, 7, 16, 18, 29, 30], "run": [1, 2, 7, 8, 15, 16, 24, 26], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 27, 29, 30], "can": [1, 6, 7, 9, 14, 15, 16, 18, 19, 20, 21, 29], "expos": 1, "privat": [1, 9, 16, 29, 30], "public": 1, "mode": [1, 2, 16, 21, 24], "doe": [1, 2, 4, 5, 13, 16, 17, 21, 23, 27], "ssl": [1, 9], "tl": [1, 9, 21], "encrypt": [1, 21], "authent": [1, 2, 3, 4, 5, 9, 11, 15, 16, 21, 26, 29, 30], "i": [1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "requir": [1, 12, 16, 18, 19, 21, 23], "so": [1, 16, 19, 20, 21], "should": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 20, 21, 23, 24, 26, 28], "appropri": 1, "firewal": 1, "both": [1, 16], "client": [1, 9, 10, 14, 21, 24], "provid": [1, 6, 8, 11, 12, 20, 21, 27, 29, 30], "credenti": [1, 3, 4, 5, 9, 11, 15, 16, 21, 26, 29, 30], "being": [1, 14, 16, 21, 29], "oper": [1, 2, 6, 9, 11, 14, 16, 17, 21, 24], "e": [1, 4, 10, 16, 17, 20, 21, 23, 29, 30], "g": [1, 4, 10, 16, 17, 20, 21, 29, 30], "chang": [1, 2, 7, 16, 21, 22, 24], "own": [1, 2, 16, 24], "password": [1, 3, 4, 9, 16, 21, 30], "cannot": [1, 11, 21, 24], "anoth": [1, 8, 11, 24], "": [1, 12, 16, 19, 21, 24, 30], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "cli": 1, "mai": [1, 2, 11, 16, 19, 20, 21, 22, 23, 24, 29], "interact": [1, 15, 21], "serv": 1, "refer": [1, 2, 16, 17, 20, 21, 28], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "backendinterfac": [1, 2, 7, 15, 16, 26], "imapconfig": [1, 3, 4, 5, 7, 9, 15, 16, 26, 29, 30], "classmethod": [1, 3, 4, 5, 6, 7, 8, 9, 15, 16, 18, 20, 21, 23, 26, 27, 28, 30], "add_argu": [1, 3, 4, 5, 7, 15, 16, 26], "parser": [1, 3, 4, 5, 7, 15, 16, 26], "add": [1, 2, 3, 4, 5, 7, 13, 14, 15, 16, 17, 21, 22, 24, 26, 30], "argument": [1, 2, 3, 4, 5, 7, 8, 9, 15, 16, 18, 19, 21, 24, 26], "group": [1, 5, 7, 15, 16, 19, 21, 22, 26], "configur": [1, 7, 9, 15, 16, 26, 29, 30], "For": [1, 3, 4, 5, 7, 8, 15, 16, 19, 21, 24, 26, 29], "exampl": [1, 3, 4, 5, 6, 7, 15, 16, 19, 20, 21, 22, 24, 26], "add_argument_group": [1, 7, 15, 16, 26], "foo": [1, 3, 4, 5, 7, 15, 16, 26], "argumentpars": [1, 3, 4, 5, 7, 15, 16, 26], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30], "async": [1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 21, 26, 30], "start": [1, 2, 3, 4, 5, 7, 14, 15, 16, 20, 21, 26], "stack": [1, 3, 4, 5, 7, 15, 16, 26], "asyncexitstack": [1, 3, 4, 5, 7, 10, 15, 16, 26], "an": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 26, 29, 30], "exit": [1, 3, 4, 5, 7, 10, 12, 15, 16, 26], "cleanup": [1, 2, 3, 4, 7, 15, 16, 26], "error": [1, 9, 11, 21], "get_unimplemented_error": 1, "domain": 1, "metadata": [1, 2, 4, 7, 10, 16, 19, 21, 22, 24, 29, 30], "build": [1, 9, 11, 16, 19, 21], "grpcerror": 1, "str": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30], "string": [1, 4, 6, 9, 10, 16, 17, 19, 21, 22, 23, 29, 30], "includ": [1, 4, 5, 14, 16, 17, 19, 20, 21, 24], "addit": [1, 2, 9, 16, 21, 30], "get_incompatible_version_error": 1, "client_vers": 1, "server_vers": 1, "incompat": [1, 11], "version": [1, 28], "arg": [1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 16, 21], "kwarg": [1, 2, 4, 6, 7, 12, 13, 16, 24], "defin": [1, 3, 4, 5, 6, 12, 14, 15, 16, 18, 21, 23, 24], "protocol": [1, 6, 7, 9, 12, 16, 21], "remov": [1, 2, 4, 7, 8, 14, 16, 17, 24, 30], "grpclib": 1, "_type": 1, "iserv": 1, "becom": 1, "api": 1, "basehandl": 1, "regist": [1, 2, 7, 13, 16, 21, 22, 25, 29], "new": [1, 2, 3, 4, 5, 7, 8, 9, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30], "base": [1, 2, 4, 6, 8, 11, 12, 13, 16, 18, 19, 21, 23, 26, 29], "request": [1, 11, 16, 21], "system": [1, 4, 16, 19, 21, 22], "catch_error": 1, "command": [1, 3, 4, 5, 9, 10, 11, 15, 16, 24, 26], "manag": [1, 2, 4, 5, 10, 12, 16, 21, 23, 24, 27], "catch": 1, "responseerror": [1, 11], "them": [1, 2, 7, 16, 21], "respons": [1, 2, 11, 15, 16, 17, 24, 26], "name": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 27], "asyncgener": 1, "result": [1, 5, 8, 9, 14, 16, 17, 19, 21, 26], "login_with": 1, "login": [1, 2, 3, 4, 5, 11, 15, 21, 26, 29, 30], "given": [1, 2, 3, 4, 5, 7, 8, 9, 14, 16, 17, 19, 21, 23, 24, 26, 27, 29, 30], "get": [1, 2, 4, 13, 14, 16, 17, 19, 24, 27], "ident": [1, 2, 11, 16, 29, 30], "object": [1, 2, 3, 4, 5, 6, 7, 10, 12, 15, 16, 19, 20, 21, 22, 23, 24, 26, 29, 30], "servercredenti": [1, 9, 16, 30], "sasl": [1, 2, 16, 21], "rais": [1, 2, 4, 7, 11, 13, 16, 21, 22, 26, 27, 29, 30], "invalidauth": [1, 11, 16, 30], "authorizationfailur": [1, 11, 16], "identityinterfac": [1, 16], "login_a": 1, "from": [1, 2, 3, 4, 5, 7, 9, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28], "stream": [1, 6, 15, 20, 21, 26], "author": [1, 2, 11, 16, 29], "map": [1, 3, 4, 5, 7, 9, 14, 20, 21, 22, 30], "abstractasynccontextmanag": [1, 8, 16], "with_sess": 1, "creat": [1, 2, 8, 9, 11, 15, 16, 18, 20, 21, 26, 29, 30], "mail": [1, 4, 5], "session": [1, 5, 14, 18, 19, 21, 23, 24], "sessioninterfac": [1, 2, 15, 16, 26], "systemhandl": 1, "execut": [1, 5, 8, 10, 11, 21], "when": [1, 7, 8, 10, 11, 12, 14, 15, 16, 19, 21, 23, 24, 26, 29], "receiv": [1, 9, 11, 15, 21, 26], "each": [1, 4, 6, 8, 20, 21, 24, 29], "take": [1, 15, 21, 26], "action": [1, 3, 4, 5, 11, 16, 26], "send": [1, 11, 16, 21], "see": [1, 21], "help": [1, 3, 4, 5, 11, 16], "more": [1, 6, 20, 21], "option": [1, 5, 9, 11, 16, 19, 21], "ping": 1, "respond": [1, 21], "mailboxhandl": 1, "append": [1, 2, 5, 9, 11, 16, 21, 26], "directli": [1, 21], "If": [1, 2, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 28, 30], "filter_set": [1, 2, 5, 16], "activ": [1, 2, 5, 9, 10, 13, 16, 23], "appli": [1, 5, 9, 14, 16, 26], "discard": [1, 7, 16, 26, 30], "modifi": [1, 7, 16, 21], "place": [1, 21], "specif": [1, 21, 29], "cat": 1, "txt": 1, "com": 1, "userhandl": 1, "getus": 1, "setus": 1, "set": [1, 2, 4, 7, 8, 9, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 29, 30], "deleteus": 1, "delet": [1, 2, 8, 11, 13, 14, 16, 21, 24], "dictbackend": [2, 3], "statu": [2, 3, 4, 5, 10, 13, 16, 21], "add_subpars": [2, 3, 4, 5, 16], "init": [2, 3, 4, 5, 7, 16], "backend_cap": [2, 3, 4, 5, 9], "demo_data": [2, 3], "demo_data_resourc": [2, 3], "demo_us": [2, 3], "demo_password": [2, 3], "parse_arg": [2, 3, 4, 5, 9], "maildirbackend": [2, 4], "base_dir": [2, 4], "layout": 2, "colon": [2, 4], "maildirflag": [2, 4], "permanent_flag": [2, 4, 16, 18, 19, 24], "system_flag": [2, 4], "keyword": [2, 3, 4, 5, 9, 16, 21], "to_maildir": [2, 4], "from_maildir": [2, 4], "maildirlayout": [2, 4], "path": [2, 3, 4, 8], "get_path": [2, 4], "list_fold": [2, 4], "get_fold": [2, 4], "add_fold": [2, 4], "remove_fold": [2, 4], "rename_fold": [2, 4], "defaultlayout": [2, 4], "filesystemlayout": [2, 4], "subscript": [2, 16], "subscrib": [2, 4, 16, 21], "uidlist": 2, "record": [2, 4], "kei": [2, 4, 7, 9, 11, 16, 20, 21, 22, 23, 28, 29, 30], "file_nam": [2, 4], "lock_fil": [2, 4], "get_al": [2, 4, 7, 13, 16, 21, 24, 28], "redisbackend": [2, 5], "address": [2, 5], "data_address": [2, 5], "separ": [2, 5, 21], "prefix": [2, 5, 21], "users_prefix": [2, 5], "rediskei": [2, 5], "fork": [2, 5, 24], "end": [2, 5, 16, 21], "keysgroup": [2, 5], "globalkei": [2, 5], "cleanupkei": [2, 5], "namespacekei": [2, 5], "contentkei": [2, 5], "filterkei": [2, 5], "mailboxkei": [2, 5], "cleanupact": [2, 5], "mailboxdatat": 2, "variabl": [2, 6, 8, 9, 10, 16, 21, 22], "upper": [2, 8, 9, 16, 21], "bound": [2, 6, 8, 9, 16, 21], "mailboxdatainterfac": 2, "alia": [2, 6, 8, 9, 14, 16, 21, 22], "typevar": [2, 6, 8, 9, 16, 21, 22], "ani": [2, 3, 4, 5, 6, 8, 9, 13, 14, 16, 17, 19, 20, 21, 23, 24, 29], "mailboxdatat_co": 2, "covari": [2, 16], "true": [2, 3, 8, 9, 11, 16, 17, 18, 19, 20, 21, 24, 26, 27], "associ": [2, 7, 14, 16, 21, 26, 30], "singl": [2, 4, 5, 13, 15, 16, 21, 24, 26, 28], "abstract": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 20, 21, 23, 26, 27], "properti": [2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30], "mailbox_id": [2, 5, 16, 18, 24], "objectid": [2, 9, 16, 18, 19, 21, 23, 24], "id": [2, 5, 16, 18, 19, 20, 21, 23, 24, 28], "readonli": [2, 16, 18, 21, 24], "bool": [2, 3, 4, 8, 9, 11, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30], "whether": [2, 16, 17, 21], "read": [2, 4, 8, 11, 12, 16, 18, 21, 24], "onli": [2, 11, 13, 14, 16, 18, 19, 21, 23, 24, 27], "write": [2, 6, 8, 12, 16, 20, 21], "uid_valid": [2, 4, 16, 18], "int": [2, 4, 5, 9, 14, 16, 18, 19, 20, 21, 23, 24], "uid": [2, 4, 14, 16, 18, 19, 21, 23, 24], "valid": [2, 3, 4, 11, 14, 16, 18, 20, 21, 29], "valu": [2, 4, 5, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 30], "frozenset": [2, 4, 14, 16, 18, 19, 21, 23, 29], "special": [2, 3, 4, 5, 9, 14, 16, 18, 19, 29], "perman": [2, 4, 13, 14, 16, 18, 19, 21, 23, 24], "allow": [2, 3, 4, 5, 8, 9, 11, 16, 21], "session_flag": [2, 14, 16, 18, 19, 24], "selected_set": [2, 24], "selectedset": [2, 24], "current": [2, 4, 5, 7, 8, 10, 13, 14, 16, 19, 21, 24], "update_select": 2, "wait_on": [2, 16], "popul": 2, "state": [2, 15, 16, 24], "need": [2, 3, 4, 5, 9, 21, 24], "discov": 2, "updat": [2, 4, 7, 10, 13, 14, 16, 17, 19, 21, 24], "selectedmailbox": [2, 12, 16, 23, 24], "event": [2, 8, 16], "block": [2, 8, 16, 30], "until": [2, 8, 16, 21, 24, 29], "signal": [2, 8, 16], "occur": [2, 20, 24], "append_msg": [2, 16, 26], "recent": [2, 14, 16, 18, 21, 23, 24], "fals": [2, 9, 11, 16, 17, 19, 21], "copi": [2, 16, 21, 24], "its": [2, 4, 8, 12, 13, 14, 16, 19, 20, 21], "assign": [2, 4, 5, 16, 21, 22, 24, 28, 30], "appendmessag": [2, 16, 21, 26], "data": [2, 3, 5, 6, 11, 16, 20, 21, 24, 26, 29, 30], "mark": [2, 16, 17, 24], "messaget_co": [2, 16], "destin": [2, 4, 21], "exist": [2, 4, 13, 14, 16, 17, 18, 21, 24], "self": [2, 5, 8, 21, 24], "move": [2, 16, 21], "cached_msg": 2, "cachedmessag": [2, 16, 24], "last": [2, 24], "known": [2, 7, 21, 30], "cach": [2, 16, 24], "flag_set": [2, 14, 16, 21, 24], "flag_op": [2, 24], "flagop": [2, 14, 16, 21, 24], "iter": [2, 4, 6, 9, 14, 16, 17, 18, 19, 20, 21, 23, 24, 30], "claim_rec": 2, "ar": [2, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 29], "newli": [2, 21], "ad": [2, 5, 7, 11, 14, 16, 17, 19, 20, 21, 24], "necessari": [2, 16, 21, 23, 24], "housekeep": [2, 16], "step": 2, "slow": 2, "thing": [2, 30], "like": [2, 4, 20, 21, 30], "garbag": [2, 7], "collect": [2, 7, 13, 16, 19, 21, 24, 30], "check_mailbox": [2, 16], "snapshot": [2, 18], "mailboxsnapshot": [2, 18], "find": [2, 16, 19, 23], "seq_set": [2, 21, 23, 24], "pair": [2, 21], "contain": [2, 4, 5, 10, 11, 13, 16, 19, 20, 21, 23, 24, 30], "sequenc": [2, 4, 5, 8, 9, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28], "number": [2, 9, 14, 16, 18, 20, 21, 24], "resolv": [2, 12], "sequenceset": [2, 16, 21, 23, 24], "desir": [2, 21], "asynciter": [2, 8, 12], "tupl": [2, 3, 4, 5, 13, 16, 17, 19, 20, 21, 24, 26], "find_delet": 2, "all": [2, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "have": [2, 16, 21, 24, 29], "possibl": [2, 16, 17, 21, 29], "mailboxsetinterfac": 2, "avail": [2, 4, 10, 12, 15, 16, 18, 19, 21, 27, 30], "delimit": [2, 4, 6, 17], "indic": [2, 6, 21, 24], "hierarchi": 2, "set_subscrib": 2, "unsubscrib": [2, 16, 21], "list_subscrib": 2, "list": [2, 4, 5, 9, 13, 16, 17, 19, 20, 21, 24, 26], "list_mailbox": [2, 16], "get_mailbox": [2, 16], "keyerror": [2, 4, 13, 16, 22], "did": [2, 4, 21], "add_mailbox": 2, "create_mailbox": [2, 16], "valueerror": [2, 4, 13, 16, 21, 29], "alreadi": [2, 4, 13, 16, 21, 30], "delete_mailbox": [2, 16], "rename_mailbox": [2, 16], "befor": [2, 8, 9, 16, 21], "after": [2, 11, 16, 20, 21], "renam": [2, 4, 11, 13, 16, 17, 21], "basesess": 2, "owner": [2, 5, 16], "intend": [2, 6, 13, 16, 17, 21, 26], "most": [2, 16, 21], "log": [2, 12, 16, 21], "filtersetinterfac": [2, 16, 26], "inact": [2, 5, 16], "close": [2, 10, 11, 16, 21], "call": [2, 6, 7, 8, 14, 16, 20, 21, 24, 27], "clean": [2, 5, 16], "up": [2, 4, 5, 16, 21], "resourc": [2, 3, 16], "everi": [2, 16, 18, 21], "success": [2, 8, 16], "failur": [2, 16, 21], "method": [2, 3, 4, 5, 6, 9, 14, 16, 21, 23, 24], "silent": [2, 16, 21], "ignor": [2, 16], "ref_nam": [2, 16, 17, 21], "filter_": [2, 16, 17, 21], "rfc": [2, 14, 16, 17, 19, 21, 26], "3501": [2, 14, 16, 17, 19, 21], "6": [2, 16, 17, 19, 21], "3": [2, 9, 14, 16, 17, 19, 21], "8": [2, 16, 21], "9": [2, 16], "wildcard": [2, 14, 16, 17, 21], "applic": [2, 16, 29], "abc": [2, 13, 16, 24], "retriev": [2, 16, 27], "mailboxinterfac": [2, 16, 18], "correspond": [2, 4, 5, 16, 21], "yet": [2, 16, 21], "mailboxnotfound": [2, 11, 16], "mailboxconflict": [2, 11, 16], "4": [2, 8, 16, 21], "mailboxhaschildren": [2, 11, 16], "before_nam": [2, 13, 16], "after_nam": [2, 13, 16], "5": [2, 8, 9, 16, 17, 19, 21, 26], "folder": [2, 4, 16], "append_messag": [2, 16], "3502": [2, 16, 21], "11": [2, 16, 21], "appendfailur": [2, 11, 16, 26], "code": [2, 4, 10, 11, 16, 21], "appenduid": [2, 16, 21], "select_mailbox": [2, 16], "other": [2, 3, 4, 5, 7, 8, 9, 11, 14, 16, 21, 24], "1": [2, 4, 8, 14, 16, 19, 21], "2": [2, 14, 16, 19, 21], "check": [2, 6, 16, 19, 21, 23, 24, 29, 30], "either": [2, 8, 16, 21, 23, 29], "ha": [2, 4, 7, 8, 11, 14, 16, 17, 19, 21, 23, 24, 30], "detect": [2, 11, 16, 19, 24], "continu": [2, 16, 21], "long": [2, 16, 29], "hous": [2, 16], "keep": [2, 7, 14, 16], "which": [2, 3, 4, 16, 19, 20, 21, 24, 26], "slower": [2, 16], "2177": [2, 16, 21], "fetch_messag": [2, 16], "sequence_set": [2, 16, 23], "set_seen": [2, 16], "load": [2, 3, 12, 16, 19, 22], "seen": [2, 16, 21, 24], "messaget": [2, 16], "search_mailbox": [2, 16], "meet": [2, 16, 21], "criteria": [2, 16, 21, 23], "7": [2, 16, 21], "searchkei": [2, 11, 16, 21, 23], "specifi": [2, 16, 21], "expunge_mailbox": [2, 16], "uid_set": [2, 16, 21], "immedi": [2, 11, 16, 20, 21], "expung": [2, 16, 19, 21, 24], "4315": [2, 16, 21], "mailboxreadonli": [2, 11, 16], "copy_messag": [2, 16], "copyuid": [2, 16, 21], "move_messag": [2, 16], "6851": [2, 16, 21], "update_flag": [2, 16], "replac": [2, 13, 14, 16, 21, 24], "memori": [3, 16], "dictionari": [3, 4, 5, 9, 20, 21], "usag": 3, "integr": 3, "test": 3, "handl": [3, 4, 5, 16, 21], "healthstatu": [3, 4, 5, 16], "health": [3, 4, 5, 16], "subpars": [3, 4, 5, 16], "line": [3, 4, 5, 9, 16, 20, 21], "sub": [3, 4, 5, 9, 13, 16, 19, 20, 21, 23, 26], "choos": [3, 4, 5, 16], "add_pars": [3, 4, 5, 16], "overrid": [3, 4, 5, 9, 16], "initi": [3, 4, 5, 7, 16, 21, 30], "instanc": [3, 4, 5, 7, 16, 19, 26], "namespac": [3, 4, 5, 9, 16], "constructor": [3, 4, 5, 9, 16, 18], "admin_kei": [3, 9, 29], "extra": [3, 4, 5, 9, 20], "backendcap": [3, 4, 5, 9], "declar": [3, 4, 5, 9, 13], "support": [3, 4, 5, 9, 11, 16, 20, 24, 26, 27, 29], "extens": [3, 4, 5, 9, 21, 26], "capabl": [3, 4, 5, 9, 21, 29], "demo": 3, "startup": 3, "file": [3, 4, 8], "default": [3, 4, 5, 9, 10, 13, 21, 22, 23, 29], "demous": 3, "demopass": 3, "pass": [3, 4, 5, 7, 9, 21], "disk": 4, "storag": [4, 5], "mailboxformat": 4, "directori": 4, "rel": 4, "info": 4, "filenam": 4, "hash_interfac": 4, "hash": [4, 9, 21, 30], "algorithm": [4, 29, 30], "note": 4, "maintain": [4, 13, 16, 24], "non": [4, 9, 21, 24], "standard": [4, 20], "custom": [4, 9, 11, 20], "format": [4, 6, 11, 21], "might": [4, 11, 21, 24], "look": 4, "0": [4, 8, 9, 21], "junk": 4, "nonjunk": 4, "lower": [4, 20], "case": [4, 14, 16, 20, 21], "letter": 4, "b": [4, 6, 12, 20, 21, 26], "etc": 4, "26": 4, "inbox": 4, "structur": [4, 5, 16, 19, 21, 23], "maildir_typ": 4, "root": [4, 5], "f": 4, "_maildirt": 4, "wa": [4, 7, 8, 11, 16, 19, 20, 21, 22, 24, 29], "recogn": [4, 21], "nest": [4, 5, 16, 17, 19, 20, 21], "part": [4, 7, 16, 17, 19, 20, 21], "top": 4, "travers": 4, "through": [4, 20, 21], "heirarchi": [4, 17, 21], "filenotfounderror": 4, "fileexistserror": 4, "parent": [4, 5, 11, 21], "oserror": 4, "With": 4, "enotempti": 4, "source_nam": 4, "dest_nam": 4, "trash": 4, "import": [4, 22], "To": [4, 20, 21, 28], "do": [4, 7, 14, 17, 21, 30], "misc": 4, "filesystem": [4, 8], "field": [4, 23], "next_uid": [4, 16, 18], "global_uid": 4, "next": [4, 16, 18, 21, 24], "128": 4, "bit": 4, "global": [4, 5, 24], "classvar": [4, 12, 21], "dovecot": 4, "store": [4, 21], "lock": [4, 8], "adjac": 4, "rec": 4, "differ": [5, 16, 21, 23], "segment": 5, "lookup": [5, 24, 29], "connect": [5, 9, 10, 11, 14, 15, 21, 26], "localhost": 5, "aioredi": 5, "create_connect": 5, "bytestr": [5, 6, 20, 21, 28, 30], "composit": 5, "users_kei": 5, "mailbox_set": 5, "mailboxset": 5, "filterset": 5, "joiner": 5, "complex": 5, "bytesformat": [5, 6], "join": [5, 6], "_valu": 5, "supportsbyt": [5, 6, 12, 21], "termin": [5, 21], "produc": [5, 6, 12, 16, 21, 23, 26, 29], "relat": [5, 11, 21], "same": [5, 16, 21, 23, 24, 26, 28], "consid": [5, 21, 23], "data_vers": 5, "must": [5, 13, 16, 17, 21, 23, 24, 26, 27, 29, 30], "compat": [5, 11, 16], "longer": [5, 29], "typic": [5, 21, 22, 24], "email_id": [5, 16, 19, 23], "content": [5, 12, 16, 19, 20, 21, 23, 26], "email": [5, 16, 19, 21], "global_kei": 5, "logic": [5, 12], "monitor": 5, "variou": [5, 23, 26], "entiti": 5, "util": [6, 8, 23], "work": [6, 14], "maybebyt": [6, 21], "typealia": [6, 21], "convert": 6, "maybebytest": [6, 21], "has_byt": 6, "__bytes__": 6, "typeguard": 6, "writestream": [6, 20, 21], "streamwrit": [6, 15, 26], "binaryio": 6, "where": [6, 16, 18, 20, 26], "written": [6, 12, 21, 24], "buffer": [6, 21], "writeabl": [6, 16, 19, 20, 21], "final": 6, "tobyt": 6, "back": 6, "empti": [6, 9, 17, 20, 21, 23], "wrap": 6, "concat": 6, "item": [6, 21], "writer": [6, 15, 20, 21, 26], "one": [6, 8, 16, 20, 21, 22, 29], "output": [6, 12, 15, 20, 21, 26], "how": [6, 9, 12, 21, 29], "helper": 6, "while": [6, 14, 21], "similar": 6, "builtin": 6, "cleaner": 6, "interpol": 6, "supportsindex": 6, "hello": 6, "world": 6, "two": [6, 14, 18, 21, 22, 28], "three": 6, "memberinterfac": 7, "hashabl": [7, 16, 19, 21, 28], "repres": [7, 16, 19, 21, 28], "member": [7, 28], "node": [7, 17], "listencallback": 7, "__call__": 7, "local": [7, 10], "been": [7, 16, 19, 21, 24, 30], "argt_contra": 7, "callback": [7, 15, 26], "listen": 7, "clustermetadata": [7, 10], "pertain": 7, "possibli": [7, 20, 21], "also": [7, 14, 16, 17, 20, 22, 24], "act": 7, "thei": [7, 12, 14, 17, 20, 28], "go": 7, "offlin": 7, "remot": [7, 10], "element": [7, 30], "absent": [7, 8, 30], "mutablemap": 7, "dissemin": 7, "rest": 7, "organ": 7, "whenev": 7, "weakli": 7, "referenc": 7, "automat": [7, 21], "argt": 7, "first": [7, 11, 16, 18, 21], "transport_typ": 7, "transport": 7, "swimservic": 7, "establish": [7, 8], "some": [8, 21, 23], "asyncio": [8, 15, 26], "primit": [8, 10], "subsystem": [8, 9, 10], "for_executor": 8, "executor": 8, "futur": [8, 16], "threadpoolexecutor": 8, "for_asyncio": 8, "for_thread": 8, "simpli": 8, "mean": 8, "await": 8, "run_in_executor": 8, "rett": 8, "new_rwlock": 8, "readwritelock": 8, "new_ev": 8, "wait": [8, 21], "releas": [8, 12], "or_ev": 8, "eventt": 8, "is_set": 8, "clear": [8, 21], "again": [8, 11], "timeout": [8, 21], "float": [8, 9], "maximum": [8, 9, 21], "time": [8, 16, 18, 21, 24, 27, 29], "second": [8, 9, 18], "read_lock": 8, "acquir": 8, "write_lock": 8, "filelock": 8, "expir": [8, 16, 29], "600": 8, "read_retry_delai": 8, "01": 8, "03": 8, "06": 8, "15": 8, "25": 8, "write_retry_delai": 8, "presenc": 8, "absenc": 8, "simul": 8, "present": 8, "gone": 8, "delai": [8, 9], "durat": 8, "sleep": 8, "exhaust": 8, "timeouterror": 8, "thrown": [8, 21], "older": 8, "than": 8, "ag": 8, "_delai": 8, "between": [8, 21], "attempt": [8, 16, 21, 29], "configt": 9, "configt_contra": 9, "contravari": 9, "idl": [9, 21], "object_id": [9, 21], "multi_append": 9, "multiappend": 9, "host": 9, "port": 9, "debug": 9, "ssl_context": 9, "tls_enabl": 9, "secure_auth": 9, "preauth_credenti": 9, "invalid_user_sleep": 9, "proxy_protocol": 9, "reject_dnsbl": 9, "hash_context": 9, "cpu_subsystem": [9, 30], "max_append_len": [9, 21], "1000000000": 9, "bad_command_limit": 9, "disable_search_kei": 9, "disable_idl": 9, "control": [9, 11, 21, 26], "what": [9, 21, 24], "print": 9, "stdout": 9, "sslcontext": 9, "opportunist": [9, 21], "altern": [9, 24], "you": 9, "cert_fil": 9, "key_fil": 9, "unrestrict": [9, 29], "access": [9, 10, 11, 12, 16, 29], "hashinterfac": 9, "cpu": 9, "heavi": 9, "small": 9, "pool": 9, "pre": 9, "fail": [9, 11, 21, 23, 26], "unrecogn": 9, "proxyprotocol": 9, "proxi": 9, "reject": [9, 11, 26], "dnsbl": 9, "length": [9, 21], "bodi": [9, 16, 19, 20, 21, 23, 26], "consecut": 9, "disconnect": [9, 21], "disabl": [9, 13, 16, 23], "circumst": 9, "from_arg": 9, "apply_context": 9, "made": [10, 21], "contextvar": 10, "_asynciosubsystem": 10, "current_command": 10, "socket_info": 10, "socketinfo": [10, 15, 26], "about": [10, 21, 24], "language_cod": 10, "languag": [10, 20, 21], "en": 10, "connection_exit": 10, "cluster_metadata": 10, "cluster_metdata": 10, "gener": [11, 12, 18, 21, 24], "get_respons": 11, "tag": [11, 21], "closeconnect": 11, "responseok": [11, 21], "notsupportederror": 11, "msg": [11, 23], "taken": 11, "syntact": 11, "responseno": [11, 21], "temporaryfailur": 11, "succe": [11, 21, 29], "tri": [11, 29], "inus": 11, "searchnotallow": 11, "could": [11, 21], "invalid": [11, 21], "were": 11, "notallowederror": 11, "due": [11, 21], "incompatibledata": 11, "becaus": [11, 14, 21], "mailboxerror": 11, "responsecod": [11, 21], "try_creat": 11, "found": 11, "conflict": 11, "inferior": [11, 17], "hierarch": [11, 17], "below": 11, "open": [11, 21], "usernotfound": [11, 16], "loadedmessageprovid": 12, "loaded_msg": [12, 23], "loadedmessageinterfac": [12, 16, 23], "dynamicfetchvalu": 12, "attribut": [12, 17, 21, 24], "dynam": [12, 21], "fetchattribut": [12, 21], "messageinterfac": [12, 16, 19, 23], "get_valu": 12, "comput": 12, "dynamicloadedfetchvalu": 12, "get_load": 12, "messageattribut": 12, "placehold": [12, 21], "load_hook": 12, "entri": [12, 13, 16, 17, 21, 22], "outsid": 12, "consol": 12, "filtercompilerinterfac": [13, 16], "compil": [13, 16, 26], "pluginfilterset": 13, "plugin_nam": 13, "value_typ": [13, 16, 26], "point": [13, 15, 16, 22], "filtercompil": 13, "filtervaluet": [13, 16], "represent": [13, 16], "singlefilterset": 13, "put": [13, 16], "clear_act": [13, 16], "set_act": [13, 16], "replace_act": 13, "get_act": [13, 16], "conveni": [14, 21], "qualnam": [14, 21], "boundari": [14, 21], "operand": [14, 21], "permanentflag": [14, 21, 24], "track": [14, 16], "simpl": 14, "intersect": 14, "enough": 14, "out": 14, "unknown": 14, "subset": [14, 16, 19, 21, 24], "make": [14, 24], "equival": [14, 20, 30], "perm_flag": 14, "other_flag": 14, "sessionflag": [14, 16, 19, 24], "persist": 14, "op": [14, 23], "add_rec": 14, "recent_uid": 14, "imapservic": 15, "imapserv": 15, "callabl": [15, 22, 26], "imapconnect": 15, "start_serv": [15, 26], "logininterfac": [15, 16, 26], "reader": [15, 26], "sock_info": [15, 26], "finish": [15, 21, 24, 26], "streamread": [15, 26], "input": [15, 21, 26], "commun": [15, 26], "greet": [15, 21, 26], "enter": [15, 21, 26], "cycl": [15, 26], "connectionst": 15, "flow": 15, "determin": [15, 24, 26], "process": [15, 16, 20, 21, 23, 27], "expect": [16, 21, 23], "themselv": 16, "serviceinterfac": [16, 25], "flagskei": 16, "comparison": [16, 24, 30], "untag": [16, 21, 24], "sent": [16, 21, 24], "uniqu": [16, 21, 24], "identifi": [16, 19, 21, 22, 24, 29], "internal_d": [16, 19], "datetim": [16, 19, 21, 23, 29], "intern": [16, 19, 21, 23], "date": [16, 19, 20, 21, 23], "thread_id": [16, 19, 23, 28], "flags_kei": [16, 19], "get_flag": [16, 19], "full": [16, 18, 19, 20], "8474": [16, 19, 21], "togeth": [16, 19], "load_cont": 16, "fetchrequir": [16, 19, 21], "header": [16, 19, 20, 21, 23, 28], "neither": [16, 17], "depend": [16, 21], "It": 16, "assum": [16, 29], "entir": [16, 18, 24], "As": [16, 21], "multipl": [16, 20], "scope": 16, "get_head": [16, 19], "section": [16, 19, 21], "would": [16, 19, 21], "2nd": [16, 19], "3rd": [16, 19], "get_message_head": [16, 19], "invers": [16, 19, 21], "rfc822": [16, 19, 20, 21], "invert": [16, 19, 21], "get_message_text": [16, 19], "text": [16, 19, 21], "get_bodi": [16, 19], "binari": [16, 19, 21], "decod": [16, 19, 20, 21], "transfer": [16, 19, 20, 21], "encod": [16, 19, 20, 21], "get_siz": [16, 19], "size": [16, 19, 21, 23], "octet": [16, 19, 21], "get_envelope_structur": [16, 19], "envelop": [16, 19, 21, 23, 26], "envelopestructur": [16, 19, 21], "get_body_structur": [16, 19], "bodystructur": [16, 19, 21], "optim": [16, 19, 21, 24], "describ": 16, "relationship": 16, "re": [16, 20], "total": [16, 18, 24], "unseen": [16, 18, 21, 23], "first_unseen": [16, 18], "predict": [16, 18], "tokensinterfac": 16, "creation": [16, 29], "bearer": 16, "suppli": [16, 23], "authzid": [16, 29], "successfulli": [16, 21], "role": [16, 29, 30], "grant": [16, 29], "new_sess": 16, "new_token": 16, "sinc": 16, "stop": 16, "usermetadata": [16, 30], "filterinterfac": 16, "trigger": 16, "extern": [16, 21], "vacat": 16, "auto": 16, "smtp": 16, "endpoint": 16, "sender": [16, 20, 21, 26], "recipi": [16, 26], "usual": [16, 26, 27], "filter_typ": [16, 26], "intention": 16, "resembl": 16, "managesiev": [16, 26], "5804": [16, 26], "listentri": 17, "has_children": 17, "noselect": 17, "unmark": 17, "respect": 17, "haschildren": 17, "hasnochildren": 17, "3348": 17, "construct": [17, 21], "tree": 17, "superior": 17, "unreferenc": 17, "fill": 17, "miss": 17, "set_mark": 17, "get_renam": 17, "from_nam": 17, "to_nam": 17, "well": [17, 24], "origin": [17, 20, 21], "list_match": 17, "match": [17, 23, 26], "queri": [17, 21], "static": 18, "consist": 18, "new_uid_valid": 18, "random": [18, 21, 24], "basemessag": 19, "baseloadedmessag": 19, "messagecont": [19, 20, 26], "liter": [20, 21], "messagehead": [20, 28], "messagebodi": 20, "walk": 20, "order": [20, 24], "is_rfc822": 20, "json": 20, "serial": [20, 21, 29], "without": [20, 21], "from_json": 20, "recov": 20, "raw": [20, 21], "In": [20, 21, 24, 28], "content1": 20, "content2": 20, "previous": [20, 24], "fold": 20, "form": [20, 21], "n": 20, "onto": 20, "subsequ": [20, 24], "whitespac": 20, "_line": 20, "_fold": 20, "demand": 20, "content_typ": 20, "contenttypehead": 20, "has_nest": 20, "compos": [20, 23, 28], "messagedecod": 20, "decid": 20, "registri": 20, "msg_header": 20, "of_ct": 20, "There": 20, "built": [20, 21], "7bit": 20, "8bit": 20, "quot": [20, 21], "printabl": 20, "base64": 20, "overridden": [20, 26], "contenttransferencodinghead": 20, "parsedhead": 20, "headerregistri": 20, "_header": 20, "datehead": [20, 21], "subject": [20, 21, 28], "unstructuredhead": [20, 21], "from_": [20, 21], "addresshead": [20, 21], "singleaddresshead": [20, 21], "reply_to": [20, 21], "repli": [20, 21, 28], "cc": [20, 21], "bcc": [20, 21], "in_reply_to": [20, 21], "message_id": [20, 21], "content_disposit": [20, 21], "contentdispositionhead": [20, 21], "disposit": [20, 21], "content_languag": [20, 21], "content_loc": [20, 21], "locat": [20, 21, 29], "content_id": [20, 21], "content_descript": [20, 21], "descript": [20, 21], "content_transfer_encod": [20, 21], "packag": 21, "parseablet": 21, "parseabl": 21, "anypars": 21, "unspecifi": 21, "param": [21, 23, 30], "list_expect": 21, "command_nam": 21, "charset": 21, "allow_continu": 21, "around": 21, "among": 21, "parsingst": 21, "mutabl": 21, "came": 21, "charact": 21, "inherit": [21, 27], "formal": 21, "syntax": 21, "primari": 21, "buf": 21, "memoryview": 21, "expectedpars": 21, "instanti": 21, "space": 21, "least": 21, "endlin": 21, "preceding_spac": 21, "carriage_return": 21, "zero": 21, "follow": 21, "character": 21, "newlin": 21, "carriag": 21, "notpars": 21, "invalidcont": 21, "correct": 21, "someth": 21, "fit": 21, "unexpectedtyp": 21, "parsingexpectedt": 21, "dure": [21, 24], "advanc": 21, "proce": 21, "linear": 21, "prevent": [21, 24], "cyclic": [21, 22], "interrupt": 21, "parsinginterrupt": 21, "met": 21, "caller": 21, "parsingexpect": 21, "consum": 21, "piec": 21, "far": 21, "builtin_command": 21, "capabilitycommand": 21, "logoutcommand": 21, "noopcommand": 21, "auth": 21, "appendcommand": 21, "createcommand": 21, "deletecommand": 21, "examinecommand": 21, "listcommand": 21, "lsubcommand": 21, "renamecommand": 21, "selectcommand": 21, "statuscommand": 21, "subscribecommand": 21, "unsubscribecommand": 21, "nonauth": 21, "authenticatecommand": 21, "logincommand": 21, "starttlscommand": 21, "checkcommand": 21, "closecommand": 21, "expungecommand": 21, "copycommand": 21, "movecommand": 21, "fetchcommand": 21, "storecommand": 21, "searchcommand": 21, "uidcommand": 21, "uidcopycommand": 21, "uidmovecommand": 21, "uidexpungecommand": 21, "uidfetchcommand": 21, "uidsearchcommand": 21, "uidstorecommand": 21, "idlecommand": 21, "These": 21, "invalidcommand": 21, "parse_exc": 21, "command_typ": 21, "caus": 21, "noop": 21, "bad": 21, "abil": [21, 24, 27], "cmd": [21, 26], "deregist": 21, "noth": [21, 23], "basic": 21, "complet": [21, 24], "begin": 21, "deleg": 21, "compound": 21, "commandnoarg": 21, "commandani": 21, "stage": 21, "commandauth": 21, "commandnonauth": 21, "commandselect": 21, "logout": 21, "mech_nam": 21, "mechan": [21, 29], "userid": 21, "starttl": 21, "handshak": 21, "issu": 21, "cancel": 21, "timestamp": 21, "extensionopt": 21, "examin": 21, "only_subscrib": 21, "lsub": 21, "from_mailbox": 21, "to_mailbox": 21, "unless": [21, 23, 24], "status_list": 21, "inform": 21, "statusattribut": 21, "synchron": [21, 24], "eras": 21, "attr_list": 21, "depth": 21, "preced": 21, "instead": [21, 24], "variant": 21, "done": 21, "actual": 21, "parse_don": 21, "crlf": 21, "portion": 21, "requirescontinu": 21, "nil": 21, "alwai": [21, 23], "num": 21, "integ": 21, "atom": 21, "sort": 21, "get_a": 21, "cl": 21, "deriv": 21, "transmit": 21, "fallback": 21, "quotedstr": 21, "literalstr": 21, "improv": 21, "readabl": 21, "encas": 21, "doubl": 21, "astr": 21, "addition": 21, "squar": 21, "bracket": 21, "unquot": 21, "datetime_": 21, "get_local_tzinfo": 21, "timezon": 21, "tzinfo": 21, "fetchattr": 21, "fetchparti": 21, "substr": 21, "fulfil": 21, "No": 21, "has_al": 21, "has_non": 21, "reduc": 21, "partial": 21, "rang": 21, "come": 21, "within": [21, 23], "fetchvalu": 21, "is_system": 21, "get_system_flag": 21, "answer": 21, "draft": 21, "paren": 21, "surround": 21, "parenthes": 21, "digest": [21, 30], "new_mailbox_id": 21, "new_email_id": 21, "new_thread_id": 21, "random_mailbox_id": 21, "random_email_id": 21, "random_thread_id": 21, "mayb": 21, "not_defin": 21, "anystr": 21, "4466": 21, "just": 21, "NOT": 21, "_filtertyp": 21, "value_str": 21, "not_invers": 21, "flip": 21, "maxvalu": 21, "_seqelem": 21, "union": 21, "is_al": 21, "avoid": [21, 22, 30], "max_valu": 21, "flatten": 21, "seq": 21, "few": 21, "statusattr": 21, "valid_status": 21, "mailboxid": 21, "uidnext": 21, "uidvalid": 21, "along": [21, 28], "anonym": 21, "unsolicit": 21, "plu": 21, "asterisk": 21, "condit": [21, 26], "ok": 21, "is_termin": 21, "bye": 21, "is_bad": 21, "async_writ": 21, "asynchron": 21, "commandrespons": 21, "accord": 21, "rule": 21, "add_untag": 21, "shown": 21, "untaggedrespons": [21, 24], "add_untagged_ok": 21, "writing_hook": 21, "prior": 21, "detail": 21, "_writinghook": 21, "merge_kei": 21, "compar": [21, 23, 24, 30], "merg": 21, "typeerror": 21, "responset": 21, "mergeabl": 21, "responsecontinu": 21, "responsebad": 21, "encount": 21, "NO": 21, "responseby": 21, "reason": 21, "responsepreauth": 21, "preauth": 21, "server_cap": 21, "advertis": 21, "enclos": 21, "next_": 21, "correl": 21, "2180": 21, "maintyp": 21, "subtyp": 21, "content_type_param": 21, "main": [21, 30], "extend": 21, "multipartbodystructur": 21, "multipart": 21, "contentbodystructur": 21, "body_md5": 21, "_ctehead": 21, "md5": 21, "textbodystructur": 21, "messagebodystructur": 21, "envelope_structur": 21, "body_structur": 21, "flagsrespons": 21, "existsrespons": 21, "recentrespons": 21, "expungerespons": 21, "fetchrespons": 21, "119": 21, "searchrespons": 21, "esearchrespons": 21, "issuer_tag": 21, "esearch": 21, "mutual": 21, "exclus": 21, "statusrespons": 21, "listrespons": 21, "sep": 21, "attr": 21, "lsubrespons": 21, "utf": 21, "modutf7_encod": 21, "modutf7_decod": 21, "factori": [21, 23], "plugint": 22, "importlib": 22, "exampletwo": 22, "exampleon": 22, "lazi": 22, "decor": 22, "searchparam": 23, "certain": 23, "routin": 23, "kind": 23, "max_seq": 23, "highest": [23, 24], "max_uid": [23, 24], "searchcriteria": 23, "msg_seq": 23, "searchcriteriaset": 23, "against": [23, 24, 29, 30], "inversesearchcriteria": 23, "allsearchcriteria": 23, "anyth": 23, "orsearchcriteria": 23, "left": 23, "right": 23, "sequencesetsearchcriteria": 23, "hasemailidsearchcriteria": 23, "hasthreadidsearchcriteria": 23, "hasflagsearchcriteria": 23, "newsearchcriteria": 23, "datesearchcriteria": 23, "headerdatesearchcriteria": 23, "sizesearchcriteria": 23, "envelopesearchcriteria": 23, "headersearchcriteria": 23, "bodysearchcriteria": 23, "weak": 24, "across": 24, "notifi": 24, "any_select": 24, "chosen": 24, "synchronizedmessag": 24, "get_uid": 24, "Then": 24, "fresh": 24, "kept": 24, "mod_sequ": 24, "modif": 24, "hide_expung": 24, "adjust": 24, "add_upd": 24, "minim": 24, "lack": 24, "set_messag": 24, "set_delet": 24, "silenc": 24, "But": 24, "reflect": 24, "readi": 24, "sieveparseerror": 26, "script": 26, "sievecompil": 26, "sievefilt": 26, "fileinto": 26, "runner": 26, "ultim": 26, "sieverunn": 26, "sievetest": 26, "5228": 26, "managesieveservic": 26, "managesieveserv": 26, "managesieveconnect": 26, "inheritedsocket": 27, "framework": 27, "service_manag": 27, "guarante": 27, "systemd": 27, "for_systemd": 27, "python": 27, "librari": 27, "instal": 27, "sd_listen_fd": 27, "notimplementederror": 27, "threadkei": 28, "msg_id": 28, "link": 28, "normal": 28, "share": 28, "tokensbas": 29, "alltoken": 29, "get_login_token": 29, "authcid": [29, 30], "encapsul": 29, "facilit": 29, "verifi": [29, 30], "limit": 29, "arbitrari": 29, "shall": 29, "get_admin_token": 29, "tokencredenti": 29, "macaroontoken": 29, "macarooncredenti": 29, "prepar": [29, 30], "caveat": 29, "fromisoformat": 29, "usernam": [29, 30], "suffici": 29, "privileg": 29, "mechanismunus": 29, "userrol": 30, "token_kei": 30, "compare_secret": 30, "secret": 30, "account": 30, "get_clear_secret": 30, "cleartext": 30, "check_password": 30, "cred": 30}, "objects": {"pymap": [[1, 0, 0, "-", "admin"], [2, 0, 0, "-", "backend"], [6, 0, 0, "-", "bytes"], [7, 0, 0, "-", "cluster"], [8, 0, 0, "-", "concurrent"], [9, 0, 0, "-", "config"], [10, 0, 0, "-", "context"], [11, 0, 0, "-", "exceptions"], [12, 0, 0, "-", "fetch"], [13, 0, 0, "-", "filter"], [14, 0, 0, "-", "flags"], [15, 0, 0, "-", "imap"], [17, 0, 0, "-", "listtree"], [18, 0, 0, "-", "mailbox"], [19, 0, 0, "-", "message"], [20, 0, 0, "-", "mime"], [21, 0, 0, "-", "parsing"], [22, 0, 0, "-", "plugin"], [23, 0, 0, "-", "search"], [24, 0, 0, "-", "selected"], [25, 0, 0, "-", "service"], [26, 0, 0, "-", "sieve"], [27, 0, 0, "-", "sockets"], [28, 0, 0, "-", "threads"], [29, 0, 0, "-", "token"], [30, 0, 0, "-", "user"]], "pymap.admin": [[1, 1, 1, "", "AdminService"], [1, 0, 0, "-", "errors"], [1, 0, 0, "-", "handlers"], [1, 0, 0, "-", "typing"]], "pymap.admin.AdminService": [[1, 2, 1, "", "add_arguments"], [1, 2, 1, "", "start"]], "pymap.admin.errors": [[1, 3, 1, "", "get_incompatible_version_error"], [1, 3, 1, "", "get_unimplemented_error"]], "pymap.admin.handlers": [[1, 1, 1, "", "BaseHandler"], [1, 4, 1, "", "handlers"], [1, 0, 0, "-", "mailbox"], [1, 0, 0, "-", "system"], [1, 0, 0, "-", "user"]], "pymap.admin.handlers.BaseHandler": [[1, 2, 1, "", "catch_errors"], [1, 2, 1, "", "login_as"], [1, 2, 1, "", "login_with"], [1, 2, 1, "", "with_session"]], "pymap.admin.handlers.mailbox": [[1, 1, 1, "", "MailboxHandlers"]], "pymap.admin.handlers.mailbox.MailboxHandlers": [[1, 2, 1, "", "Append"]], "pymap.admin.handlers.system": [[1, 1, 1, "", "SystemHandlers"]], "pymap.admin.handlers.system.SystemHandlers": [[1, 2, 1, "", "Login"], [1, 2, 1, "", "Ping"]], "pymap.admin.handlers.user": [[1, 1, 1, "", "UserHandlers"]], "pymap.admin.handlers.user.UserHandlers": [[1, 2, 1, "", "DeleteUser"], [1, 2, 1, "", "GetUser"], [1, 2, 1, "", "SetUser"]], "pymap.admin.typing": [[1, 1, 1, "", "Handler"]], "pymap.backend": [[2, 4, 1, "", "backends"], [3, 0, 0, "-", "dict"], [2, 0, 0, "-", "mailbox"], [4, 0, 0, "-", "maildir"], [5, 0, 0, "-", "redis"], [2, 0, 0, "-", "session"]], "pymap.backend.dict": [[3, 1, 1, "", "Config"], [3, 1, 1, "", "DictBackend"]], "pymap.backend.dict.Config": [[3, 5, 1, "", "backend_capability"], [3, 5, 1, "", "demo_data"], [3, 5, 1, "", "demo_data_resource"], [3, 5, 1, "", "demo_password"], [3, 5, 1, "", "demo_user"], [3, 2, 1, "", "parse_args"]], "pymap.backend.dict.DictBackend": [[3, 2, 1, "", "add_subparser"], [3, 5, 1, "", "config"], [3, 2, 1, "", "init"], [3, 5, 1, "", "login"], [3, 2, 1, "", "start"], [3, 5, 1, "", "status"]], "pymap.backend.mailbox": [[2, 1, 1, "", "MailboxDataInterface"], [2, 1, 1, "", "MailboxDataT"], [2, 1, 1, "", "MailboxDataT_co"], [2, 1, 1, "", "MailboxSetInterface"]], "pymap.backend.mailbox.MailboxDataInterface": [[2, 2, 1, "", "append"], [2, 2, 1, "", "claim_recent"], [2, 2, 1, "", "cleanup"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "delete"], [2, 2, 1, "", "find"], [2, 2, 1, "", "find_deleted"], [2, 2, 1, "", "get"], [2, 5, 1, "", "mailbox_id"], [2, 2, 1, "", "move"], [2, 5, 1, "", "permanent_flags"], [2, 5, 1, "", "readonly"], [2, 5, 1, "", "selected_set"], [2, 5, 1, "", "session_flags"], [2, 2, 1, "", "snapshot"], [2, 5, 1, "", "uid_validity"], [2, 2, 1, "", "update"], [2, 2, 1, "", "update_selected"]], "pymap.backend.mailbox.MailboxSetInterface": [[2, 2, 1, "", "add_mailbox"], [2, 2, 1, "", "delete_mailbox"], [2, 5, 1, "", "delimiter"], [2, 2, 1, "", "get_mailbox"], [2, 2, 1, "", "list_mailboxes"], [2, 2, 1, "", "list_subscribed"], [2, 2, 1, "", "rename_mailbox"], [2, 2, 1, "", "set_subscribed"]], "pymap.backend.maildir": [[4, 1, 1, "", "Config"], [4, 1, 1, "", "MaildirBackend"], [4, 0, 0, "-", "flags"], [4, 0, 0, "-", "layout"], [4, 0, 0, "-", "subscriptions"], [4, 0, 0, "-", "uidlist"]], "pymap.backend.maildir.Config": [[4, 5, 1, "", "backend_capability"], [4, 5, 1, "", "base_dir"], [4, 5, 1, "", "colon"], [4, 5, 1, "", "layout"], [4, 2, 1, "", "parse_args"]], "pymap.backend.maildir.MaildirBackend": [[4, 2, 1, "", "add_subparser"], [4, 5, 1, "", "config"], [4, 2, 1, "", "init"], [4, 5, 1, "", "login"], [4, 2, 1, "", "start"], [4, 5, 1, "", "status"]], "pymap.backend.maildir.flags": [[4, 1, 1, "", "MaildirFlags"]], "pymap.backend.maildir.flags.MaildirFlags": [[4, 2, 1, "", "from_maildir"], [4, 5, 1, "", "keywords"], [4, 5, 1, "", "permanent_flags"], [4, 5, 1, "", "system_flags"], [4, 2, 1, "", "to_maildir"]], "pymap.backend.maildir.layout": [[4, 1, 1, "", "DefaultLayout"], [4, 1, 1, "", "FilesystemLayout"], [4, 1, 1, "", "MaildirLayout"]], "pymap.backend.maildir.layout.MaildirLayout": [[4, 2, 1, "", "add_folder"], [4, 2, 1, "", "get"], [4, 2, 1, "", "get_folder"], [4, 2, 1, "", "get_path"], [4, 2, 1, "", "list_folders"], [4, 5, 1, "", "path"], [4, 2, 1, "", "remove_folder"], [4, 2, 1, "", "rename_folder"]], "pymap.backend.maildir.subscriptions": [[4, 1, 1, "", "Subscriptions"]], "pymap.backend.maildir.subscriptions.Subscriptions": [[4, 2, 1, "", "add"], [4, 2, 1, "", "remove"], [4, 2, 1, "", "set"], [4, 5, 1, "", "subscribed"]], "pymap.backend.maildir.uidlist": [[4, 1, 1, "", "Record"], [4, 1, 1, "", "UidList"]], "pymap.backend.maildir.uidlist.Record": [[4, 5, 1, "", "key"]], "pymap.backend.maildir.uidlist.UidList": [[4, 6, 1, "", "FILE_NAME"], [4, 6, 1, "", "LOCK_FILE"], [4, 2, 1, "", "get"], [4, 2, 1, "", "get_all"], [4, 5, 1, "", "records"], [4, 2, 1, "", "remove"], [4, 2, 1, "", "set"]], "pymap.backend.redis": [[5, 1, 1, "", "Config"], [5, 1, 1, "", "RedisBackend"], [5, 1, 1, "", "Session"], [5, 0, 0, "-", "cleanup"], [5, 0, 0, "-", "keys"]], "pymap.backend.redis.Config": [[5, 5, 1, "", "address"], [5, 5, 1, "", "backend_capability"], [5, 5, 1, "", "data_address"], [5, 2, 1, "", "parse_args"], [5, 5, 1, "", "prefix"], [5, 5, 1, "", "separator"], [5, 5, 1, "", "users_prefix"]], "pymap.backend.redis.RedisBackend": [[5, 2, 1, "", "add_subparser"], [5, 5, 1, "", "config"], [5, 2, 1, "", "init"], [5, 5, 1, "", "login"], [5, 2, 1, "", "start"], [5, 5, 1, "", "status"]], "pymap.backend.redis.Session": [[5, 5, 1, "", "filter_set"]], "pymap.backend.redis.cleanup": [[5, 1, 1, "", "CleanupAction"]], "pymap.backend.redis.keys": [[5, 1, 1, "", "CleanupKeys"], [5, 1, 1, "", "ContentKeys"], [5, 1, 1, "", "FilterKeys"], [5, 1, 1, "", "GlobalKeys"], [5, 1, 1, "", "KeysGroup"], [5, 1, 1, "", "MailboxKeys"], [5, 1, 1, "", "NamespaceKeys"], [5, 1, 1, "", "RedisKey"]], "pymap.backend.redis.keys.CleanupKeys": [[5, 5, 1, "", "keys"]], "pymap.backend.redis.keys.ContentKeys": [[5, 5, 1, "", "keys"]], "pymap.backend.redis.keys.FilterKeys": [[5, 5, 1, "", "keys"]], "pymap.backend.redis.keys.GlobalKeys": [[5, 5, 1, "", "keys"]], "pymap.backend.redis.keys.KeysGroup": [[5, 5, 1, "", "keys"]], "pymap.backend.redis.keys.MailboxKeys": [[5, 5, 1, "", "keys"]], "pymap.backend.redis.keys.NamespaceKeys": [[5, 5, 1, "", "keys"]], "pymap.backend.redis.keys.RedisKey": [[5, 2, 1, "", "end"], [5, 2, 1, "", "fork"]], "pymap.backend.session": [[2, 1, 1, "", "BaseSession"]], "pymap.backend.session.BaseSession": [[2, 2, 1, "", "append_messages"], [2, 2, 1, "", "check_mailbox"], [2, 2, 1, "", "cleanup"], [2, 2, 1, "", "close"], [2, 2, 1, "", "copy_messages"], [2, 2, 1, "", "create_mailbox"], [2, 2, 1, "", "delete_mailbox"], [2, 2, 1, "", "expunge_mailbox"], [2, 2, 1, "", "fetch_messages"], [2, 5, 1, "", "filter_set"], [2, 2, 1, "", "get_mailbox"], [2, 2, 1, "", "list_mailboxes"], [2, 2, 1, "", "move_messages"], [2, 5, 1, "", "owner"], [2, 2, 1, "", "rename_mailbox"], [2, 2, 1, "", "search_mailbox"], [2, 2, 1, "", "select_mailbox"], [2, 2, 1, "", "subscribe"], [2, 2, 1, "", "unsubscribe"], [2, 2, 1, "", "update_flags"]], "pymap.bytes": [[6, 1, 1, "", "BytesFormat"], [6, 4, 1, "", "MaybeBytes"], [6, 1, 1, "", "MaybeBytesT"], [6, 1, 1, "", "WriteStream"], [6, 1, 1, "", "Writeable"], [6, 3, 1, "", "has_bytes"]], "pymap.bytes.BytesFormat": [[6, 2, 1, "", "format"], [6, 2, 1, "", "join"]], "pymap.bytes.WriteStream": [[6, 2, 1, "", "write"]], "pymap.bytes.Writeable": [[6, 2, 1, "", "concat"], [6, 2, 1, "", "empty"], [6, 2, 1, "", "tobytes"], [6, 2, 1, "", "wrap"], [6, 2, 1, "", "write"]], "pymap.cluster": [[7, 1, 1, "", "ClusterMetadata"], [7, 1, 1, "", "ListenCallback"], [7, 1, 1, "", "MemberInterface"], [7, 0, 0, "-", "swim"]], "pymap.cluster.ClusterMetadata": [[7, 2, 1, "", "add"], [7, 2, 1, "", "discard"], [7, 2, 1, "", "get_all"], [7, 2, 1, "", "listen"], [7, 5, 1, "", "local"], [7, 5, 1, "", "remote"]], "pymap.cluster.ListenCallback": [[7, 2, 1, "", "__call__"]], "pymap.cluster.MemberInterface": [[7, 5, 1, "", "metadata"], [7, 5, 1, "", "name"]], "pymap.cluster.swim": [[7, 1, 1, "", "SwimService"], [7, 6, 1, "", "transport_type"]], "pymap.cluster.swim.SwimService": [[7, 2, 1, "", "add_arguments"], [7, 2, 1, "", "start"]], "pymap.concurrent": [[8, 1, 1, "", "Event"], [8, 1, 1, "", "EventT"], [8, 1, 1, "", "FileLock"], [8, 1, 1, "", "ReadWriteLock"], [8, 1, 1, "", "RetT"], [8, 1, 1, "", "Subsystem"]], "pymap.concurrent.Event": [[8, 2, 1, "", "clear"], [8, 2, 1, "", "for_asyncio"], [8, 2, 1, "", "for_threading"], [8, 2, 1, "", "is_set"], [8, 2, 1, "", "or_event"], [8, 2, 1, "", "set"], [8, 5, 1, "", "subsystem"], [8, 2, 1, "", "wait"]], "pymap.concurrent.FileLock": [[8, 2, 1, "", "read_lock"], [8, 5, 1, "", "subsystem"], [8, 2, 1, "", "write_lock"]], "pymap.concurrent.ReadWriteLock": [[8, 2, 1, "", "for_asyncio"], [8, 2, 1, "", "for_threading"], [8, 2, 1, "", "read_lock"], [8, 5, 1, "", "subsystem"], [8, 2, 1, "", "write_lock"]], "pymap.concurrent.Subsystem": [[8, 2, 1, "", "execute"], [8, 2, 1, "", "for_asyncio"], [8, 2, 1, "", "for_executor"], [8, 2, 1, "", "for_threading"], [8, 2, 1, "", "new_event"], [8, 2, 1, "", "new_rwlock"], [8, 5, 1, "", "subsystem"]], "pymap.config": [[9, 1, 1, "", "BackendCapability"], [9, 1, 1, "", "ConfigT"], [9, 1, 1, "", "ConfigT_contra"], [9, 1, 1, "", "IMAPConfig"]], "pymap.config.IMAPConfig": [[9, 2, 1, "", "apply_context"], [9, 6, 1, "", "args"], [9, 5, 1, "", "backend_capability"], [9, 2, 1, "", "from_args"], [9, 2, 1, "", "parse_args"]], "pymap.context": [[10, 4, 1, "", "cluster_metadata"], [10, 4, 1, "", "connection_exit"], [10, 4, 1, "", "current_command"], [10, 4, 1, "", "language_code"], [10, 4, 1, "", "socket_info"], [10, 4, 1, "", "subsystem"]], "pymap.exceptions": [[11, 7, 1, "", "AppendFailure"], [11, 7, 1, "", "AuthorizationFailure"], [11, 7, 1, "", "CloseConnection"], [11, 7, 1, "", "IncompatibleData"], [11, 7, 1, "", "InvalidAuth"], [11, 7, 1, "", "MailboxConflict"], [11, 7, 1, "", "MailboxError"], [11, 7, 1, "", "MailboxHasChildren"], [11, 7, 1, "", "MailboxNotFound"], [11, 7, 1, "", "MailboxReadOnly"], [11, 7, 1, "", "NotAllowedError"], [11, 7, 1, "", "NotSupportedError"], [11, 7, 1, "", "ResponseError"], [11, 7, 1, "", "SearchNotAllowed"], [11, 7, 1, "", "TemporaryFailure"], [11, 7, 1, "", "UserNotFound"]], "pymap.exceptions.AuthorizationFailure": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.CloseConnection": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.InvalidAuth": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.MailboxError": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.NotAllowedError": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.NotSupportedError": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.ResponseError": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.TemporaryFailure": [[11, 2, 1, "", "get_response"]], "pymap.exceptions.UserNotFound": [[11, 2, 1, "", "get_response"]], "pymap.fetch": [[12, 1, 1, "", "DynamicFetchValue"], [12, 1, 1, "", "DynamicLoadedFetchValue"], [12, 1, 1, "", "LoadedMessageProvider"], [12, 1, 1, "", "MessageAttributes"]], "pymap.fetch.DynamicFetchValue": [[12, 2, 1, "", "get_value"]], "pymap.fetch.DynamicLoadedFetchValue": [[12, 2, 1, "", "get_value"]], "pymap.fetch.LoadedMessageProvider": [[12, 5, 1, "", "loaded_msg"]], "pymap.fetch.MessageAttributes": [[12, 2, 1, "", "load_hook"], [12, 6, 1, "", "placeholder"]], "pymap.filter": [[13, 1, 1, "", "PluginFilterSet"], [13, 1, 1, "", "SingleFilterSet"], [13, 4, 1, "", "filters"]], "pymap.filter.PluginFilterSet": [[13, 5, 1, "", "compiler"]], "pymap.filter.SingleFilterSet": [[13, 2, 1, "", "clear_active"], [13, 2, 1, "", "delete"], [13, 2, 1, "", "get"], [13, 2, 1, "", "get_active"], [13, 2, 1, "", "get_all"], [13, 5, 1, "", "name"], [13, 2, 1, "", "put"], [13, 2, 1, "", "rename"], [13, 2, 1, "", "replace_active"], [13, 2, 1, "", "set_active"]], "pymap.flags": [[14, 1, 1, "", "FlagOp"], [14, 1, 1, "", "PermanentFlags"], [14, 1, 1, "", "SessionFlags"]], "pymap.flags.FlagOp": [[14, 6, 1, "", "ADD"], [14, 6, 1, "", "DELETE"], [14, 6, 1, "", "REPLACE"], [14, 2, 1, "", "apply"]], "pymap.flags.PermanentFlags": [[14, 5, 1, "", "defined"], [14, 2, 1, "", "intersect"]], "pymap.flags.SessionFlags": [[14, 2, 1, "", "add_recent"], [14, 5, 1, "", "defined"], [14, 5, 1, "", "flags"], [14, 2, 1, "", "get"], [14, 2, 1, "", "intersect"], [14, 5, 1, "", "recent"], [14, 5, 1, "", "recent_uids"], [14, 2, 1, "", "remove"], [14, 2, 1, "", "update"]], "pymap.imap": [[15, 1, 1, "", "IMAPConnection"], [15, 1, 1, "", "IMAPServer"], [15, 1, 1, "", "IMAPService"], [15, 0, 0, "-", "state"]], "pymap.imap.IMAPConnection": [[15, 2, 1, "", "run"]], "pymap.imap.IMAPService": [[15, 2, 1, "", "add_arguments"], [15, 2, 1, "", "start"]], "pymap.imap.state": [[15, 1, 1, "", "ConnectionState"]], "pymap.interfaces": [[16, 0, 0, "-", "backend"], [16, 0, 0, "-", "filter"], [16, 0, 0, "-", "login"], [16, 0, 0, "-", "mailbox"], [16, 0, 0, "-", "message"], [16, 0, 0, "-", "session"]], "pymap.interfaces.backend": [[16, 1, 1, "", "BackendInterface"], [16, 1, 1, "", "ServiceInterface"]], "pymap.interfaces.backend.BackendInterface": [[16, 2, 1, "", "add_subparser"], [16, 5, 1, "", "config"], [16, 2, 1, "", "init"], [16, 5, 1, "", "login"], [16, 2, 1, "", "start"], [16, 5, 1, "", "status"]], "pymap.interfaces.backend.ServiceInterface": [[16, 2, 1, "", "add_arguments"], [16, 2, 1, "", "start"]], "pymap.interfaces.filter": [[16, 1, 1, "", "FilterCompilerInterface"], [16, 1, 1, "", "FilterInterface"], [16, 1, 1, "", "FilterSetInterface"], [16, 1, 1, "", "FilterValueT"]], "pymap.interfaces.filter.FilterCompilerInterface": [[16, 2, 1, "", "compile"], [16, 5, 1, "", "filter_type"], [16, 5, 1, "", "value_type"]], "pymap.interfaces.filter.FilterInterface": [[16, 2, 1, "", "apply"]], "pymap.interfaces.filter.FilterSetInterface": [[16, 2, 1, "", "clear_active"], [16, 5, 1, "", "compiler"], [16, 2, 1, "", "delete"], [16, 2, 1, "", "get"], [16, 2, 1, "", "get_active"], [16, 2, 1, "", "get_all"], [16, 2, 1, "", "put"], [16, 2, 1, "", "rename"], [16, 2, 1, "", "set_active"]], "pymap.interfaces.login": [[16, 1, 1, "", "IdentityInterface"], [16, 1, 1, "", "LoginInterface"]], "pymap.interfaces.login.IdentityInterface": [[16, 2, 1, "", "delete"], [16, 2, 1, "", "get"], [16, 5, 1, "", "name"], [16, 2, 1, "", "new_session"], [16, 2, 1, "", "new_token"], [16, 5, 1, "", "roles"], [16, 2, 1, "", "set"]], "pymap.interfaces.login.LoginInterface": [[16, 2, 1, "", "authenticate"], [16, 2, 1, "", "authorize"], [16, 5, 1, "", "tokens"]], "pymap.interfaces.mailbox": [[16, 1, 1, "", "MailboxInterface"]], "pymap.interfaces.mailbox.MailboxInterface": [[16, 5, 1, "", "exists"], [16, 5, 1, "", "first_unseen"], [16, 5, 1, "", "flags"], [16, 5, 1, "", "mailbox_id"], [16, 5, 1, "", "next_uid"], [16, 5, 1, "", "permanent_flags"], [16, 5, 1, "", "readonly"], [16, 5, 1, "", "recent"], [16, 5, 1, "", "session_flags"], [16, 5, 1, "", "uid_validity"], [16, 5, 1, "", "unseen"]], "pymap.interfaces.message": [[16, 1, 1, "", "CachedMessage"], [16, 4, 1, "", "FlagsKey"], [16, 1, 1, "", "LoadedMessageInterface"], [16, 1, 1, "", "MessageInterface"], [16, 1, 1, "", "MessageT"], [16, 1, 1, "", "MessageT_co"]], "pymap.interfaces.message.CachedMessage": [[16, 5, 1, "", "email_id"], [16, 5, 1, "", "flags_key"], [16, 2, 1, "", "get_flags"], [16, 5, 1, "", "internal_date"], [16, 5, 1, "", "permanent_flags"], [16, 5, 1, "", "thread_id"], [16, 5, 1, "", "uid"]], "pymap.interfaces.message.LoadedMessageInterface": [[16, 2, 1, "", "contains"], [16, 2, 1, "", "get_body"], [16, 2, 1, "", "get_body_structure"], [16, 2, 1, "", "get_envelope_structure"], [16, 2, 1, "", "get_header"], [16, 2, 1, "", "get_headers"], [16, 2, 1, "", "get_message_headers"], [16, 2, 1, "", "get_message_text"], [16, 2, 1, "", "get_size"], [16, 5, 1, "", "requirement"]], "pymap.interfaces.message.MessageInterface": [[16, 5, 1, "", "email_id"], [16, 5, 1, "", "expunged"], [16, 2, 1, "", "get_flags"], [16, 5, 1, "", "internal_date"], [16, 2, 1, "", "load_content"], [16, 5, 1, "", "permanent_flags"], [16, 5, 1, "", "thread_id"], [16, 5, 1, "", "uid"]], "pymap.interfaces.session": [[16, 1, 1, "", "SessionInterface"]], "pymap.interfaces.session.SessionInterface": [[16, 2, 1, "", "append_messages"], [16, 2, 1, "", "check_mailbox"], [16, 2, 1, "", "cleanup"], [16, 2, 1, "", "close"], [16, 2, 1, "", "copy_messages"], [16, 2, 1, "", "create_mailbox"], [16, 2, 1, "", "delete_mailbox"], [16, 2, 1, "", "expunge_mailbox"], [16, 2, 1, "", "fetch_messages"], [16, 5, 1, "", "filter_set"], [16, 2, 1, "", "get_mailbox"], [16, 2, 1, "", "list_mailboxes"], [16, 2, 1, "", "move_messages"], [16, 5, 1, "", "owner"], [16, 2, 1, "", "rename_mailbox"], [16, 2, 1, "", "search_mailbox"], [16, 2, 1, "", "select_mailbox"], [16, 2, 1, "", "subscribe"], [16, 2, 1, "", "unsubscribe"], [16, 2, 1, "", "update_flags"]], "pymap.listtree": [[17, 1, 1, "", "ListEntry"], [17, 1, 1, "", "ListTree"]], "pymap.listtree.ListEntry": [[17, 5, 1, "", "attributes"]], "pymap.listtree.ListTree": [[17, 2, 1, "", "get"], [17, 2, 1, "", "get_renames"], [17, 2, 1, "", "list"], [17, 2, 1, "", "list_matching"], [17, 2, 1, "", "set_marked"], [17, 2, 1, "", "update"]], "pymap.mailbox": [[18, 1, 1, "", "MailboxSnapshot"]], "pymap.mailbox.MailboxSnapshot": [[18, 5, 1, "", "flags"], [18, 2, 1, "", "new_uid_validity"]], "pymap.message": [[19, 1, 1, "", "BaseLoadedMessage"], [19, 1, 1, "", "BaseMessage"]], "pymap.message.BaseLoadedMessage": [[19, 2, 1, "", "contains"], [19, 2, 1, "", "get_body"], [19, 2, 1, "", "get_body_structure"], [19, 2, 1, "", "get_envelope_structure"], [19, 2, 1, "", "get_header"], [19, 2, 1, "", "get_headers"], [19, 2, 1, "", "get_message_headers"], [19, 2, 1, "", "get_message_text"], [19, 2, 1, "", "get_size"], [19, 5, 1, "", "requirement"]], "pymap.message.BaseMessage": [[19, 5, 1, "", "email_id"], [19, 5, 1, "", "flags_key"], [19, 2, 1, "", "get_flags"], [19, 5, 1, "", "permanent_flags"], [19, 5, 1, "", "thread_id"]], "pymap.mime": [[20, 1, 1, "", "MessageBody"], [20, 1, 1, "", "MessageContent"], [20, 1, 1, "", "MessageHeader"], [20, 0, 0, "-", "cte"], [20, 0, 0, "-", "parsed"]], "pymap.mime.MessageBody": [[20, 6, 1, "", "content_type"], [20, 2, 1, "", "empty"], [20, 2, 1, "", "from_json"], [20, 5, 1, "", "has_nested"], [20, 5, 1, "", "json"], [20, 5, 1, "", "lines"], [20, 5, 1, "", "nested"], [20, 2, 1, "", "write"]], "pymap.mime.MessageContent": [[20, 2, 1, "", "from_json"], [20, 5, 1, "", "is_rfc822"], [20, 5, 1, "", "json"], [20, 6, 1, "", "lines"], [20, 2, 1, "", "parse"], [20, 2, 1, "", "walk"], [20, 2, 1, "", "write"]], "pymap.mime.MessageHeader": [[20, 2, 1, "", "empty"], [20, 6, 1, "", "folded"], [20, 2, 1, "", "from_json"], [20, 5, 1, "", "json"], [20, 5, 1, "", "lines"], [20, 6, 1, "", "parsed"], [20, 2, 1, "", "write"]], "pymap.mime.cte": [[20, 1, 1, "", "MessageDecoder"]], "pymap.mime.cte.MessageDecoder": [[20, 2, 1, "", "decode"], [20, 2, 1, "", "of"], [20, 2, 1, "", "of_cte"], [20, 6, 1, "", "registry"]], "pymap.mime.parsed": [[20, 1, 1, "", "ParsedHeaders"]], "pymap.mime.parsed.ParsedHeaders": [[20, 5, 1, "", "bcc"], [20, 5, 1, "", "cc"], [20, 5, 1, "", "content_description"], [20, 5, 1, "", "content_disposition"], [20, 5, 1, "", "content_id"], [20, 5, 1, "", "content_language"], [20, 5, 1, "", "content_location"], [20, 5, 1, "", "content_transfer_encoding"], [20, 5, 1, "", "content_type"], [20, 5, 1, "", "date"], [20, 5, 1, "", "from_"], [20, 5, 1, "", "in_reply_to"], [20, 5, 1, "", "message_id"], [20, 5, 1, "", "references"], [20, 5, 1, "", "reply_to"], [20, 5, 1, "", "sender"], [20, 5, 1, "", "subject"], [20, 5, 1, "", "to"]], "pymap.parsing": [[21, 4, 1, "", "AnyParseable"], [21, 1, 1, "", "EndLine"], [21, 1, 1, "", "ExpectedParseable"], [21, 1, 1, "", "Params"], [21, 1, 1, "", "Parseable"], [21, 1, 1, "", "ParseableT"], [21, 1, 1, "", "Space"], [21, 0, 0, "-", "command"], [21, 0, 0, "-", "commands"], [21, 0, 0, "-", "exceptions"], [21, 0, 0, "-", "message"], [21, 0, 0, "-", "modutf7"], [21, 0, 0, "-", "primitives"], [21, 0, 0, "-", "response"], [21, 0, 0, "-", "state"]], "pymap.parsing.EndLine": [[21, 6, 1, "", "carriage_return"], [21, 2, 1, "", "parse"], [21, 6, 1, "", "preceding_spaces"], [21, 5, 1, "", "value"]], "pymap.parsing.ExpectedParseable": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.Params": [[21, 2, 1, "", "copy"]], "pymap.parsing.Parseable": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.Space": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.command": [[21, 1, 1, "", "Command"], [21, 1, 1, "", "CommandAny"], [21, 1, 1, "", "CommandAuth"], [21, 1, 1, "", "CommandNoArgs"], [21, 1, 1, "", "CommandNonAuth"], [21, 1, 1, "", "CommandSelect"], [21, 0, 0, "-", "any"], [21, 0, 0, "-", "auth"], [21, 0, 0, "-", "nonauth"], [21, 0, 0, "-", "select"]], "pymap.parsing.command.Command": [[21, 6, 1, "", "command"], [21, 6, 1, "", "compound"], [21, 6, 1, "", "delegate"], [21, 2, 1, "", "parse"], [21, 6, 1, "", "tag"], [21, 5, 1, "", "value"]], "pymap.parsing.command.CommandNoArgs": [[21, 2, 1, "", "parse"]], "pymap.parsing.command.any": [[21, 1, 1, "", "CapabilityCommand"], [21, 1, 1, "", "LogoutCommand"], [21, 1, 1, "", "NoOpCommand"]], "pymap.parsing.command.any.CapabilityCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.any.LogoutCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.any.NoOpCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.auth": [[21, 1, 1, "", "AppendCommand"], [21, 1, 1, "", "CreateCommand"], [21, 1, 1, "", "DeleteCommand"], [21, 1, 1, "", "ExamineCommand"], [21, 1, 1, "", "LSubCommand"], [21, 1, 1, "", "ListCommand"], [21, 1, 1, "", "RenameCommand"], [21, 1, 1, "", "SelectCommand"], [21, 1, 1, "", "StatusCommand"], [21, 1, 1, "", "SubscribeCommand"], [21, 1, 1, "", "UnsubscribeCommand"]], "pymap.parsing.command.auth.AppendCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.auth.CreateCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.auth.DeleteCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.auth.ExamineCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 6, 1, "", "readonly"]], "pymap.parsing.command.auth.LSubCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 6, 1, "", "only_subscribed"]], "pymap.parsing.command.auth.ListCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "only_subscribed"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.auth.RenameCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.auth.SelectCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"], [21, 6, 1, "", "readonly"]], "pymap.parsing.command.auth.StatusCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.auth.SubscribeCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.auth.UnsubscribeCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.nonauth": [[21, 1, 1, "", "AuthenticateCommand"], [21, 1, 1, "", "LoginCommand"], [21, 1, 1, "", "StartTLSCommand"]], "pymap.parsing.command.nonauth.AuthenticateCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.nonauth.LoginCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.nonauth.StartTLSCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.select": [[21, 1, 1, "", "CheckCommand"], [21, 1, 1, "", "CloseCommand"], [21, 1, 1, "", "CopyCommand"], [21, 1, 1, "", "ExpungeCommand"], [21, 1, 1, "", "FetchCommand"], [21, 1, 1, "", "IdleCommand"], [21, 1, 1, "", "MoveCommand"], [21, 1, 1, "", "SearchCommand"], [21, 1, 1, "", "StoreCommand"], [21, 1, 1, "", "UidCommand"], [21, 1, 1, "", "UidCopyCommand"], [21, 1, 1, "", "UidExpungeCommand"], [21, 1, 1, "", "UidFetchCommand"], [21, 1, 1, "", "UidMoveCommand"], [21, 1, 1, "", "UidSearchCommand"], [21, 1, 1, "", "UidStoreCommand"]], "pymap.parsing.command.select.CheckCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.select.CloseCommand": [[21, 6, 1, "", "command"]], "pymap.parsing.command.select.CopyCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.ExpungeCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.FetchCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.IdleCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "continuation"], [21, 2, 1, "", "parse"], [21, 2, 1, "", "parse_done"]], "pymap.parsing.command.select.MoveCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.SearchCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.StoreCommand": [[21, 6, 1, "", "command"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.UidCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "compound"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.UidCopyCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.UidExpungeCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.UidFetchCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.UidMoveCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.UidSearchCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 2, 1, "", "parse"]], "pymap.parsing.command.select.UidStoreCommand": [[21, 6, 1, "", "command"], [21, 6, 1, "", "delegate"], [21, 2, 1, "", "parse"]], "pymap.parsing.commands": [[21, 1, 1, "", "Commands"], [21, 1, 1, "", "InvalidCommand"], [21, 4, 1, "", "builtin_commands"]], "pymap.parsing.commands.Commands": [[21, 2, 1, "", "deregister"], [21, 2, 1, "", "parse"], [21, 2, 1, "", "register"]], "pymap.parsing.commands.InvalidCommand": [[21, 6, 1, "", "command"], [21, 5, 1, "", "command_name"], [21, 5, 1, "", "command_type"], [21, 5, 1, "", "message"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "parse_exc"], [21, 5, 1, "", "value"]], "pymap.parsing.exceptions": [[21, 7, 1, "", "InvalidContent"], [21, 7, 1, "", "NotParseable"], [21, 7, 1, "", "UnexpectedType"]], "pymap.parsing.message": [[21, 1, 1, "", "AppendMessage"]], "pymap.parsing.modutf7": [[21, 3, 1, "", "modutf7_decode"], [21, 3, 1, "", "modutf7_encode"]], "pymap.parsing.primitives": [[21, 1, 1, "", "Atom"], [21, 1, 1, "", "List"], [21, 1, 1, "", "LiteralString"], [21, 1, 1, "", "Nil"], [21, 1, 1, "", "Number"], [21, 1, 1, "", "QuotedString"], [21, 1, 1, "", "String"]], "pymap.parsing.primitives.Atom": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.primitives.List": [[21, 2, 1, "", "get_as"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "value"], [21, 2, 1, "", "write"]], "pymap.parsing.primitives.LiteralString": [[21, 5, 1, "", "binary"], [21, 5, 1, "", "length"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "value"], [21, 2, 1, "", "write"]], "pymap.parsing.primitives.Nil": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.primitives.Number": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.primitives.QuotedString": [[21, 5, 1, "", "binary"], [21, 5, 1, "", "length"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.primitives.String": [[21, 5, 1, "", "binary"], [21, 2, 1, "", "build"], [21, 5, 1, "", "length"], [21, 2, 1, "", "parse"]], "pymap.parsing.response": [[21, 1, 1, "", "CommandResponse"], [21, 1, 1, "", "Response"], [21, 1, 1, "", "ResponseBad"], [21, 1, 1, "", "ResponseBye"], [21, 1, 1, "", "ResponseCode"], [21, 1, 1, "", "ResponseContinuation"], [21, 1, 1, "", "ResponseNo"], [21, 1, 1, "", "ResponseOk"], [21, 1, 1, "", "ResponsePreAuth"], [21, 1, 1, "", "ResponseT"], [21, 1, 1, "", "UntaggedResponse"], [21, 0, 0, "-", "code"], [21, 0, 0, "-", "fetch"], [21, 0, 0, "-", "specials"]], "pymap.parsing.response.CommandResponse": [[21, 2, 1, "", "add_untagged"], [21, 2, 1, "", "add_untagged_ok"], [21, 2, 1, "", "async_write"], [21, 5, 1, "", "is_terminal"], [21, 2, 1, "", "write"]], "pymap.parsing.response.Response": [[21, 2, 1, "", "async_write"], [21, 5, 1, "", "code"], [21, 6, 1, "", "condition"], [21, 5, 1, "", "is_bad"], [21, 5, 1, "", "is_terminal"], [21, 6, 1, "", "tag"], [21, 5, 1, "", "text"], [21, 2, 1, "", "write"]], "pymap.parsing.response.ResponseBad": [[21, 6, 1, "", "condition"], [21, 5, 1, "", "is_bad"]], "pymap.parsing.response.ResponseBye": [[21, 6, 1, "", "condition"], [21, 5, 1, "", "is_terminal"]], "pymap.parsing.response.ResponseCode": [[21, 2, 1, "", "of"]], "pymap.parsing.response.ResponseNo": [[21, 6, 1, "", "condition"]], "pymap.parsing.response.ResponseOk": [[21, 6, 1, "", "condition"]], "pymap.parsing.response.ResponsePreAuth": [[21, 6, 1, "", "condition"]], "pymap.parsing.response.UntaggedResponse": [[21, 2, 1, "", "async_write"], [21, 2, 1, "", "merge"], [21, 5, 1, "", "merge_key"]], "pymap.parsing.response.code": [[21, 1, 1, "", "AppendUid"], [21, 1, 1, "", "Capability"], [21, 1, 1, "", "CopyUid"], [21, 1, 1, "", "MailboxId"], [21, 1, 1, "", "PermanentFlags"], [21, 1, 1, "", "UidNext"], [21, 1, 1, "", "UidValidity"], [21, 1, 1, "", "Unseen"]], "pymap.parsing.response.code.Capability": [[21, 5, 1, "", "string"]], "pymap.parsing.response.fetch": [[21, 1, 1, "", "BodyStructure"], [21, 1, 1, "", "ContentBodyStructure"], [21, 1, 1, "", "EnvelopeStructure"], [21, 1, 1, "", "MessageBodyStructure"], [21, 1, 1, "", "MultipartBodyStructure"], [21, 1, 1, "", "TextBodyStructure"]], "pymap.parsing.response.fetch.BodyStructure": [[21, 2, 1, "", "empty"], [21, 5, 1, "", "extended"], [21, 2, 1, "", "write"]], "pymap.parsing.response.fetch.ContentBodyStructure": [[21, 5, 1, "", "extended"]], "pymap.parsing.response.fetch.EnvelopeStructure": [[21, 2, 1, "", "empty"], [21, 2, 1, "", "write"]], "pymap.parsing.response.fetch.MessageBodyStructure": [[21, 5, 1, "", "extended"]], "pymap.parsing.response.fetch.MultipartBodyStructure": [[21, 5, 1, "", "extended"]], "pymap.parsing.response.fetch.TextBodyStructure": [[21, 5, 1, "", "extended"]], "pymap.parsing.response.specials": [[21, 1, 1, "", "ESearchResponse"], [21, 1, 1, "", "ExistsResponse"], [21, 1, 1, "", "ExpungeResponse"], [21, 1, 1, "", "FetchResponse"], [21, 1, 1, "", "FlagsResponse"], [21, 1, 1, "", "LSubResponse"], [21, 1, 1, "", "ListResponse"], [21, 1, 1, "", "RecentResponse"], [21, 1, 1, "", "SearchResponse"], [21, 1, 1, "", "StatusResponse"]], "pymap.parsing.response.specials.ESearchResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.response.specials.ExistsResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.response.specials.ExpungeResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.response.specials.FetchResponse": [[21, 2, 1, "", "merge"], [21, 5, 1, "", "merge_key"], [21, 5, 1, "", "text"], [21, 2, 1, "", "write"]], "pymap.parsing.response.specials.FlagsResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.response.specials.ListResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.response.specials.RecentResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.response.specials.SearchResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.response.specials.StatusResponse": [[21, 5, 1, "", "text"]], "pymap.parsing.specials": [[21, 0, 0, "-", "astring"], [21, 0, 0, "-", "datetime_"], [21, 0, 0, "-", "fetchattr"], [21, 0, 0, "-", "flag"], [21, 0, 0, "-", "mailbox"], [21, 0, 0, "-", "objectid"], [21, 0, 0, "-", "options"], [21, 0, 0, "-", "searchkey"], [21, 0, 0, "-", "sequenceset"], [21, 0, 0, "-", "statusattr"], [21, 0, 0, "-", "tag"]], "pymap.parsing.specials.astring": [[21, 1, 1, "", "AString"]], "pymap.parsing.specials.astring.AString": [[21, 2, 1, "", "parse"], [21, 6, 1, "", "string"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.datetime_": [[21, 1, 1, "", "DateTime"]], "pymap.parsing.specials.datetime_.DateTime": [[21, 2, 1, "", "get_local_tzinfo"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.fetchattr": [[21, 1, 1, "", "FetchAttribute"], [21, 1, 1, "", "FetchPartial"], [21, 1, 1, "", "FetchRequirement"], [21, 1, 1, "", "FetchValue"]], "pymap.parsing.specials.fetchattr.FetchAttribute": [[21, 1, 1, "", "Section"], [21, 2, 1, "", "parse"], [21, 6, 1, "", "partial"], [21, 5, 1, "", "requirement"], [21, 6, 1, "", "section"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.fetchattr.FetchRequirement": [[21, 6, 1, "", "BODY"], [21, 6, 1, "", "HEADER"], [21, 6, 1, "", "METADATA"], [21, 6, 1, "", "NONE"], [21, 2, 1, "", "get_all"], [21, 2, 1, "", "has_all"], [21, 2, 1, "", "has_none"], [21, 2, 1, "", "reduce"]], "pymap.parsing.specials.flag": [[21, 4, 1, "", "Answered"], [21, 4, 1, "", "Deleted"], [21, 4, 1, "", "Draft"], [21, 1, 1, "", "Flag"], [21, 4, 1, "", "Flagged"], [21, 4, 1, "", "Recent"], [21, 4, 1, "", "Seen"], [21, 4, 1, "", "Wildcard"], [21, 3, 1, "", "get_system_flags"]], "pymap.parsing.specials.flag.Flag": [[21, 5, 1, "", "is_system"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.mailbox": [[21, 1, 1, "", "Mailbox"]], "pymap.parsing.specials.mailbox.Mailbox": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.objectid": [[21, 1, 1, "", "ObjectId"]], "pymap.parsing.specials.objectid.ObjectId": [[21, 2, 1, "", "maybe"], [21, 2, 1, "", "new"], [21, 2, 1, "", "new_email_id"], [21, 2, 1, "", "new_mailbox_id"], [21, 2, 1, "", "new_thread_id"], [21, 5, 1, "", "parens"], [21, 2, 1, "", "parse"], [21, 2, 1, "", "random"], [21, 2, 1, "", "random_email_id"], [21, 2, 1, "", "random_mailbox_id"], [21, 2, 1, "", "random_thread_id"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.options": [[21, 1, 1, "", "ExtensionOption"], [21, 1, 1, "", "ExtensionOptions"]], "pymap.parsing.specials.options.ExtensionOption": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.options.ExtensionOptions": [[21, 2, 1, "", "empty"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.searchkey": [[21, 1, 1, "", "SearchKey"]], "pymap.parsing.specials.searchkey.SearchKey": [[21, 5, 1, "", "not_inverse"], [21, 2, 1, "", "parse"], [21, 5, 1, "", "requirement"], [21, 5, 1, "", "value"], [21, 5, 1, "", "value_str"]], "pymap.parsing.specials.sequenceset": [[21, 1, 1, "", "MaxValue"], [21, 1, 1, "", "SequenceSet"]], "pymap.parsing.specials.sequenceset.SequenceSet": [[21, 2, 1, "", "all"], [21, 2, 1, "", "build"], [21, 2, 1, "", "flatten"], [21, 5, 1, "", "is_all"], [21, 2, 1, "", "iter"], [21, 2, 1, "", "parse"], [21, 6, 1, "", "uid"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.statusattr": [[21, 1, 1, "", "StatusAttribute"]], "pymap.parsing.specials.statusattr.StatusAttribute": [[21, 2, 1, "", "parse"], [21, 6, 1, "", "valid_statuses"], [21, 5, 1, "", "value"]], "pymap.parsing.specials.tag": [[21, 1, 1, "", "Tag"]], "pymap.parsing.specials.tag.Tag": [[21, 2, 1, "", "parse"], [21, 5, 1, "", "value"]], "pymap.parsing.state": [[21, 1, 1, "", "ParsingExpectation"], [21, 1, 1, "", "ParsingExpectedT"], [21, 7, 1, "", "ParsingInterrupt"], [21, 1, 1, "", "ParsingState"]], "pymap.parsing.state.ParsingExpectation": [[21, 2, 1, "", "consume"], [21, 2, 1, "", "expect"]], "pymap.plugin": [[22, 1, 1, "", "Plugin"], [22, 1, 1, "", "PluginT"]], "pymap.plugin.Plugin": [[22, 2, 1, "", "add"], [22, 5, 1, "", "default"], [22, 2, 1, "", "register"], [22, 5, 1, "", "registered"]], "pymap.search": [[23, 1, 1, "", "AllSearchCriteria"], [23, 1, 1, "", "BodySearchCriteria"], [23, 1, 1, "", "DateSearchCriteria"], [23, 1, 1, "", "EnvelopeSearchCriteria"], [23, 1, 1, "", "HasEmailIdSearchCriteria"], [23, 1, 1, "", "HasFlagSearchCriteria"], [23, 1, 1, "", "HasThreadIdSearchCriteria"], [23, 1, 1, "", "HeaderDateSearchCriteria"], [23, 1, 1, "", "HeaderSearchCriteria"], [23, 1, 1, "", "InverseSearchCriteria"], [23, 1, 1, "", "NewSearchCriteria"], [23, 1, 1, "", "OrSearchCriteria"], [23, 1, 1, "", "SearchCriteria"], [23, 1, 1, "", "SearchCriteriaSet"], [23, 1, 1, "", "SearchParams"], [23, 1, 1, "", "SequenceSetSearchCriteria"], [23, 1, 1, "", "SizeSearchCriteria"]], "pymap.search.AllSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.BodySearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.DateSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.EnvelopeSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.HasEmailIdSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.HasFlagSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.HasThreadIdSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.HeaderSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.InverseSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.NewSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.OrSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.SearchCriteria": [[23, 2, 1, "", "matches"], [23, 2, 1, "", "of"]], "pymap.search.SearchCriteriaSet": [[23, 2, 1, "", "matches"], [23, 5, 1, "", "sequence_set"]], "pymap.search.SequenceSetSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.search.SizeSearchCriteria": [[23, 2, 1, "", "matches"]], "pymap.selected": [[24, 1, 1, "", "SelectedMailbox"], [24, 1, 1, "", "SelectedSet"], [24, 1, 1, "", "SynchronizedMessages"]], "pymap.selected.SelectedMailbox": [[24, 2, 1, "", "add_updates"], [24, 2, 1, "", "fork"], [24, 5, 1, "", "hide_expunged"], [24, 5, 1, "", "lookup"], [24, 5, 1, "", "mailbox_id"], [24, 5, 1, "", "messages"], [24, 5, 1, "", "mod_sequence"], [24, 5, 1, "", "permanent_flags"], [24, 5, 1, "", "readonly"], [24, 5, 1, "", "session_flags"], [24, 2, 1, "", "set_deleted"], [24, 2, 1, "", "set_messages"], [24, 2, 1, "", "silence"]], "pymap.selected.SelectedSet": [[24, 2, 1, "", "add"], [24, 5, 1, "", "any_selected"]], "pymap.selected.SynchronizedMessages": [[24, 5, 1, "", "exists"], [24, 2, 1, "", "get"], [24, 2, 1, "", "get_all"], [24, 2, 1, "", "get_uids"], [24, 5, 1, "", "max_uid"]], "pymap.service": [[25, 4, 1, "", "services"]], "pymap.sieve": [[26, 1, 1, "", "SieveCompiler"], [26, 1, 1, "", "SieveFilter"], [26, 7, 1, "", "SieveParseError"], [26, 0, 0, "-", "manage"], [26, 0, 0, "-", "tests"]], "pymap.sieve.SieveCompiler": [[26, 2, 1, "", "compile"], [26, 6, 1, "", "extensions"], [26, 5, 1, "", "filter_type"], [26, 5, 1, "", "value_type"]], "pymap.sieve.SieveFilter": [[26, 2, 1, "", "apply"]], "pymap.sieve.manage": [[26, 1, 1, "", "ManageSieveConnection"], [26, 1, 1, "", "ManageSieveServer"], [26, 1, 1, "", "ManageSieveService"]], "pymap.sieve.manage.ManageSieveConnection": [[26, 2, 1, "", "run"]], "pymap.sieve.manage.ManageSieveService": [[26, 2, 1, "", "add_arguments"], [26, 2, 1, "", "start"]], "pymap.sieve.tests": [[26, 1, 1, "", "SieveTest"]], "pymap.sieve.tests.SieveTest": [[26, 2, 1, "", "of"], [26, 2, 1, "", "run"]], "pymap.sockets": [[27, 1, 1, "", "InheritedSockets"]], "pymap.sockets.InheritedSockets": [[27, 2, 1, "", "for_systemd"], [27, 2, 1, "", "get"], [27, 2, 1, "", "of"], [27, 2, 1, "", "supports"]], "pymap.threads": [[28, 1, 1, "", "ThreadKey"]], "pymap.threads.ThreadKey": [[28, 2, 1, "", "get_all"]], "pymap.token": [[29, 1, 1, "", "AllTokens"], [29, 1, 1, "", "TokensBase"], [29, 0, 0, "-", "macaroon"], [29, 4, 1, "", "tokens"]], "pymap.token.AllTokens": [[29, 2, 1, "", "get_admin_token"], [29, 2, 1, "", "get_login_token"], [29, 2, 1, "", "parse"]], "pymap.token.macaroon": [[29, 1, 1, "", "MacaroonCredentials"], [29, 1, 1, "", "MacaroonTokens"]], "pymap.token.macaroon.MacaroonCredentials": [[29, 5, 1, "", "authcid"], [29, 5, 1, "", "authzid"], [29, 5, 1, "", "identifier"], [29, 5, 1, "", "role"], [29, 2, 1, "", "verify"]], "pymap.token.macaroon.MacaroonTokens": [[29, 2, 1, "", "get_admin_token"], [29, 2, 1, "", "get_login_token"], [29, 2, 1, "", "parse"]], "pymap.user": [[30, 1, 1, "", "UserMetadata"], [30, 1, 1, "", "UserRoles"]], "pymap.user.UserMetadata": [[30, 5, 1, "", "authcid"], [30, 2, 1, "", "check_password"], [30, 2, 1, "", "compare_secret"], [30, 2, 1, "", "create"], [30, 2, 1, "", "get_clear_secret"], [30, 5, 1, "", "params"], [30, 5, 1, "", "password"], [30, 5, 1, "", "roles"], [30, 5, 1, "", "token_key"]], "pymap.user.UserRoles": [[30, 2, 1, "", "add"], [30, 2, 1, "", "discard"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property", "6": "py:attribute", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"pymap": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "document": 0, "tabl": 0, "content": [0, 2], "indic": 0, "admin": 1, "handler": 1, "backend": [2, 3, 4, 5, 16], "mailbox": [2, 16, 18], "session": [2, 16], "dict": 3, "maildir": 4, "flag": [4, 14], "layout": 4, "subscript": 4, "uidlist": 4, "redi": 5, "kei": 5, "cleanup": 5, "byte": 6, "cluster": 7, "swim": 7, "concurr": 8, "config": 9, "context": 10, "except": [11, 21], "fetch": 12, "filter": [13, 16], "imap": 15, "interfac": 16, "messag": [16, 19, 21], "login": 16, "listtre": 17, "mime": 20, "cte": 20, "pars": [20, 21], "state": 21, "command": 21, "primit": 21, "special": 21, "respons": 21, "modutf7": 21, "plugin": 22, "search": 23, "select": 24, "servic": 25, "siev": 26, "test": 26, "manag": 26, "socket": 27, "thread": 28, "token": 29, "macaroon": 29, "user": 30}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pymap Documentation": [[0, "pymap-documentation"]], "Table of Contents": [[0, "table-of-contents"]], "Contents:": [[0, null], [2, null]], "Indices and tables": [[0, "indices-and-tables"]], "pymap.admin": [[1, "module-pymap.admin"]], "pymap.admin.handlers": [[1, "module-pymap.admin.handlers"]], "pymap.backend": [[2, "pymap-backend"]], "pymap.backend.mailbox": [[2, "module-pymap.backend.mailbox"]], "pymap.backend.session": [[2, "module-pymap.backend.session"]], "pymap.backend.dict": [[3, "module-pymap.backend.dict"]], "pymap.backend.maildir": [[4, "module-pymap.backend.maildir"]], "pymap.backend.maildir.flags": [[4, "module-pymap.backend.maildir.flags"]], "pymap.backend.maildir.layout": [[4, "module-pymap.backend.maildir.layout"]], "pymap.backend.maildir.subscriptions": [[4, "module-pymap.backend.maildir.subscriptions"]], "pymap.backend.maildir.uidlist": [[4, "module-pymap.backend.maildir.uidlist"]], "pymap.backend.redis": [[5, "module-pymap.backend.redis"]], "pymap.backend.redis.keys": [[5, "module-pymap.backend.redis.keys"]], "pymap.backend.redis.cleanup": [[5, "module-pymap.backend.redis.cleanup"]], "pymap.bytes": [[6, "module-pymap.bytes"]], "pymap.cluster": [[7, "module-pymap.cluster"]], "pymap.cluster.swim": [[7, "module-pymap.cluster.swim"]], "pymap.concurrent": [[8, "module-pymap.concurrent"]], "pymap.config": [[9, "module-pymap.config"]], "pymap.context": [[10, "module-pymap.context"]], "pymap.exceptions": [[11, "module-pymap.exceptions"]], "pymap.fetch": [[12, "module-pymap.fetch"]], "pymap.filter": [[13, "module-pymap.filter"]], "pymap.flags": [[14, "module-pymap.flags"]], "pymap.imap": [[15, "module-pymap.imap"]], "pymap.interfaces": [[16, "pymap-interfaces"]], "pymap.interfaces.backend": [[16, "module-pymap.interfaces.backend"]], "pymap.interfaces.message": [[16, "module-pymap.interfaces.message"]], "pymap.interfaces.mailbox": [[16, "module-pymap.interfaces.mailbox"]], "pymap.interfaces.session": [[16, "module-pymap.interfaces.session"]], "pymap.interfaces.login": [[16, "module-pymap.interfaces.login"]], "pymap.interfaces.filter": [[16, "module-pymap.interfaces.filter"]], "pymap.listtree": [[17, "module-pymap.listtree"]], "pymap.mailbox": [[18, "module-pymap.mailbox"]], "pymap.message": [[19, "module-pymap.message"]], "pymap.mime": [[20, "module-pymap.mime"]], "pymap.mime.cte": [[20, "module-pymap.mime.cte"]], "pymap.mime.parsed": [[20, "module-pymap.mime.parsed"]], "pymap.parsing": [[21, "module-pymap.parsing"]], "pymap.parsing.exceptions": [[21, "module-pymap.parsing.exceptions"]], "pymap.parsing.state": [[21, "module-pymap.parsing.state"]], "pymap.parsing.commands": [[21, "module-pymap.parsing.commands"]], "pymap.parsing.command": [[21, "module-pymap.parsing.command"]], "pymap.parsing.primitives": [[21, "module-pymap.parsing.primitives"]], "pymap.parsing.specials": [[21, "module-pymap.parsing.specials.astring"]], "pymap.parsing.response": [[21, "module-pymap.parsing.response"]], "pymap.parsing.modutf7": [[21, "module-pymap.parsing.modutf7"]], "pymap.parsing.message": [[21, "module-pymap.parsing.message"]], "pymap.plugin": [[22, "module-pymap.plugin"]], "pymap.search": [[23, "module-pymap.search"]], "pymap.selected": [[24, "module-pymap.selected"]], "pymap.service": [[25, "module-pymap.service"]], "pymap.sieve": [[26, "module-pymap.sieve"]], "pymap.sieve.tests": [[26, "module-pymap.sieve.tests"]], "pymap.sieve.manage": [[26, "module-pymap.sieve.manage"]], "pymap.sockets": [[27, "module-pymap.sockets"]], "pymap.threads": [[28, "module-pymap.threads"]], "pymap.token": [[29, "module-pymap.token"]], "pymap.token.macaroon": [[29, "module-pymap.token.macaroon"]], "pymap.user": [[30, "module-pymap.user"]]}, "indexentries": {"adminservice (class in pymap.admin)": [[1, "pymap.admin.AdminService"]], "append() (pymap.admin.handlers.mailbox.mailboxhandlers method)": [[1, "pymap.admin.handlers.mailbox.MailboxHandlers.Append"]], "basehandler (class in pymap.admin.handlers)": [[1, "pymap.admin.handlers.BaseHandler"]], "deleteuser() (pymap.admin.handlers.user.userhandlers method)": [[1, "pymap.admin.handlers.user.UserHandlers.DeleteUser"]], "getuser() (pymap.admin.handlers.user.userhandlers method)": [[1, "pymap.admin.handlers.user.UserHandlers.GetUser"]], "handler (class in pymap.admin.typing)": [[1, "pymap.admin.typing.Handler"]], "login() (pymap.admin.handlers.system.systemhandlers method)": [[1, "pymap.admin.handlers.system.SystemHandlers.Login"]], "mailboxhandlers (class in pymap.admin.handlers.mailbox)": [[1, "pymap.admin.handlers.mailbox.MailboxHandlers"]], "ping() (pymap.admin.handlers.system.systemhandlers method)": [[1, "pymap.admin.handlers.system.SystemHandlers.Ping"]], "setuser() (pymap.admin.handlers.user.userhandlers method)": [[1, "pymap.admin.handlers.user.UserHandlers.SetUser"]], "systemhandlers (class in pymap.admin.handlers.system)": [[1, "pymap.admin.handlers.system.SystemHandlers"]], "userhandlers (class in pymap.admin.handlers.user)": [[1, "pymap.admin.handlers.user.UserHandlers"]], "add_arguments() (pymap.admin.adminservice class method)": [[1, "pymap.admin.AdminService.add_arguments"]], "catch_errors() (pymap.admin.handlers.basehandler method)": [[1, "pymap.admin.handlers.BaseHandler.catch_errors"]], "get_incompatible_version_error() (in module pymap.admin.errors)": [[1, "pymap.admin.errors.get_incompatible_version_error"]], "get_unimplemented_error() (in module pymap.admin.errors)": [[1, "pymap.admin.errors.get_unimplemented_error"]], "handlers (in module pymap.admin.handlers)": [[1, "pymap.admin.handlers.handlers"]], "login_as() (pymap.admin.handlers.basehandler method)": [[1, "pymap.admin.handlers.BaseHandler.login_as"]], "login_with() (pymap.admin.handlers.basehandler method)": [[1, "pymap.admin.handlers.BaseHandler.login_with"]], "module": [[1, "module-pymap.admin"], [1, "module-pymap.admin.errors"], [1, "module-pymap.admin.handlers"], [1, "module-pymap.admin.handlers.mailbox"], [1, "module-pymap.admin.handlers.system"], [1, "module-pymap.admin.handlers.user"], [1, "module-pymap.admin.typing"], [2, "module-pymap.backend"], [2, "module-pymap.backend.mailbox"], [2, "module-pymap.backend.session"], [3, "module-pymap.backend.dict"], [4, "module-pymap.backend.maildir"], [4, "module-pymap.backend.maildir.flags"], [4, "module-pymap.backend.maildir.layout"], [4, "module-pymap.backend.maildir.subscriptions"], [4, "module-pymap.backend.maildir.uidlist"], [5, "module-pymap.backend.redis"], [5, "module-pymap.backend.redis.cleanup"], [5, "module-pymap.backend.redis.keys"], [6, "module-pymap.bytes"], [7, "module-pymap.cluster"], [7, "module-pymap.cluster.swim"], [8, "module-pymap.concurrent"], [9, "module-pymap.config"], [10, "module-pymap.context"], [11, "module-pymap.exceptions"], [12, "module-pymap.fetch"], [13, "module-pymap.filter"], [14, "module-pymap.flags"], [15, "module-pymap.imap"], [15, "module-pymap.imap.state"], [16, "module-pymap.interfaces.backend"], [16, "module-pymap.interfaces.filter"], [16, "module-pymap.interfaces.login"], [16, "module-pymap.interfaces.mailbox"], [16, "module-pymap.interfaces.message"], [16, "module-pymap.interfaces.session"], [17, "module-pymap.listtree"], [18, "module-pymap.mailbox"], [19, "module-pymap.message"], [20, "module-pymap.mime"], [20, "module-pymap.mime.cte"], [20, "module-pymap.mime.parsed"], [21, "module-pymap.parsing"], [21, "module-pymap.parsing.command"], [21, "module-pymap.parsing.command.any"], [21, "module-pymap.parsing.command.auth"], [21, "module-pymap.parsing.command.nonauth"], [21, "module-pymap.parsing.command.select"], [21, "module-pymap.parsing.commands"], [21, "module-pymap.parsing.exceptions"], [21, "module-pymap.parsing.message"], [21, "module-pymap.parsing.modutf7"], [21, "module-pymap.parsing.primitives"], [21, "module-pymap.parsing.response"], [21, "module-pymap.parsing.response.code"], [21, "module-pymap.parsing.response.fetch"], [21, "module-pymap.parsing.response.specials"], [21, "module-pymap.parsing.specials.astring"], [21, "module-pymap.parsing.specials.datetime_"], [21, "module-pymap.parsing.specials.fetchattr"], [21, "module-pymap.parsing.specials.flag"], [21, "module-pymap.parsing.specials.mailbox"], [21, "module-pymap.parsing.specials.objectid"], [21, "module-pymap.parsing.specials.options"], [21, "module-pymap.parsing.specials.searchkey"], [21, "module-pymap.parsing.specials.sequenceset"], [21, "module-pymap.parsing.specials.statusattr"], [21, "module-pymap.parsing.specials.tag"], [21, "module-pymap.parsing.state"], [22, "module-pymap.plugin"], [23, "module-pymap.search"], [24, "module-pymap.selected"], [25, "module-pymap.service"], [26, "module-pymap.sieve"], [26, "module-pymap.sieve.manage"], [26, "module-pymap.sieve.tests"], [27, "module-pymap.sockets"], [28, "module-pymap.threads"], [29, "module-pymap.token"], [29, "module-pymap.token.macaroon"], [30, "module-pymap.user"]], "pymap.admin": [[1, "module-pymap.admin"]], "pymap.admin.errors": [[1, "module-pymap.admin.errors"]], "pymap.admin.handlers": [[1, "module-pymap.admin.handlers"]], "pymap.admin.handlers.mailbox": [[1, "module-pymap.admin.handlers.mailbox"]], "pymap.admin.handlers.system": [[1, "module-pymap.admin.handlers.system"]], "pymap.admin.handlers.user": [[1, "module-pymap.admin.handlers.user"]], "pymap.admin.typing": [[1, "module-pymap.admin.typing"]], "start() (pymap.admin.adminservice method)": [[1, "pymap.admin.AdminService.start"]], "with_session() (pymap.admin.handlers.basehandler method)": [[1, "pymap.admin.handlers.BaseHandler.with_session"]], "basesession (class in pymap.backend.session)": [[2, "pymap.backend.session.BaseSession"]], "mailboxdatainterface (class in pymap.backend.mailbox)": [[2, "pymap.backend.mailbox.MailboxDataInterface"]], "mailboxdatat (class in pymap.backend.mailbox)": [[2, "pymap.backend.mailbox.MailboxDataT"]], "mailboxdatat_co (class in pymap.backend.mailbox)": [[2, "pymap.backend.mailbox.MailboxDataT_co"]], "mailboxsetinterface (class in pymap.backend.mailbox)": [[2, "pymap.backend.mailbox.MailboxSetInterface"]], "add_mailbox() (pymap.backend.mailbox.mailboxsetinterface method)": [[2, "pymap.backend.mailbox.MailboxSetInterface.add_mailbox"]], "append() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.append"]], "append_messages() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.append_messages"]], "backends (in module pymap.backend)": [[2, "pymap.backend.backends"]], "check_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.check_mailbox"]], "claim_recent() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.claim_recent"]], "cleanup() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.cleanup"]], "cleanup() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.cleanup"]], "close() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.close"]], "copy() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.copy"]], "copy_messages() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.copy_messages"]], "create_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.create_mailbox"]], "delete() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.delete"]], "delete_mailbox() (pymap.backend.mailbox.mailboxsetinterface method)": [[2, "pymap.backend.mailbox.MailboxSetInterface.delete_mailbox"]], "delete_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.delete_mailbox"]], "delimiter (pymap.backend.mailbox.mailboxsetinterface property)": [[2, "pymap.backend.mailbox.MailboxSetInterface.delimiter"]], "expunge_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.expunge_mailbox"]], "fetch_messages() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.fetch_messages"]], "filter_set (pymap.backend.session.basesession property)": [[2, "pymap.backend.session.BaseSession.filter_set"]], "find() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.find"]], "find_deleted() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.find_deleted"]], "get() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.get"]], "get_mailbox() (pymap.backend.mailbox.mailboxsetinterface method)": [[2, "pymap.backend.mailbox.MailboxSetInterface.get_mailbox"]], "get_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.get_mailbox"]], "list_mailboxes() (pymap.backend.mailbox.mailboxsetinterface method)": [[2, "pymap.backend.mailbox.MailboxSetInterface.list_mailboxes"]], "list_mailboxes() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.list_mailboxes"]], "list_subscribed() (pymap.backend.mailbox.mailboxsetinterface method)": [[2, "pymap.backend.mailbox.MailboxSetInterface.list_subscribed"]], "mailbox_id (pymap.backend.mailbox.mailboxdatainterface property)": [[2, "pymap.backend.mailbox.MailboxDataInterface.mailbox_id"]], "move() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.move"]], "move_messages() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.move_messages"]], "owner (pymap.backend.session.basesession property)": [[2, "pymap.backend.session.BaseSession.owner"]], "permanent_flags (pymap.backend.mailbox.mailboxdatainterface property)": [[2, "pymap.backend.mailbox.MailboxDataInterface.permanent_flags"]], "pymap.backend": [[2, "module-pymap.backend"]], "pymap.backend.mailbox": [[2, "module-pymap.backend.mailbox"]], "pymap.backend.session": [[2, "module-pymap.backend.session"]], "readonly (pymap.backend.mailbox.mailboxdatainterface property)": [[2, "pymap.backend.mailbox.MailboxDataInterface.readonly"]], "rename_mailbox() (pymap.backend.mailbox.mailboxsetinterface method)": [[2, "pymap.backend.mailbox.MailboxSetInterface.rename_mailbox"]], "rename_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.rename_mailbox"]], "search_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.search_mailbox"]], "select_mailbox() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.select_mailbox"]], "selected_set (pymap.backend.mailbox.mailboxdatainterface property)": [[2, "pymap.backend.mailbox.MailboxDataInterface.selected_set"]], "session_flags (pymap.backend.mailbox.mailboxdatainterface property)": [[2, "pymap.backend.mailbox.MailboxDataInterface.session_flags"]], "set_subscribed() (pymap.backend.mailbox.mailboxsetinterface method)": [[2, "pymap.backend.mailbox.MailboxSetInterface.set_subscribed"]], "snapshot() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.snapshot"]], "subscribe() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.subscribe"]], "uid_validity (pymap.backend.mailbox.mailboxdatainterface property)": [[2, "pymap.backend.mailbox.MailboxDataInterface.uid_validity"]], "unsubscribe() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.unsubscribe"]], "update() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.update"]], "update_flags() (pymap.backend.session.basesession method)": [[2, "pymap.backend.session.BaseSession.update_flags"]], "update_selected() (pymap.backend.mailbox.mailboxdatainterface method)": [[2, "pymap.backend.mailbox.MailboxDataInterface.update_selected"]], "config (class in pymap.backend.dict)": [[3, "pymap.backend.dict.Config"]], "dictbackend (class in pymap.backend.dict)": [[3, "pymap.backend.dict.DictBackend"]], "add_subparser() (pymap.backend.dict.dictbackend class method)": [[3, "pymap.backend.dict.DictBackend.add_subparser"]], "backend_capability (pymap.backend.dict.config property)": [[3, "pymap.backend.dict.Config.backend_capability"]], "config (pymap.backend.dict.dictbackend property)": [[3, "pymap.backend.dict.DictBackend.config"]], "demo_data (pymap.backend.dict.config property)": [[3, "pymap.backend.dict.Config.demo_data"]], "demo_data_resource (pymap.backend.dict.config property)": [[3, "pymap.backend.dict.Config.demo_data_resource"]], "demo_password (pymap.backend.dict.config property)": [[3, "pymap.backend.dict.Config.demo_password"]], "demo_user (pymap.backend.dict.config property)": [[3, "pymap.backend.dict.Config.demo_user"]], "init() (pymap.backend.dict.dictbackend class method)": [[3, "pymap.backend.dict.DictBackend.init"]], "login (pymap.backend.dict.dictbackend property)": [[3, "pymap.backend.dict.DictBackend.login"]], "parse_args() (pymap.backend.dict.config class method)": [[3, "pymap.backend.dict.Config.parse_args"]], "pymap.backend.dict": [[3, "module-pymap.backend.dict"]], "start() (pymap.backend.dict.dictbackend method)": [[3, "pymap.backend.dict.DictBackend.start"]], "status (pymap.backend.dict.dictbackend property)": [[3, "pymap.backend.dict.DictBackend.status"]], "config (class in pymap.backend.maildir)": [[4, "pymap.backend.maildir.Config"]], "defaultlayout (class in pymap.backend.maildir.layout)": [[4, "pymap.backend.maildir.layout.DefaultLayout"]], "file_name (pymap.backend.maildir.uidlist.uidlist attribute)": [[4, "pymap.backend.maildir.uidlist.UidList.FILE_NAME"]], "filesystemlayout (class in pymap.backend.maildir.layout)": [[4, "pymap.backend.maildir.layout.FilesystemLayout"]], "lock_file (pymap.backend.maildir.uidlist.uidlist attribute)": [[4, "pymap.backend.maildir.uidlist.UidList.LOCK_FILE"]], "maildirbackend (class in pymap.backend.maildir)": [[4, "pymap.backend.maildir.MaildirBackend"]], "maildirflags (class in pymap.backend.maildir.flags)": [[4, "pymap.backend.maildir.flags.MaildirFlags"]], "maildirlayout (class in pymap.backend.maildir.layout)": [[4, "pymap.backend.maildir.layout.MaildirLayout"]], "record (class in pymap.backend.maildir.uidlist)": [[4, "pymap.backend.maildir.uidlist.Record"]], "subscriptions (class in pymap.backend.maildir.subscriptions)": [[4, "pymap.backend.maildir.subscriptions.Subscriptions"]], "uidlist (class in pymap.backend.maildir.uidlist)": [[4, "pymap.backend.maildir.uidlist.UidList"]], "add() (pymap.backend.maildir.subscriptions.subscriptions method)": [[4, "pymap.backend.maildir.subscriptions.Subscriptions.add"]], "add_folder() (pymap.backend.maildir.layout.maildirlayout method)": [[4, "pymap.backend.maildir.layout.MaildirLayout.add_folder"]], "add_subparser() (pymap.backend.maildir.maildirbackend class method)": [[4, "pymap.backend.maildir.MaildirBackend.add_subparser"]], "backend_capability (pymap.backend.maildir.config property)": [[4, "pymap.backend.maildir.Config.backend_capability"]], "base_dir (pymap.backend.maildir.config property)": [[4, "pymap.backend.maildir.Config.base_dir"]], "colon (pymap.backend.maildir.config property)": [[4, "pymap.backend.maildir.Config.colon"]], "config (pymap.backend.maildir.maildirbackend property)": [[4, "pymap.backend.maildir.MaildirBackend.config"]], "from_maildir() (pymap.backend.maildir.flags.maildirflags method)": [[4, "pymap.backend.maildir.flags.MaildirFlags.from_maildir"]], "get() (pymap.backend.maildir.layout.maildirlayout class method)": [[4, "pymap.backend.maildir.layout.MaildirLayout.get"]], "get() (pymap.backend.maildir.uidlist.uidlist method)": [[4, "pymap.backend.maildir.uidlist.UidList.get"]], "get_all() (pymap.backend.maildir.uidlist.uidlist method)": [[4, "pymap.backend.maildir.uidlist.UidList.get_all"]], "get_folder() (pymap.backend.maildir.layout.maildirlayout method)": [[4, "pymap.backend.maildir.layout.MaildirLayout.get_folder"]], "get_path() (pymap.backend.maildir.layout.maildirlayout method)": [[4, "pymap.backend.maildir.layout.MaildirLayout.get_path"]], "init() (pymap.backend.maildir.maildirbackend class method)": [[4, "pymap.backend.maildir.MaildirBackend.init"]], "key (pymap.backend.maildir.uidlist.record property)": [[4, "pymap.backend.maildir.uidlist.Record.key"]], "keywords (pymap.backend.maildir.flags.maildirflags property)": [[4, "pymap.backend.maildir.flags.MaildirFlags.keywords"]], "layout (pymap.backend.maildir.config property)": [[4, "pymap.backend.maildir.Config.layout"]], "list_folders() (pymap.backend.maildir.layout.maildirlayout method)": [[4, "pymap.backend.maildir.layout.MaildirLayout.list_folders"]], "login (pymap.backend.maildir.maildirbackend property)": [[4, "pymap.backend.maildir.MaildirBackend.login"]], "parse_args() (pymap.backend.maildir.config class method)": [[4, "pymap.backend.maildir.Config.parse_args"]], "path (pymap.backend.maildir.layout.maildirlayout property)": [[4, "pymap.backend.maildir.layout.MaildirLayout.path"]], "permanent_flags (pymap.backend.maildir.flags.maildirflags property)": [[4, "pymap.backend.maildir.flags.MaildirFlags.permanent_flags"]], "pymap.backend.maildir": [[4, "module-pymap.backend.maildir"]], "pymap.backend.maildir.flags": [[4, "module-pymap.backend.maildir.flags"]], "pymap.backend.maildir.layout": [[4, "module-pymap.backend.maildir.layout"]], "pymap.backend.maildir.subscriptions": [[4, "module-pymap.backend.maildir.subscriptions"]], "pymap.backend.maildir.uidlist": [[4, "module-pymap.backend.maildir.uidlist"]], "records (pymap.backend.maildir.uidlist.uidlist property)": [[4, "pymap.backend.maildir.uidlist.UidList.records"]], "remove() (pymap.backend.maildir.subscriptions.subscriptions method)": [[4, "pymap.backend.maildir.subscriptions.Subscriptions.remove"]], "remove() (pymap.backend.maildir.uidlist.uidlist method)": [[4, "pymap.backend.maildir.uidlist.UidList.remove"]], "remove_folder() (pymap.backend.maildir.layout.maildirlayout method)": [[4, "pymap.backend.maildir.layout.MaildirLayout.remove_folder"]], "rename_folder() (pymap.backend.maildir.layout.maildirlayout method)": [[4, "pymap.backend.maildir.layout.MaildirLayout.rename_folder"]], "set() (pymap.backend.maildir.subscriptions.subscriptions method)": [[4, "pymap.backend.maildir.subscriptions.Subscriptions.set"]], "set() (pymap.backend.maildir.uidlist.uidlist method)": [[4, "pymap.backend.maildir.uidlist.UidList.set"]], "start() (pymap.backend.maildir.maildirbackend method)": [[4, "pymap.backend.maildir.MaildirBackend.start"]], "status (pymap.backend.maildir.maildirbackend property)": [[4, "pymap.backend.maildir.MaildirBackend.status"]], "subscribed (pymap.backend.maildir.subscriptions.subscriptions property)": [[4, "pymap.backend.maildir.subscriptions.Subscriptions.subscribed"]], "system_flags (pymap.backend.maildir.flags.maildirflags property)": [[4, "pymap.backend.maildir.flags.MaildirFlags.system_flags"]], "to_maildir() (pymap.backend.maildir.flags.maildirflags method)": [[4, "pymap.backend.maildir.flags.MaildirFlags.to_maildir"]], "cleanupaction (class in pymap.backend.redis.cleanup)": [[5, "pymap.backend.redis.cleanup.CleanupAction"]], "cleanupkeys (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.CleanupKeys"]], "config (class in pymap.backend.redis)": [[5, "pymap.backend.redis.Config"]], "contentkeys (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.ContentKeys"]], "filterkeys (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.FilterKeys"]], "globalkeys (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.GlobalKeys"]], "keysgroup (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.KeysGroup"]], "mailboxkeys (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.MailboxKeys"]], "namespacekeys (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.NamespaceKeys"]], "redisbackend (class in pymap.backend.redis)": [[5, "pymap.backend.redis.RedisBackend"]], "rediskey (class in pymap.backend.redis.keys)": [[5, "pymap.backend.redis.keys.RedisKey"]], "session (class in pymap.backend.redis)": [[5, "pymap.backend.redis.Session"]], "add_subparser() (pymap.backend.redis.redisbackend class method)": [[5, "pymap.backend.redis.RedisBackend.add_subparser"]], "address (pymap.backend.redis.config property)": [[5, "pymap.backend.redis.Config.address"]], "backend_capability (pymap.backend.redis.config property)": [[5, "pymap.backend.redis.Config.backend_capability"]], "config (pymap.backend.redis.redisbackend property)": [[5, "pymap.backend.redis.RedisBackend.config"]], "data_address (pymap.backend.redis.config property)": [[5, "pymap.backend.redis.Config.data_address"]], "end() (pymap.backend.redis.keys.rediskey method)": [[5, "pymap.backend.redis.keys.RedisKey.end"]], "filter_set (pymap.backend.redis.session property)": [[5, "pymap.backend.redis.Session.filter_set"]], "fork() (pymap.backend.redis.keys.rediskey method)": [[5, "pymap.backend.redis.keys.RedisKey.fork"]], "init() (pymap.backend.redis.redisbackend class method)": [[5, "pymap.backend.redis.RedisBackend.init"]], "keys (pymap.backend.redis.keys.cleanupkeys property)": [[5, "pymap.backend.redis.keys.CleanupKeys.keys"]], "keys (pymap.backend.redis.keys.contentkeys property)": [[5, "pymap.backend.redis.keys.ContentKeys.keys"]], "keys (pymap.backend.redis.keys.filterkeys property)": [[5, "pymap.backend.redis.keys.FilterKeys.keys"]], "keys (pymap.backend.redis.keys.globalkeys property)": [[5, "pymap.backend.redis.keys.GlobalKeys.keys"]], "keys (pymap.backend.redis.keys.keysgroup property)": [[5, "pymap.backend.redis.keys.KeysGroup.keys"]], "keys (pymap.backend.redis.keys.mailboxkeys property)": [[5, "pymap.backend.redis.keys.MailboxKeys.keys"]], "keys (pymap.backend.redis.keys.namespacekeys property)": [[5, "pymap.backend.redis.keys.NamespaceKeys.keys"]], "login (pymap.backend.redis.redisbackend property)": [[5, "pymap.backend.redis.RedisBackend.login"]], "parse_args() (pymap.backend.redis.config class method)": [[5, "pymap.backend.redis.Config.parse_args"]], "prefix (pymap.backend.redis.config property)": [[5, "pymap.backend.redis.Config.prefix"]], "pymap.backend.redis": [[5, "module-pymap.backend.redis"]], "pymap.backend.redis.cleanup": [[5, "module-pymap.backend.redis.cleanup"]], "pymap.backend.redis.keys": [[5, "module-pymap.backend.redis.keys"]], "separator (pymap.backend.redis.config property)": [[5, "pymap.backend.redis.Config.separator"]], "start() (pymap.backend.redis.redisbackend method)": [[5, "pymap.backend.redis.RedisBackend.start"]], "status (pymap.backend.redis.redisbackend property)": [[5, "pymap.backend.redis.RedisBackend.status"]], "users_prefix (pymap.backend.redis.config property)": [[5, "pymap.backend.redis.Config.users_prefix"]], "bytesformat (class in pymap.bytes)": [[6, "pymap.bytes.BytesFormat"]], "maybebytes (in module pymap.bytes)": [[6, "pymap.bytes.MaybeBytes"]], "maybebytest (class in pymap.bytes)": [[6, "pymap.bytes.MaybeBytesT"]], "writestream (class in pymap.bytes)": [[6, "pymap.bytes.WriteStream"]], "writeable (class in pymap.bytes)": [[6, "pymap.bytes.Writeable"]], "concat() (pymap.bytes.writeable class method)": [[6, "pymap.bytes.Writeable.concat"]], "empty() (pymap.bytes.writeable class method)": [[6, "pymap.bytes.Writeable.empty"]], "format() (pymap.bytes.bytesformat method)": [[6, "pymap.bytes.BytesFormat.format"]], "has_bytes() (in module pymap.bytes)": [[6, "pymap.bytes.has_bytes"]], "join() (pymap.bytes.bytesformat method)": [[6, "pymap.bytes.BytesFormat.join"]], "pymap.bytes": [[6, "module-pymap.bytes"]], "tobytes() (pymap.bytes.writeable method)": [[6, "pymap.bytes.Writeable.tobytes"]], "wrap() (pymap.bytes.writeable class method)": [[6, "pymap.bytes.Writeable.wrap"]], "write() (pymap.bytes.writestream method)": [[6, "pymap.bytes.WriteStream.write"]], "write() (pymap.bytes.writeable method)": [[6, "pymap.bytes.Writeable.write"]], "clustermetadata (class in pymap.cluster)": [[7, "pymap.cluster.ClusterMetadata"]], "listencallback (class in pymap.cluster)": [[7, "pymap.cluster.ListenCallback"]], "memberinterface (class in pymap.cluster)": [[7, "pymap.cluster.MemberInterface"]], "swimservice (class in pymap.cluster.swim)": [[7, "pymap.cluster.swim.SwimService"]], "__call__() (pymap.cluster.listencallback method)": [[7, "pymap.cluster.ListenCallback.__call__"]], "add() (pymap.cluster.clustermetadata method)": [[7, "pymap.cluster.ClusterMetadata.add"]], "add_arguments() (pymap.cluster.swim.swimservice class method)": [[7, "pymap.cluster.swim.SwimService.add_arguments"]], "discard() (pymap.cluster.clustermetadata method)": [[7, "pymap.cluster.ClusterMetadata.discard"]], "get_all() (pymap.cluster.clustermetadata method)": [[7, "pymap.cluster.ClusterMetadata.get_all"]], "listen() (pymap.cluster.clustermetadata method)": [[7, "pymap.cluster.ClusterMetadata.listen"]], "local (pymap.cluster.clustermetadata property)": [[7, "pymap.cluster.ClusterMetadata.local"]], "metadata (pymap.cluster.memberinterface property)": [[7, "pymap.cluster.MemberInterface.metadata"]], "name (pymap.cluster.memberinterface property)": [[7, "pymap.cluster.MemberInterface.name"]], "pymap.cluster": [[7, "module-pymap.cluster"]], "pymap.cluster.swim": [[7, "module-pymap.cluster.swim"]], "remote (pymap.cluster.clustermetadata property)": [[7, "pymap.cluster.ClusterMetadata.remote"]], "start() (pymap.cluster.swim.swimservice method)": [[7, "pymap.cluster.swim.SwimService.start"]], "transport_type (in module pymap.cluster.swim)": [[7, "pymap.cluster.swim.transport_type"]], "event (class in pymap.concurrent)": [[8, "pymap.concurrent.Event"]], "eventt (class in pymap.concurrent)": [[8, "pymap.concurrent.EventT"]], "filelock (class in pymap.concurrent)": [[8, "pymap.concurrent.FileLock"]], "readwritelock (class in pymap.concurrent)": [[8, "pymap.concurrent.ReadWriteLock"]], "rett (class in pymap.concurrent)": [[8, "pymap.concurrent.RetT"]], "subsystem (class in pymap.concurrent)": [[8, "pymap.concurrent.Subsystem"]], "clear() (pymap.concurrent.event method)": [[8, "pymap.concurrent.Event.clear"]], "execute() (pymap.concurrent.subsystem method)": [[8, "pymap.concurrent.Subsystem.execute"]], "for_asyncio() (pymap.concurrent.event class method)": [[8, "pymap.concurrent.Event.for_asyncio"]], "for_asyncio() (pymap.concurrent.readwritelock class method)": [[8, "pymap.concurrent.ReadWriteLock.for_asyncio"]], "for_asyncio() (pymap.concurrent.subsystem class method)": [[8, "pymap.concurrent.Subsystem.for_asyncio"]], "for_executor() (pymap.concurrent.subsystem class method)": [[8, "pymap.concurrent.Subsystem.for_executor"]], "for_threading() (pymap.concurrent.event class method)": [[8, "pymap.concurrent.Event.for_threading"]], "for_threading() (pymap.concurrent.readwritelock class method)": [[8, "pymap.concurrent.ReadWriteLock.for_threading"]], "for_threading() (pymap.concurrent.subsystem class method)": [[8, "pymap.concurrent.Subsystem.for_threading"]], "is_set() (pymap.concurrent.event method)": [[8, "pymap.concurrent.Event.is_set"]], "new_event() (pymap.concurrent.subsystem method)": [[8, "pymap.concurrent.Subsystem.new_event"]], "new_rwlock() (pymap.concurrent.subsystem method)": [[8, "pymap.concurrent.Subsystem.new_rwlock"]], "or_event() (pymap.concurrent.event method)": [[8, "pymap.concurrent.Event.or_event"]], "pymap.concurrent": [[8, "module-pymap.concurrent"]], "read_lock() (pymap.concurrent.filelock method)": [[8, "pymap.concurrent.FileLock.read_lock"]], "read_lock() (pymap.concurrent.readwritelock method)": [[8, "pymap.concurrent.ReadWriteLock.read_lock"]], "set() (pymap.concurrent.event method)": [[8, "pymap.concurrent.Event.set"]], "subsystem (pymap.concurrent.event property)": [[8, "pymap.concurrent.Event.subsystem"]], "subsystem (pymap.concurrent.filelock property)": [[8, "pymap.concurrent.FileLock.subsystem"]], "subsystem (pymap.concurrent.readwritelock property)": [[8, "pymap.concurrent.ReadWriteLock.subsystem"]], "subsystem (pymap.concurrent.subsystem property)": [[8, "pymap.concurrent.Subsystem.subsystem"]], "wait() (pymap.concurrent.event method)": [[8, "pymap.concurrent.Event.wait"]], "write_lock() (pymap.concurrent.filelock method)": [[8, "pymap.concurrent.FileLock.write_lock"]], "write_lock() (pymap.concurrent.readwritelock method)": [[8, "pymap.concurrent.ReadWriteLock.write_lock"]], "backendcapability (class in pymap.config)": [[9, "pymap.config.BackendCapability"]], "configt (class in pymap.config)": [[9, "pymap.config.ConfigT"]], "configt_contra (class in pymap.config)": [[9, "pymap.config.ConfigT_contra"]], "imapconfig (class in pymap.config)": [[9, "pymap.config.IMAPConfig"]], "apply_context() (pymap.config.imapconfig method)": [[9, "pymap.config.IMAPConfig.apply_context"]], "args (pymap.config.imapconfig attribute)": [[9, "pymap.config.IMAPConfig.args"]], "backend_capability (pymap.config.imapconfig property)": [[9, "pymap.config.IMAPConfig.backend_capability"]], "from_args() (pymap.config.imapconfig class method)": [[9, "pymap.config.IMAPConfig.from_args"]], "parse_args() (pymap.config.imapconfig class method)": [[9, "pymap.config.IMAPConfig.parse_args"]], "pymap.config": [[9, "module-pymap.config"]], "cluster_metadata (in module pymap.context)": [[10, "pymap.context.cluster_metadata"]], "connection_exit (in module pymap.context)": [[10, "pymap.context.connection_exit"]], "current_command (in module pymap.context)": [[10, "pymap.context.current_command"]], "language_code (in module pymap.context)": [[10, "pymap.context.language_code"]], "pymap.context": [[10, "module-pymap.context"]], "socket_info (in module pymap.context)": [[10, "pymap.context.socket_info"]], "subsystem (in module pymap.context)": [[10, "pymap.context.subsystem"]], "appendfailure": [[11, "pymap.exceptions.AppendFailure"]], "authorizationfailure": [[11, "pymap.exceptions.AuthorizationFailure"]], "closeconnection": [[11, "pymap.exceptions.CloseConnection"]], "incompatibledata": [[11, "pymap.exceptions.IncompatibleData"]], "invalidauth": [[11, "pymap.exceptions.InvalidAuth"]], "mailboxconflict": [[11, "pymap.exceptions.MailboxConflict"]], "mailboxerror": [[11, "pymap.exceptions.MailboxError"]], "mailboxhaschildren": [[11, "pymap.exceptions.MailboxHasChildren"]], "mailboxnotfound": [[11, "pymap.exceptions.MailboxNotFound"]], "mailboxreadonly": [[11, "pymap.exceptions.MailboxReadOnly"]], "notallowederror": [[11, "pymap.exceptions.NotAllowedError"]], "notsupportederror": [[11, "pymap.exceptions.NotSupportedError"]], "responseerror": [[11, "pymap.exceptions.ResponseError"]], "searchnotallowed": [[11, "pymap.exceptions.SearchNotAllowed"]], "temporaryfailure": [[11, "pymap.exceptions.TemporaryFailure"]], "usernotfound": [[11, "pymap.exceptions.UserNotFound"]], "get_response() (pymap.exceptions.authorizationfailure method)": [[11, "pymap.exceptions.AuthorizationFailure.get_response"]], "get_response() (pymap.exceptions.closeconnection method)": [[11, "pymap.exceptions.CloseConnection.get_response"]], "get_response() (pymap.exceptions.invalidauth method)": [[11, "pymap.exceptions.InvalidAuth.get_response"]], "get_response() (pymap.exceptions.mailboxerror method)": [[11, "pymap.exceptions.MailboxError.get_response"]], "get_response() (pymap.exceptions.notallowederror method)": [[11, "pymap.exceptions.NotAllowedError.get_response"]], "get_response() (pymap.exceptions.notsupportederror method)": [[11, "pymap.exceptions.NotSupportedError.get_response"]], "get_response() (pymap.exceptions.responseerror method)": [[11, "pymap.exceptions.ResponseError.get_response"]], "get_response() (pymap.exceptions.temporaryfailure method)": [[11, "pymap.exceptions.TemporaryFailure.get_response"]], "get_response() (pymap.exceptions.usernotfound method)": [[11, "pymap.exceptions.UserNotFound.get_response"]], "pymap.exceptions": [[11, "module-pymap.exceptions"]], "dynamicfetchvalue (class in pymap.fetch)": [[12, "pymap.fetch.DynamicFetchValue"]], "dynamicloadedfetchvalue (class in pymap.fetch)": [[12, "pymap.fetch.DynamicLoadedFetchValue"]], "loadedmessageprovider (class in pymap.fetch)": [[12, "pymap.fetch.LoadedMessageProvider"]], "messageattributes (class in pymap.fetch)": [[12, "pymap.fetch.MessageAttributes"]], "get_value() (pymap.fetch.dynamicfetchvalue method)": [[12, "pymap.fetch.DynamicFetchValue.get_value"]], "get_value() (pymap.fetch.dynamicloadedfetchvalue method)": [[12, "pymap.fetch.DynamicLoadedFetchValue.get_value"]], "load_hook() (pymap.fetch.messageattributes method)": [[12, "pymap.fetch.MessageAttributes.load_hook"]], "loaded_msg (pymap.fetch.loadedmessageprovider property)": [[12, "pymap.fetch.LoadedMessageProvider.loaded_msg"]], "placeholder (pymap.fetch.messageattributes attribute)": [[12, "pymap.fetch.MessageAttributes.placeholder"]], "pymap.fetch": [[12, "module-pymap.fetch"]], "pluginfilterset (class in pymap.filter)": [[13, "pymap.filter.PluginFilterSet"]], "singlefilterset (class in pymap.filter)": [[13, "pymap.filter.SingleFilterSet"]], "clear_active() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.clear_active"]], "compiler (pymap.filter.pluginfilterset property)": [[13, "pymap.filter.PluginFilterSet.compiler"]], "delete() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.delete"]], "filters (in module pymap.filter)": [[13, "pymap.filter.filters"]], "get() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.get"]], "get_active() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.get_active"]], "get_all() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.get_all"]], "name (pymap.filter.singlefilterset property)": [[13, "pymap.filter.SingleFilterSet.name"]], "put() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.put"]], "pymap.filter": [[13, "module-pymap.filter"]], "rename() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.rename"]], "replace_active() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.replace_active"]], "set_active() (pymap.filter.singlefilterset method)": [[13, "pymap.filter.SingleFilterSet.set_active"]], "add (pymap.flags.flagop attribute)": [[14, "pymap.flags.FlagOp.ADD"]], "delete (pymap.flags.flagop attribute)": [[14, "pymap.flags.FlagOp.DELETE"]], "flagop (class in pymap.flags)": [[14, "pymap.flags.FlagOp"]], "permanentflags (class in pymap.flags)": [[14, "pymap.flags.PermanentFlags"]], "replace (pymap.flags.flagop attribute)": [[14, "pymap.flags.FlagOp.REPLACE"]], "sessionflags (class in pymap.flags)": [[14, "pymap.flags.SessionFlags"]], "add_recent() (pymap.flags.sessionflags method)": [[14, "pymap.flags.SessionFlags.add_recent"]], "apply() (pymap.flags.flagop method)": [[14, "pymap.flags.FlagOp.apply"]], "defined (pymap.flags.permanentflags property)": [[14, "pymap.flags.PermanentFlags.defined"]], "defined (pymap.flags.sessionflags property)": [[14, "pymap.flags.SessionFlags.defined"]], "flags (pymap.flags.sessionflags property)": [[14, "pymap.flags.SessionFlags.flags"]], "get() (pymap.flags.sessionflags method)": [[14, "pymap.flags.SessionFlags.get"]], "intersect() (pymap.flags.permanentflags method)": [[14, "pymap.flags.PermanentFlags.intersect"]], "intersect() (pymap.flags.sessionflags method)": [[14, "pymap.flags.SessionFlags.intersect"]], "pymap.flags": [[14, "module-pymap.flags"]], "recent (pymap.flags.sessionflags property)": [[14, "pymap.flags.SessionFlags.recent"]], "recent_uids (pymap.flags.sessionflags property)": [[14, "pymap.flags.SessionFlags.recent_uids"]], "remove() (pymap.flags.sessionflags method)": [[14, "pymap.flags.SessionFlags.remove"]], "update() (pymap.flags.sessionflags method)": [[14, "pymap.flags.SessionFlags.update"]], "connectionstate (class in pymap.imap.state)": [[15, "pymap.imap.state.ConnectionState"]], "imapconnection (class in pymap.imap)": [[15, "pymap.imap.IMAPConnection"]], "imapserver (class in pymap.imap)": [[15, "pymap.imap.IMAPServer"]], "imapservice (class in pymap.imap)": [[15, "pymap.imap.IMAPService"]], "add_arguments() (pymap.imap.imapservice class method)": [[15, "pymap.imap.IMAPService.add_arguments"]], "pymap.imap": [[15, "module-pymap.imap"]], "pymap.imap.state": [[15, "module-pymap.imap.state"]], "run() (pymap.imap.imapconnection method)": [[15, "pymap.imap.IMAPConnection.run"]], "start() (pymap.imap.imapservice method)": [[15, "pymap.imap.IMAPService.start"]], "backendinterface (class in pymap.interfaces.backend)": [[16, "pymap.interfaces.backend.BackendInterface"]], "cachedmessage (class in pymap.interfaces.message)": [[16, "pymap.interfaces.message.CachedMessage"]], "filtercompilerinterface (class in pymap.interfaces.filter)": [[16, "pymap.interfaces.filter.FilterCompilerInterface"]], "filterinterface (class in pymap.interfaces.filter)": [[16, "pymap.interfaces.filter.FilterInterface"]], "filtersetinterface (class in pymap.interfaces.filter)": [[16, "pymap.interfaces.filter.FilterSetInterface"]], "filtervaluet (class in pymap.interfaces.filter)": [[16, "pymap.interfaces.filter.FilterValueT"]], "flagskey (in module pymap.interfaces.message)": [[16, "pymap.interfaces.message.FlagsKey"]], "identityinterface (class in pymap.interfaces.login)": [[16, "pymap.interfaces.login.IdentityInterface"]], "loadedmessageinterface (class in pymap.interfaces.message)": [[16, "pymap.interfaces.message.LoadedMessageInterface"]], "logininterface (class in pymap.interfaces.login)": [[16, "pymap.interfaces.login.LoginInterface"]], "mailboxinterface (class in pymap.interfaces.mailbox)": [[16, "pymap.interfaces.mailbox.MailboxInterface"]], "messageinterface (class in pymap.interfaces.message)": [[16, "pymap.interfaces.message.MessageInterface"]], "messaget (class in pymap.interfaces.message)": [[16, "pymap.interfaces.message.MessageT"]], "messaget_co (class in pymap.interfaces.message)": [[16, "pymap.interfaces.message.MessageT_co"]], "serviceinterface (class in pymap.interfaces.backend)": [[16, "pymap.interfaces.backend.ServiceInterface"]], "sessioninterface (class in pymap.interfaces.session)": [[16, "pymap.interfaces.session.SessionInterface"]], "add_arguments() (pymap.interfaces.backend.serviceinterface class method)": [[16, "pymap.interfaces.backend.ServiceInterface.add_arguments"]], "add_subparser() (pymap.interfaces.backend.backendinterface class method)": [[16, "pymap.interfaces.backend.BackendInterface.add_subparser"]], "append_messages() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.append_messages"]], "apply() (pymap.interfaces.filter.filterinterface method)": [[16, "pymap.interfaces.filter.FilterInterface.apply"]], "authenticate() (pymap.interfaces.login.logininterface method)": [[16, "pymap.interfaces.login.LoginInterface.authenticate"]], "authorize() (pymap.interfaces.login.logininterface method)": [[16, "pymap.interfaces.login.LoginInterface.authorize"]], "check_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.check_mailbox"]], "cleanup() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.cleanup"]], "clear_active() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.clear_active"]], "close() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.close"]], "compile() (pymap.interfaces.filter.filtercompilerinterface method)": [[16, "pymap.interfaces.filter.FilterCompilerInterface.compile"]], "compiler (pymap.interfaces.filter.filtersetinterface property)": [[16, "pymap.interfaces.filter.FilterSetInterface.compiler"]], "config (pymap.interfaces.backend.backendinterface property)": [[16, "pymap.interfaces.backend.BackendInterface.config"]], "contains() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.contains"]], "copy_messages() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.copy_messages"]], "create_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.create_mailbox"]], "delete() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.delete"]], "delete() (pymap.interfaces.login.identityinterface method)": [[16, "pymap.interfaces.login.IdentityInterface.delete"]], "delete_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.delete_mailbox"]], "email_id (pymap.interfaces.message.cachedmessage property)": [[16, "pymap.interfaces.message.CachedMessage.email_id"]], "email_id (pymap.interfaces.message.messageinterface property)": [[16, "pymap.interfaces.message.MessageInterface.email_id"]], "exists (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.exists"]], "expunge_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.expunge_mailbox"]], "expunged (pymap.interfaces.message.messageinterface property)": [[16, "pymap.interfaces.message.MessageInterface.expunged"]], "fetch_messages() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.fetch_messages"]], "filter_set (pymap.interfaces.session.sessioninterface property)": [[16, "pymap.interfaces.session.SessionInterface.filter_set"]], "filter_type (pymap.interfaces.filter.filtercompilerinterface property)": [[16, "pymap.interfaces.filter.FilterCompilerInterface.filter_type"]], "first_unseen (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.first_unseen"]], "flags (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.flags"]], "flags_key (pymap.interfaces.message.cachedmessage property)": [[16, "pymap.interfaces.message.CachedMessage.flags_key"]], "get() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.get"]], "get() (pymap.interfaces.login.identityinterface method)": [[16, "pymap.interfaces.login.IdentityInterface.get"]], "get_active() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.get_active"]], "get_all() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.get_all"]], "get_body() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_body"]], "get_body_structure() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_body_structure"]], "get_envelope_structure() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_envelope_structure"]], "get_flags() (pymap.interfaces.message.cachedmessage method)": [[16, "pymap.interfaces.message.CachedMessage.get_flags"]], "get_flags() (pymap.interfaces.message.messageinterface method)": [[16, "pymap.interfaces.message.MessageInterface.get_flags"]], "get_header() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_header"]], "get_headers() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_headers"]], "get_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.get_mailbox"]], "get_message_headers() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_message_headers"]], "get_message_text() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_message_text"]], "get_size() (pymap.interfaces.message.loadedmessageinterface method)": [[16, "pymap.interfaces.message.LoadedMessageInterface.get_size"]], "init() (pymap.interfaces.backend.backendinterface class method)": [[16, "pymap.interfaces.backend.BackendInterface.init"]], "internal_date (pymap.interfaces.message.cachedmessage property)": [[16, "pymap.interfaces.message.CachedMessage.internal_date"]], "internal_date (pymap.interfaces.message.messageinterface property)": [[16, "pymap.interfaces.message.MessageInterface.internal_date"]], "list_mailboxes() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.list_mailboxes"]], "load_content() (pymap.interfaces.message.messageinterface method)": [[16, "pymap.interfaces.message.MessageInterface.load_content"]], "login (pymap.interfaces.backend.backendinterface property)": [[16, "pymap.interfaces.backend.BackendInterface.login"]], "mailbox_id (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.mailbox_id"]], "move_messages() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.move_messages"]], "name (pymap.interfaces.login.identityinterface property)": [[16, "pymap.interfaces.login.IdentityInterface.name"]], "new_session() (pymap.interfaces.login.identityinterface method)": [[16, "pymap.interfaces.login.IdentityInterface.new_session"]], "new_token() (pymap.interfaces.login.identityinterface method)": [[16, "pymap.interfaces.login.IdentityInterface.new_token"]], "next_uid (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.next_uid"]], "owner (pymap.interfaces.session.sessioninterface property)": [[16, "pymap.interfaces.session.SessionInterface.owner"]], "permanent_flags (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.permanent_flags"]], "permanent_flags (pymap.interfaces.message.cachedmessage property)": [[16, "pymap.interfaces.message.CachedMessage.permanent_flags"]], "permanent_flags (pymap.interfaces.message.messageinterface property)": [[16, "pymap.interfaces.message.MessageInterface.permanent_flags"]], "put() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.put"]], "pymap.interfaces.backend": [[16, "module-pymap.interfaces.backend"]], "pymap.interfaces.filter": [[16, "module-pymap.interfaces.filter"]], "pymap.interfaces.login": [[16, "module-pymap.interfaces.login"]], "pymap.interfaces.mailbox": [[16, "module-pymap.interfaces.mailbox"]], "pymap.interfaces.message": [[16, "module-pymap.interfaces.message"]], "pymap.interfaces.session": [[16, "module-pymap.interfaces.session"]], "readonly (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.readonly"]], "recent (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.recent"]], "rename() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.rename"]], "rename_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.rename_mailbox"]], "requirement (pymap.interfaces.message.loadedmessageinterface property)": [[16, "pymap.interfaces.message.LoadedMessageInterface.requirement"]], "roles (pymap.interfaces.login.identityinterface property)": [[16, "pymap.interfaces.login.IdentityInterface.roles"]], "search_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.search_mailbox"]], "select_mailbox() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.select_mailbox"]], "session_flags (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.session_flags"]], "set() (pymap.interfaces.login.identityinterface method)": [[16, "pymap.interfaces.login.IdentityInterface.set"]], "set_active() (pymap.interfaces.filter.filtersetinterface method)": [[16, "pymap.interfaces.filter.FilterSetInterface.set_active"]], "start() (pymap.interfaces.backend.backendinterface method)": [[16, "pymap.interfaces.backend.BackendInterface.start"]], "start() (pymap.interfaces.backend.serviceinterface method)": [[16, "pymap.interfaces.backend.ServiceInterface.start"]], "status (pymap.interfaces.backend.backendinterface property)": [[16, "pymap.interfaces.backend.BackendInterface.status"]], "subscribe() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.subscribe"]], "thread_id (pymap.interfaces.message.cachedmessage property)": [[16, "pymap.interfaces.message.CachedMessage.thread_id"]], "thread_id (pymap.interfaces.message.messageinterface property)": [[16, "pymap.interfaces.message.MessageInterface.thread_id"]], "tokens (pymap.interfaces.login.logininterface property)": [[16, "pymap.interfaces.login.LoginInterface.tokens"]], "uid (pymap.interfaces.message.cachedmessage property)": [[16, "pymap.interfaces.message.CachedMessage.uid"]], "uid (pymap.interfaces.message.messageinterface property)": [[16, "pymap.interfaces.message.MessageInterface.uid"]], "uid_validity (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.uid_validity"]], "unseen (pymap.interfaces.mailbox.mailboxinterface property)": [[16, "pymap.interfaces.mailbox.MailboxInterface.unseen"]], "unsubscribe() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.unsubscribe"]], "update_flags() (pymap.interfaces.session.sessioninterface method)": [[16, "pymap.interfaces.session.SessionInterface.update_flags"]], "value_type (pymap.interfaces.filter.filtercompilerinterface property)": [[16, "pymap.interfaces.filter.FilterCompilerInterface.value_type"]], "listentry (class in pymap.listtree)": [[17, "pymap.listtree.ListEntry"]], "listtree (class in pymap.listtree)": [[17, "pymap.listtree.ListTree"]], "attributes (pymap.listtree.listentry property)": [[17, "pymap.listtree.ListEntry.attributes"]], "get() (pymap.listtree.listtree method)": [[17, "pymap.listtree.ListTree.get"]], "get_renames() (pymap.listtree.listtree method)": [[17, "pymap.listtree.ListTree.get_renames"]], "list() (pymap.listtree.listtree method)": [[17, "pymap.listtree.ListTree.list"]], "list_matching() (pymap.listtree.listtree method)": [[17, "pymap.listtree.ListTree.list_matching"]], "pymap.listtree": [[17, "module-pymap.listtree"]], "set_marked() (pymap.listtree.listtree method)": [[17, "pymap.listtree.ListTree.set_marked"]], "update() (pymap.listtree.listtree method)": [[17, "pymap.listtree.ListTree.update"]], "mailboxsnapshot (class in pymap.mailbox)": [[18, "pymap.mailbox.MailboxSnapshot"]], "flags (pymap.mailbox.mailboxsnapshot property)": [[18, "pymap.mailbox.MailboxSnapshot.flags"]], "new_uid_validity() (pymap.mailbox.mailboxsnapshot class method)": [[18, "pymap.mailbox.MailboxSnapshot.new_uid_validity"]], "pymap.mailbox": [[18, "module-pymap.mailbox"]], "baseloadedmessage (class in pymap.message)": [[19, "pymap.message.BaseLoadedMessage"]], "basemessage (class in pymap.message)": [[19, "pymap.message.BaseMessage"]], "contains() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.contains"]], "email_id (pymap.message.basemessage property)": [[19, "pymap.message.BaseMessage.email_id"]], "flags_key (pymap.message.basemessage property)": [[19, "pymap.message.BaseMessage.flags_key"]], "get_body() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_body"]], "get_body_structure() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_body_structure"]], "get_envelope_structure() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_envelope_structure"]], "get_flags() (pymap.message.basemessage method)": [[19, "pymap.message.BaseMessage.get_flags"]], "get_header() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_header"]], "get_headers() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_headers"]], "get_message_headers() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_message_headers"]], "get_message_text() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_message_text"]], "get_size() (pymap.message.baseloadedmessage method)": [[19, "pymap.message.BaseLoadedMessage.get_size"]], "permanent_flags (pymap.message.basemessage property)": [[19, "pymap.message.BaseMessage.permanent_flags"]], "pymap.message": [[19, "module-pymap.message"]], "requirement (pymap.message.baseloadedmessage property)": [[19, "pymap.message.BaseLoadedMessage.requirement"]], "thread_id (pymap.message.basemessage property)": [[19, "pymap.message.BaseMessage.thread_id"]], "messagebody (class in pymap.mime)": [[20, "pymap.mime.MessageBody"]], "messagecontent (class in pymap.mime)": [[20, "pymap.mime.MessageContent"]], "messagedecoder (class in pymap.mime.cte)": [[20, "pymap.mime.cte.MessageDecoder"]], "messageheader (class in pymap.mime)": [[20, "pymap.mime.MessageHeader"]], "parsedheaders (class in pymap.mime.parsed)": [[20, "pymap.mime.parsed.ParsedHeaders"]], "bcc (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.bcc"]], "cc (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.cc"]], "content_description (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.content_description"]], "content_disposition (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.content_disposition"]], "content_id (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.content_id"]], "content_language (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.content_language"]], "content_location (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.content_location"]], "content_transfer_encoding (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.content_transfer_encoding"]], "content_type (pymap.mime.messagebody attribute)": [[20, "pymap.mime.MessageBody.content_type"]], "content_type (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.content_type"]], "date (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.date"]], "decode() (pymap.mime.cte.messagedecoder method)": [[20, "pymap.mime.cte.MessageDecoder.decode"]], "empty() (pymap.mime.messagebody class method)": [[20, "pymap.mime.MessageBody.empty"]], "empty() (pymap.mime.messageheader class method)": [[20, "pymap.mime.MessageHeader.empty"]], "folded (pymap.mime.messageheader attribute)": [[20, "pymap.mime.MessageHeader.folded"]], "from_ (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.from_"]], "from_json() (pymap.mime.messagebody class method)": [[20, "pymap.mime.MessageBody.from_json"]], "from_json() (pymap.mime.messagecontent class method)": [[20, "pymap.mime.MessageContent.from_json"]], "from_json() (pymap.mime.messageheader class method)": [[20, "pymap.mime.MessageHeader.from_json"]], "has_nested (pymap.mime.messagebody property)": [[20, "pymap.mime.MessageBody.has_nested"]], "in_reply_to (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.in_reply_to"]], "is_rfc822 (pymap.mime.messagecontent property)": [[20, "pymap.mime.MessageContent.is_rfc822"]], "json (pymap.mime.messagebody property)": [[20, "pymap.mime.MessageBody.json"]], "json (pymap.mime.messagecontent property)": [[20, "pymap.mime.MessageContent.json"]], "json (pymap.mime.messageheader property)": [[20, "pymap.mime.MessageHeader.json"]], "lines (pymap.mime.messagebody property)": [[20, "pymap.mime.MessageBody.lines"]], "lines (pymap.mime.messagecontent attribute)": [[20, "pymap.mime.MessageContent.lines"]], "lines (pymap.mime.messageheader property)": [[20, "pymap.mime.MessageHeader.lines"]], "message_id (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.message_id"]], "nested (pymap.mime.messagebody property)": [[20, "pymap.mime.MessageBody.nested"]], "of() (pymap.mime.cte.messagedecoder class method)": [[20, "pymap.mime.cte.MessageDecoder.of"]], "of_cte() (pymap.mime.cte.messagedecoder class method)": [[20, "pymap.mime.cte.MessageDecoder.of_cte"]], "parse() (pymap.mime.messagecontent class method)": [[20, "pymap.mime.MessageContent.parse"]], "parsed (pymap.mime.messageheader attribute)": [[20, "pymap.mime.MessageHeader.parsed"]], "pymap.mime": [[20, "module-pymap.mime"]], "pymap.mime.cte": [[20, "module-pymap.mime.cte"]], "pymap.mime.parsed": [[20, "module-pymap.mime.parsed"]], "references (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.references"]], "registry (pymap.mime.cte.messagedecoder attribute)": [[20, "pymap.mime.cte.MessageDecoder.registry"]], "reply_to (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.reply_to"]], "sender (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.sender"]], "subject (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.subject"]], "to (pymap.mime.parsed.parsedheaders property)": [[20, "pymap.mime.parsed.ParsedHeaders.to"]], "walk() (pymap.mime.messagecontent method)": [[20, "pymap.mime.MessageContent.walk"]], "write() (pymap.mime.messagebody method)": [[20, "pymap.mime.MessageBody.write"]], "write() (pymap.mime.messagecontent method)": [[20, "pymap.mime.MessageContent.write"]], "write() (pymap.mime.messageheader method)": [[20, "pymap.mime.MessageHeader.write"]], "astring (class in pymap.parsing.specials.astring)": [[21, "pymap.parsing.specials.astring.AString"]], "answered (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Answered"]], "anyparseable (in module pymap.parsing)": [[21, "pymap.parsing.AnyParseable"]], "appendcommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.AppendCommand"]], "appendmessage (class in pymap.parsing.message)": [[21, "pymap.parsing.message.AppendMessage"]], "appenduid (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.AppendUid"]], "atom (class in pymap.parsing.primitives)": [[21, "pymap.parsing.primitives.Atom"]], "authenticatecommand (class in pymap.parsing.command.nonauth)": [[21, "pymap.parsing.command.nonauth.AuthenticateCommand"]], "body (pymap.parsing.specials.fetchattr.fetchrequirement attribute)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.BODY"]], "bodystructure (class in pymap.parsing.response.fetch)": [[21, "pymap.parsing.response.fetch.BodyStructure"]], "capability (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.Capability"]], "capabilitycommand (class in pymap.parsing.command.any)": [[21, "pymap.parsing.command.any.CapabilityCommand"]], "checkcommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.CheckCommand"]], "closecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.CloseCommand"]], "command (class in pymap.parsing.command)": [[21, "pymap.parsing.command.Command"]], "commandany (class in pymap.parsing.command)": [[21, "pymap.parsing.command.CommandAny"]], "commandauth (class in pymap.parsing.command)": [[21, "pymap.parsing.command.CommandAuth"]], "commandnoargs (class in pymap.parsing.command)": [[21, "pymap.parsing.command.CommandNoArgs"]], "commandnonauth (class in pymap.parsing.command)": [[21, "pymap.parsing.command.CommandNonAuth"]], "commandresponse (class in pymap.parsing.response)": [[21, "pymap.parsing.response.CommandResponse"]], "commandselect (class in pymap.parsing.command)": [[21, "pymap.parsing.command.CommandSelect"]], "commands (class in pymap.parsing.commands)": [[21, "pymap.parsing.commands.Commands"]], "contentbodystructure (class in pymap.parsing.response.fetch)": [[21, "pymap.parsing.response.fetch.ContentBodyStructure"]], "copycommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.CopyCommand"]], "copyuid (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.CopyUid"]], "createcommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.CreateCommand"]], "datetime (class in pymap.parsing.specials.datetime_)": [[21, "pymap.parsing.specials.datetime_.DateTime"]], "deletecommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.DeleteCommand"]], "deleted (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Deleted"]], "draft (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Draft"]], "esearchresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.ESearchResponse"]], "endline (class in pymap.parsing)": [[21, "pymap.parsing.EndLine"]], "envelopestructure (class in pymap.parsing.response.fetch)": [[21, "pymap.parsing.response.fetch.EnvelopeStructure"]], "examinecommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.ExamineCommand"]], "existsresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.ExistsResponse"]], "expectedparseable (class in pymap.parsing)": [[21, "pymap.parsing.ExpectedParseable"]], "expungecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.ExpungeCommand"]], "expungeresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.ExpungeResponse"]], "extensionoption (class in pymap.parsing.specials.options)": [[21, "pymap.parsing.specials.options.ExtensionOption"]], "extensionoptions (class in pymap.parsing.specials.options)": [[21, "pymap.parsing.specials.options.ExtensionOptions"]], "fetchattribute (class in pymap.parsing.specials.fetchattr)": [[21, "pymap.parsing.specials.fetchattr.FetchAttribute"]], "fetchattribute.section (class in pymap.parsing.specials.fetchattr)": [[21, "pymap.parsing.specials.fetchattr.FetchAttribute.Section"]], "fetchcommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.FetchCommand"]], "fetchpartial (class in pymap.parsing.specials.fetchattr)": [[21, "pymap.parsing.specials.fetchattr.FetchPartial"]], "fetchrequirement (class in pymap.parsing.specials.fetchattr)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement"]], "fetchresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.FetchResponse"]], "fetchvalue (class in pymap.parsing.specials.fetchattr)": [[21, "pymap.parsing.specials.fetchattr.FetchValue"]], "flag (class in pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Flag"]], "flagged (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Flagged"]], "flagsresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.FlagsResponse"]], "header (pymap.parsing.specials.fetchattr.fetchrequirement attribute)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.HEADER"]], "idlecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.IdleCommand"]], "invalidcommand (class in pymap.parsing.commands)": [[21, "pymap.parsing.commands.InvalidCommand"]], "invalidcontent": [[21, "pymap.parsing.exceptions.InvalidContent"]], "lsubcommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.LSubCommand"]], "lsubresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.LSubResponse"]], "list (class in pymap.parsing.primitives)": [[21, "pymap.parsing.primitives.List"]], "listcommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.ListCommand"]], "listresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.ListResponse"]], "literalstring (class in pymap.parsing.primitives)": [[21, "pymap.parsing.primitives.LiteralString"]], "logincommand (class in pymap.parsing.command.nonauth)": [[21, "pymap.parsing.command.nonauth.LoginCommand"]], "logoutcommand (class in pymap.parsing.command.any)": [[21, "pymap.parsing.command.any.LogoutCommand"]], "metadata (pymap.parsing.specials.fetchattr.fetchrequirement attribute)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.METADATA"]], "mailbox (class in pymap.parsing.specials.mailbox)": [[21, "pymap.parsing.specials.mailbox.Mailbox"]], "mailboxid (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.MailboxId"]], "maxvalue (class in pymap.parsing.specials.sequenceset)": [[21, "pymap.parsing.specials.sequenceset.MaxValue"]], "messagebodystructure (class in pymap.parsing.response.fetch)": [[21, "pymap.parsing.response.fetch.MessageBodyStructure"]], "movecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.MoveCommand"]], "multipartbodystructure (class in pymap.parsing.response.fetch)": [[21, "pymap.parsing.response.fetch.MultipartBodyStructure"]], "none (pymap.parsing.specials.fetchattr.fetchrequirement attribute)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.NONE"]], "nil (class in pymap.parsing.primitives)": [[21, "pymap.parsing.primitives.Nil"]], "noopcommand (class in pymap.parsing.command.any)": [[21, "pymap.parsing.command.any.NoOpCommand"]], "notparseable": [[21, "pymap.parsing.exceptions.NotParseable"]], "number (class in pymap.parsing.primitives)": [[21, "pymap.parsing.primitives.Number"]], "objectid (class in pymap.parsing.specials.objectid)": [[21, "pymap.parsing.specials.objectid.ObjectId"]], "params (class in pymap.parsing)": [[21, "pymap.parsing.Params"]], "parseable (class in pymap.parsing)": [[21, "pymap.parsing.Parseable"]], "parseablet (class in pymap.parsing)": [[21, "pymap.parsing.ParseableT"]], "parsingexpectation (class in pymap.parsing.state)": [[21, "pymap.parsing.state.ParsingExpectation"]], "parsingexpectedt (class in pymap.parsing.state)": [[21, "pymap.parsing.state.ParsingExpectedT"]], "parsinginterrupt": [[21, "pymap.parsing.state.ParsingInterrupt"]], "parsingstate (class in pymap.parsing.state)": [[21, "pymap.parsing.state.ParsingState"]], "permanentflags (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.PermanentFlags"]], "quotedstring (class in pymap.parsing.primitives)": [[21, "pymap.parsing.primitives.QuotedString"]], "recent (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Recent"]], "recentresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.RecentResponse"]], "renamecommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.RenameCommand"]], "response (class in pymap.parsing.response)": [[21, "pymap.parsing.response.Response"]], "responsebad (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponseBad"]], "responsebye (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponseBye"]], "responsecode (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponseCode"]], "responsecontinuation (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponseContinuation"]], "responseno (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponseNo"]], "responseok (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponseOk"]], "responsepreauth (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponsePreAuth"]], "responset (class in pymap.parsing.response)": [[21, "pymap.parsing.response.ResponseT"]], "searchcommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.SearchCommand"]], "searchkey (class in pymap.parsing.specials.searchkey)": [[21, "pymap.parsing.specials.searchkey.SearchKey"]], "searchresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.SearchResponse"]], "seen (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Seen"]], "selectcommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.SelectCommand"]], "sequenceset (class in pymap.parsing.specials.sequenceset)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet"]], "space (class in pymap.parsing)": [[21, "pymap.parsing.Space"]], "starttlscommand (class in pymap.parsing.command.nonauth)": [[21, "pymap.parsing.command.nonauth.StartTLSCommand"]], "statusattribute (class in pymap.parsing.specials.statusattr)": [[21, "pymap.parsing.specials.statusattr.StatusAttribute"]], "statuscommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.StatusCommand"]], "statusresponse (class in pymap.parsing.response.specials)": [[21, "pymap.parsing.response.specials.StatusResponse"]], "storecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.StoreCommand"]], "string (class in pymap.parsing.primitives)": [[21, "pymap.parsing.primitives.String"]], "subscribecommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.SubscribeCommand"]], "tag (class in pymap.parsing.specials.tag)": [[21, "pymap.parsing.specials.tag.Tag"]], "textbodystructure (class in pymap.parsing.response.fetch)": [[21, "pymap.parsing.response.fetch.TextBodyStructure"]], "uidcommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.UidCommand"]], "uidcopycommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.UidCopyCommand"]], "uidexpungecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.UidExpungeCommand"]], "uidfetchcommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.UidFetchCommand"]], "uidmovecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.UidMoveCommand"]], "uidnext (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.UidNext"]], "uidsearchcommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.UidSearchCommand"]], "uidstorecommand (class in pymap.parsing.command.select)": [[21, "pymap.parsing.command.select.UidStoreCommand"]], "uidvalidity (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.UidValidity"]], "unexpectedtype": [[21, "pymap.parsing.exceptions.UnexpectedType"]], "unseen (class in pymap.parsing.response.code)": [[21, "pymap.parsing.response.code.Unseen"]], "unsubscribecommand (class in pymap.parsing.command.auth)": [[21, "pymap.parsing.command.auth.UnsubscribeCommand"]], "untaggedresponse (class in pymap.parsing.response)": [[21, "pymap.parsing.response.UntaggedResponse"]], "wildcard (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.Wildcard"]], "add_untagged() (pymap.parsing.response.commandresponse method)": [[21, "pymap.parsing.response.CommandResponse.add_untagged"]], "add_untagged_ok() (pymap.parsing.response.commandresponse method)": [[21, "pymap.parsing.response.CommandResponse.add_untagged_ok"]], "all() (pymap.parsing.specials.sequenceset.sequenceset class method)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.all"]], "async_write() (pymap.parsing.response.commandresponse method)": [[21, "pymap.parsing.response.CommandResponse.async_write"]], "async_write() (pymap.parsing.response.response method)": [[21, "pymap.parsing.response.Response.async_write"]], "async_write() (pymap.parsing.response.untaggedresponse method)": [[21, "pymap.parsing.response.UntaggedResponse.async_write"]], "binary (pymap.parsing.primitives.literalstring property)": [[21, "pymap.parsing.primitives.LiteralString.binary"]], "binary (pymap.parsing.primitives.quotedstring property)": [[21, "pymap.parsing.primitives.QuotedString.binary"]], "binary (pymap.parsing.primitives.string property)": [[21, "pymap.parsing.primitives.String.binary"]], "build() (pymap.parsing.primitives.string class method)": [[21, "pymap.parsing.primitives.String.build"]], "build() (pymap.parsing.specials.sequenceset.sequenceset class method)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.build"]], "builtin_commands (in module pymap.parsing.commands)": [[21, "pymap.parsing.commands.builtin_commands"]], "carriage_return (pymap.parsing.endline attribute)": [[21, "pymap.parsing.EndLine.carriage_return"]], "code (pymap.parsing.response.response property)": [[21, "pymap.parsing.response.Response.code"]], "command (pymap.parsing.command.command attribute)": [[21, "pymap.parsing.command.Command.command"]], "command (pymap.parsing.command.any.capabilitycommand attribute)": [[21, "pymap.parsing.command.any.CapabilityCommand.command"]], "command (pymap.parsing.command.any.logoutcommand attribute)": [[21, "pymap.parsing.command.any.LogoutCommand.command"]], "command (pymap.parsing.command.any.noopcommand attribute)": [[21, "pymap.parsing.command.any.NoOpCommand.command"]], "command (pymap.parsing.command.auth.appendcommand attribute)": [[21, "pymap.parsing.command.auth.AppendCommand.command"]], "command (pymap.parsing.command.auth.createcommand attribute)": [[21, "pymap.parsing.command.auth.CreateCommand.command"]], "command (pymap.parsing.command.auth.deletecommand attribute)": [[21, "pymap.parsing.command.auth.DeleteCommand.command"]], "command (pymap.parsing.command.auth.examinecommand attribute)": [[21, "pymap.parsing.command.auth.ExamineCommand.command"]], "command (pymap.parsing.command.auth.lsubcommand attribute)": [[21, "pymap.parsing.command.auth.LSubCommand.command"]], "command (pymap.parsing.command.auth.listcommand attribute)": [[21, "pymap.parsing.command.auth.ListCommand.command"]], "command (pymap.parsing.command.auth.renamecommand attribute)": [[21, "pymap.parsing.command.auth.RenameCommand.command"]], "command (pymap.parsing.command.auth.selectcommand attribute)": [[21, "pymap.parsing.command.auth.SelectCommand.command"]], "command (pymap.parsing.command.auth.statuscommand attribute)": [[21, "pymap.parsing.command.auth.StatusCommand.command"]], "command (pymap.parsing.command.auth.subscribecommand attribute)": [[21, "pymap.parsing.command.auth.SubscribeCommand.command"]], "command (pymap.parsing.command.auth.unsubscribecommand attribute)": [[21, "pymap.parsing.command.auth.UnsubscribeCommand.command"]], "command (pymap.parsing.command.nonauth.authenticatecommand attribute)": [[21, "pymap.parsing.command.nonauth.AuthenticateCommand.command"]], "command (pymap.parsing.command.nonauth.logincommand attribute)": [[21, "pymap.parsing.command.nonauth.LoginCommand.command"]], "command (pymap.parsing.command.nonauth.starttlscommand attribute)": [[21, "pymap.parsing.command.nonauth.StartTLSCommand.command"]], "command (pymap.parsing.command.select.checkcommand attribute)": [[21, "pymap.parsing.command.select.CheckCommand.command"]], "command (pymap.parsing.command.select.closecommand attribute)": [[21, "pymap.parsing.command.select.CloseCommand.command"]], "command (pymap.parsing.command.select.copycommand attribute)": [[21, "pymap.parsing.command.select.CopyCommand.command"]], "command (pymap.parsing.command.select.expungecommand attribute)": [[21, "pymap.parsing.command.select.ExpungeCommand.command"]], "command (pymap.parsing.command.select.fetchcommand attribute)": [[21, "pymap.parsing.command.select.FetchCommand.command"]], "command (pymap.parsing.command.select.idlecommand attribute)": [[21, "pymap.parsing.command.select.IdleCommand.command"]], "command (pymap.parsing.command.select.movecommand attribute)": [[21, "pymap.parsing.command.select.MoveCommand.command"]], "command (pymap.parsing.command.select.searchcommand attribute)": [[21, "pymap.parsing.command.select.SearchCommand.command"]], "command (pymap.parsing.command.select.storecommand attribute)": [[21, "pymap.parsing.command.select.StoreCommand.command"]], "command (pymap.parsing.command.select.uidcommand attribute)": [[21, "pymap.parsing.command.select.UidCommand.command"]], "command (pymap.parsing.command.select.uidcopycommand attribute)": [[21, "pymap.parsing.command.select.UidCopyCommand.command"]], "command (pymap.parsing.command.select.uidexpungecommand attribute)": [[21, "pymap.parsing.command.select.UidExpungeCommand.command"]], "command (pymap.parsing.command.select.uidfetchcommand attribute)": [[21, "pymap.parsing.command.select.UidFetchCommand.command"]], "command (pymap.parsing.command.select.uidmovecommand attribute)": [[21, "pymap.parsing.command.select.UidMoveCommand.command"]], "command (pymap.parsing.command.select.uidsearchcommand attribute)": [[21, "pymap.parsing.command.select.UidSearchCommand.command"]], "command (pymap.parsing.command.select.uidstorecommand attribute)": [[21, "pymap.parsing.command.select.UidStoreCommand.command"]], "command (pymap.parsing.commands.invalidcommand attribute)": [[21, "pymap.parsing.commands.InvalidCommand.command"]], "command_name (pymap.parsing.commands.invalidcommand property)": [[21, "pymap.parsing.commands.InvalidCommand.command_name"]], "command_type (pymap.parsing.commands.invalidcommand property)": [[21, "pymap.parsing.commands.InvalidCommand.command_type"]], "compound (pymap.parsing.command.command attribute)": [[21, "pymap.parsing.command.Command.compound"]], "compound (pymap.parsing.command.select.uidcommand attribute)": [[21, "pymap.parsing.command.select.UidCommand.compound"]], "condition (pymap.parsing.response.response attribute)": [[21, "pymap.parsing.response.Response.condition"]], "condition (pymap.parsing.response.responsebad attribute)": [[21, "pymap.parsing.response.ResponseBad.condition"]], "condition (pymap.parsing.response.responsebye attribute)": [[21, "pymap.parsing.response.ResponseBye.condition"]], "condition (pymap.parsing.response.responseno attribute)": [[21, "pymap.parsing.response.ResponseNo.condition"]], "condition (pymap.parsing.response.responseok attribute)": [[21, "pymap.parsing.response.ResponseOk.condition"]], "condition (pymap.parsing.response.responsepreauth attribute)": [[21, "pymap.parsing.response.ResponsePreAuth.condition"]], "consume() (pymap.parsing.state.parsingexpectation method)": [[21, "pymap.parsing.state.ParsingExpectation.consume"]], "continuation (pymap.parsing.command.select.idlecommand attribute)": [[21, "pymap.parsing.command.select.IdleCommand.continuation"]], "copy() (pymap.parsing.params method)": [[21, "pymap.parsing.Params.copy"]], "delegate (pymap.parsing.command.command attribute)": [[21, "pymap.parsing.command.Command.delegate"]], "delegate (pymap.parsing.command.auth.examinecommand attribute)": [[21, "pymap.parsing.command.auth.ExamineCommand.delegate"]], "delegate (pymap.parsing.command.auth.lsubcommand attribute)": [[21, "pymap.parsing.command.auth.LSubCommand.delegate"]], "delegate (pymap.parsing.command.select.uidcopycommand attribute)": [[21, "pymap.parsing.command.select.UidCopyCommand.delegate"]], "delegate (pymap.parsing.command.select.uidexpungecommand attribute)": [[21, "pymap.parsing.command.select.UidExpungeCommand.delegate"]], "delegate (pymap.parsing.command.select.uidfetchcommand attribute)": [[21, "pymap.parsing.command.select.UidFetchCommand.delegate"]], "delegate (pymap.parsing.command.select.uidmovecommand attribute)": [[21, "pymap.parsing.command.select.UidMoveCommand.delegate"]], "delegate (pymap.parsing.command.select.uidsearchcommand attribute)": [[21, "pymap.parsing.command.select.UidSearchCommand.delegate"]], "delegate (pymap.parsing.command.select.uidstorecommand attribute)": [[21, "pymap.parsing.command.select.UidStoreCommand.delegate"]], "deregister() (pymap.parsing.commands.commands method)": [[21, "pymap.parsing.commands.Commands.deregister"]], "empty() (pymap.parsing.response.fetch.bodystructure class method)": [[21, "pymap.parsing.response.fetch.BodyStructure.empty"]], "empty() (pymap.parsing.response.fetch.envelopestructure class method)": [[21, "pymap.parsing.response.fetch.EnvelopeStructure.empty"]], "empty() (pymap.parsing.specials.options.extensionoptions class method)": [[21, "pymap.parsing.specials.options.ExtensionOptions.empty"]], "expect() (pymap.parsing.state.parsingexpectation method)": [[21, "pymap.parsing.state.ParsingExpectation.expect"]], "extended (pymap.parsing.response.fetch.bodystructure property)": [[21, "pymap.parsing.response.fetch.BodyStructure.extended"]], "extended (pymap.parsing.response.fetch.contentbodystructure property)": [[21, "pymap.parsing.response.fetch.ContentBodyStructure.extended"]], "extended (pymap.parsing.response.fetch.messagebodystructure property)": [[21, "pymap.parsing.response.fetch.MessageBodyStructure.extended"]], "extended (pymap.parsing.response.fetch.multipartbodystructure property)": [[21, "pymap.parsing.response.fetch.MultipartBodyStructure.extended"]], "extended (pymap.parsing.response.fetch.textbodystructure property)": [[21, "pymap.parsing.response.fetch.TextBodyStructure.extended"]], "flatten() (pymap.parsing.specials.sequenceset.sequenceset method)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.flatten"]], "get_all() (pymap.parsing.specials.fetchattr.fetchrequirement class method)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.get_all"]], "get_as() (pymap.parsing.primitives.list method)": [[21, "pymap.parsing.primitives.List.get_as"]], "get_local_tzinfo() (pymap.parsing.specials.datetime_.datetime class method)": [[21, "pymap.parsing.specials.datetime_.DateTime.get_local_tzinfo"]], "get_system_flags() (in module pymap.parsing.specials.flag)": [[21, "pymap.parsing.specials.flag.get_system_flags"]], "has_all() (pymap.parsing.specials.fetchattr.fetchrequirement method)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.has_all"]], "has_none() (pymap.parsing.specials.fetchattr.fetchrequirement method)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.has_none"]], "is_all (pymap.parsing.specials.sequenceset.sequenceset property)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.is_all"]], "is_bad (pymap.parsing.response.response property)": [[21, "pymap.parsing.response.Response.is_bad"]], "is_bad (pymap.parsing.response.responsebad property)": [[21, "pymap.parsing.response.ResponseBad.is_bad"]], "is_system (pymap.parsing.specials.flag.flag property)": [[21, "pymap.parsing.specials.flag.Flag.is_system"]], "is_terminal (pymap.parsing.response.commandresponse property)": [[21, "pymap.parsing.response.CommandResponse.is_terminal"]], "is_terminal (pymap.parsing.response.response property)": [[21, "pymap.parsing.response.Response.is_terminal"]], "is_terminal (pymap.parsing.response.responsebye property)": [[21, "pymap.parsing.response.ResponseBye.is_terminal"]], "iter() (pymap.parsing.specials.sequenceset.sequenceset method)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.iter"]], "length (pymap.parsing.primitives.literalstring property)": [[21, "pymap.parsing.primitives.LiteralString.length"]], "length (pymap.parsing.primitives.quotedstring property)": [[21, "pymap.parsing.primitives.QuotedString.length"]], "length (pymap.parsing.primitives.string property)": [[21, "pymap.parsing.primitives.String.length"]], "maybe() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.maybe"]], "merge() (pymap.parsing.response.untaggedresponse method)": [[21, "pymap.parsing.response.UntaggedResponse.merge"]], "merge() (pymap.parsing.response.specials.fetchresponse method)": [[21, "pymap.parsing.response.specials.FetchResponse.merge"]], "merge_key (pymap.parsing.response.untaggedresponse property)": [[21, "pymap.parsing.response.UntaggedResponse.merge_key"]], "merge_key (pymap.parsing.response.specials.fetchresponse property)": [[21, "pymap.parsing.response.specials.FetchResponse.merge_key"]], "message (pymap.parsing.commands.invalidcommand property)": [[21, "pymap.parsing.commands.InvalidCommand.message"]], "modutf7_decode() (in module pymap.parsing.modutf7)": [[21, "pymap.parsing.modutf7.modutf7_decode"]], "modutf7_encode() (in module pymap.parsing.modutf7)": [[21, "pymap.parsing.modutf7.modutf7_encode"]], "new() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.new"]], "new_email_id() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.new_email_id"]], "new_mailbox_id() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.new_mailbox_id"]], "new_thread_id() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.new_thread_id"]], "not_inverse (pymap.parsing.specials.searchkey.searchkey property)": [[21, "pymap.parsing.specials.searchkey.SearchKey.not_inverse"]], "of() (pymap.parsing.response.responsecode class method)": [[21, "pymap.parsing.response.ResponseCode.of"]], "only_subscribed (pymap.parsing.command.auth.lsubcommand attribute)": [[21, "pymap.parsing.command.auth.LSubCommand.only_subscribed"]], "only_subscribed (pymap.parsing.command.auth.listcommand attribute)": [[21, "pymap.parsing.command.auth.ListCommand.only_subscribed"]], "parens (pymap.parsing.specials.objectid.objectid property)": [[21, "pymap.parsing.specials.objectid.ObjectId.parens"]], "parse() (pymap.parsing.endline class method)": [[21, "pymap.parsing.EndLine.parse"]], "parse() (pymap.parsing.expectedparseable class method)": [[21, "pymap.parsing.ExpectedParseable.parse"]], "parse() (pymap.parsing.parseable class method)": [[21, "pymap.parsing.Parseable.parse"]], "parse() (pymap.parsing.space class method)": [[21, "pymap.parsing.Space.parse"]], "parse() (pymap.parsing.command.command class method)": [[21, "pymap.parsing.command.Command.parse"]], "parse() (pymap.parsing.command.commandnoargs class method)": [[21, "pymap.parsing.command.CommandNoArgs.parse"]], "parse() (pymap.parsing.command.auth.appendcommand class method)": [[21, "pymap.parsing.command.auth.AppendCommand.parse"]], "parse() (pymap.parsing.command.auth.createcommand class method)": [[21, "pymap.parsing.command.auth.CreateCommand.parse"]], "parse() (pymap.parsing.command.auth.listcommand class method)": [[21, "pymap.parsing.command.auth.ListCommand.parse"]], "parse() (pymap.parsing.command.auth.renamecommand class method)": [[21, "pymap.parsing.command.auth.RenameCommand.parse"]], "parse() (pymap.parsing.command.auth.selectcommand class method)": [[21, "pymap.parsing.command.auth.SelectCommand.parse"]], "parse() (pymap.parsing.command.auth.statuscommand class method)": [[21, "pymap.parsing.command.auth.StatusCommand.parse"]], "parse() (pymap.parsing.command.nonauth.authenticatecommand class method)": [[21, "pymap.parsing.command.nonauth.AuthenticateCommand.parse"]], "parse() (pymap.parsing.command.nonauth.logincommand class method)": [[21, "pymap.parsing.command.nonauth.LoginCommand.parse"]], "parse() (pymap.parsing.command.select.copycommand class method)": [[21, "pymap.parsing.command.select.CopyCommand.parse"]], "parse() (pymap.parsing.command.select.expungecommand class method)": [[21, "pymap.parsing.command.select.ExpungeCommand.parse"]], "parse() (pymap.parsing.command.select.fetchcommand class method)": [[21, "pymap.parsing.command.select.FetchCommand.parse"]], "parse() (pymap.parsing.command.select.idlecommand class method)": [[21, "pymap.parsing.command.select.IdleCommand.parse"]], "parse() (pymap.parsing.command.select.movecommand class method)": [[21, "pymap.parsing.command.select.MoveCommand.parse"]], "parse() (pymap.parsing.command.select.searchcommand class method)": [[21, "pymap.parsing.command.select.SearchCommand.parse"]], "parse() (pymap.parsing.command.select.storecommand class method)": [[21, "pymap.parsing.command.select.StoreCommand.parse"]], "parse() (pymap.parsing.command.select.uidcommand class method)": [[21, "pymap.parsing.command.select.UidCommand.parse"]], "parse() (pymap.parsing.command.select.uidcopycommand class method)": [[21, "pymap.parsing.command.select.UidCopyCommand.parse"]], "parse() (pymap.parsing.command.select.uidexpungecommand class method)": [[21, "pymap.parsing.command.select.UidExpungeCommand.parse"]], "parse() (pymap.parsing.command.select.uidfetchcommand class method)": [[21, "pymap.parsing.command.select.UidFetchCommand.parse"]], "parse() (pymap.parsing.command.select.uidmovecommand class method)": [[21, "pymap.parsing.command.select.UidMoveCommand.parse"]], "parse() (pymap.parsing.command.select.uidsearchcommand class method)": [[21, "pymap.parsing.command.select.UidSearchCommand.parse"]], "parse() (pymap.parsing.command.select.uidstorecommand class method)": [[21, "pymap.parsing.command.select.UidStoreCommand.parse"]], "parse() (pymap.parsing.commands.commands method)": [[21, "pymap.parsing.commands.Commands.parse"]], "parse() (pymap.parsing.commands.invalidcommand class method)": [[21, "pymap.parsing.commands.InvalidCommand.parse"]], "parse() (pymap.parsing.primitives.atom class method)": [[21, "pymap.parsing.primitives.Atom.parse"]], "parse() (pymap.parsing.primitives.list class method)": [[21, "pymap.parsing.primitives.List.parse"]], "parse() (pymap.parsing.primitives.literalstring class method)": [[21, "pymap.parsing.primitives.LiteralString.parse"]], "parse() (pymap.parsing.primitives.nil class method)": [[21, "pymap.parsing.primitives.Nil.parse"]], "parse() (pymap.parsing.primitives.number class method)": [[21, "pymap.parsing.primitives.Number.parse"]], "parse() (pymap.parsing.primitives.quotedstring class method)": [[21, "pymap.parsing.primitives.QuotedString.parse"]], "parse() (pymap.parsing.primitives.string class method)": [[21, "pymap.parsing.primitives.String.parse"]], "parse() (pymap.parsing.specials.astring.astring class method)": [[21, "pymap.parsing.specials.astring.AString.parse"]], "parse() (pymap.parsing.specials.datetime_.datetime class method)": [[21, "pymap.parsing.specials.datetime_.DateTime.parse"]], "parse() (pymap.parsing.specials.fetchattr.fetchattribute class method)": [[21, "pymap.parsing.specials.fetchattr.FetchAttribute.parse"]], "parse() (pymap.parsing.specials.flag.flag class method)": [[21, "pymap.parsing.specials.flag.Flag.parse"]], "parse() (pymap.parsing.specials.mailbox.mailbox class method)": [[21, "pymap.parsing.specials.mailbox.Mailbox.parse"]], "parse() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.parse"]], "parse() (pymap.parsing.specials.options.extensionoption class method)": [[21, "pymap.parsing.specials.options.ExtensionOption.parse"]], "parse() (pymap.parsing.specials.options.extensionoptions class method)": [[21, "pymap.parsing.specials.options.ExtensionOptions.parse"]], "parse() (pymap.parsing.specials.searchkey.searchkey class method)": [[21, "pymap.parsing.specials.searchkey.SearchKey.parse"]], "parse() (pymap.parsing.specials.sequenceset.sequenceset class method)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.parse"]], "parse() (pymap.parsing.specials.statusattr.statusattribute class method)": [[21, "pymap.parsing.specials.statusattr.StatusAttribute.parse"]], "parse() (pymap.parsing.specials.tag.tag class method)": [[21, "pymap.parsing.specials.tag.Tag.parse"]], "parse_done() (pymap.parsing.command.select.idlecommand method)": [[21, "pymap.parsing.command.select.IdleCommand.parse_done"]], "parse_exc (pymap.parsing.commands.invalidcommand property)": [[21, "pymap.parsing.commands.InvalidCommand.parse_exc"]], "partial (pymap.parsing.specials.fetchattr.fetchattribute attribute)": [[21, "pymap.parsing.specials.fetchattr.FetchAttribute.partial"]], "preceding_spaces (pymap.parsing.endline attribute)": [[21, "pymap.parsing.EndLine.preceding_spaces"]], "pymap.parsing": [[21, "module-pymap.parsing"]], "pymap.parsing.command": [[21, "module-pymap.parsing.command"]], "pymap.parsing.command.any": [[21, "module-pymap.parsing.command.any"]], "pymap.parsing.command.auth": [[21, "module-pymap.parsing.command.auth"]], "pymap.parsing.command.nonauth": [[21, "module-pymap.parsing.command.nonauth"]], "pymap.parsing.command.select": [[21, "module-pymap.parsing.command.select"]], "pymap.parsing.commands": [[21, "module-pymap.parsing.commands"]], "pymap.parsing.exceptions": [[21, "module-pymap.parsing.exceptions"]], "pymap.parsing.message": [[21, "module-pymap.parsing.message"]], "pymap.parsing.modutf7": [[21, "module-pymap.parsing.modutf7"]], "pymap.parsing.primitives": [[21, "module-pymap.parsing.primitives"]], "pymap.parsing.response": [[21, "module-pymap.parsing.response"]], "pymap.parsing.response.code": [[21, "module-pymap.parsing.response.code"]], "pymap.parsing.response.fetch": [[21, "module-pymap.parsing.response.fetch"]], "pymap.parsing.response.specials": [[21, "module-pymap.parsing.response.specials"]], "pymap.parsing.specials.astring": [[21, "module-pymap.parsing.specials.astring"]], "pymap.parsing.specials.datetime_": [[21, "module-pymap.parsing.specials.datetime_"]], "pymap.parsing.specials.fetchattr": [[21, "module-pymap.parsing.specials.fetchattr"]], "pymap.parsing.specials.flag": [[21, "module-pymap.parsing.specials.flag"]], "pymap.parsing.specials.mailbox": [[21, "module-pymap.parsing.specials.mailbox"]], "pymap.parsing.specials.objectid": [[21, "module-pymap.parsing.specials.objectid"]], "pymap.parsing.specials.options": [[21, "module-pymap.parsing.specials.options"]], "pymap.parsing.specials.searchkey": [[21, "module-pymap.parsing.specials.searchkey"]], "pymap.parsing.specials.sequenceset": [[21, "module-pymap.parsing.specials.sequenceset"]], "pymap.parsing.specials.statusattr": [[21, "module-pymap.parsing.specials.statusattr"]], "pymap.parsing.specials.tag": [[21, "module-pymap.parsing.specials.tag"]], "pymap.parsing.state": [[21, "module-pymap.parsing.state"]], "random() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.random"]], "random_email_id() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.random_email_id"]], "random_mailbox_id() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.random_mailbox_id"]], "random_thread_id() (pymap.parsing.specials.objectid.objectid class method)": [[21, "pymap.parsing.specials.objectid.ObjectId.random_thread_id"]], "readonly (pymap.parsing.command.auth.examinecommand attribute)": [[21, "pymap.parsing.command.auth.ExamineCommand.readonly"]], "readonly (pymap.parsing.command.auth.selectcommand attribute)": [[21, "pymap.parsing.command.auth.SelectCommand.readonly"]], "reduce() (pymap.parsing.specials.fetchattr.fetchrequirement class method)": [[21, "pymap.parsing.specials.fetchattr.FetchRequirement.reduce"]], "register() (pymap.parsing.commands.commands method)": [[21, "pymap.parsing.commands.Commands.register"]], "requirement (pymap.parsing.specials.fetchattr.fetchattribute property)": [[21, "pymap.parsing.specials.fetchattr.FetchAttribute.requirement"]], "requirement (pymap.parsing.specials.searchkey.searchkey property)": [[21, "pymap.parsing.specials.searchkey.SearchKey.requirement"]], "section (pymap.parsing.specials.fetchattr.fetchattribute attribute)": [[21, "pymap.parsing.specials.fetchattr.FetchAttribute.section"]], "string (pymap.parsing.response.code.capability property)": [[21, "pymap.parsing.response.code.Capability.string"]], "string (pymap.parsing.specials.astring.astring attribute)": [[21, "pymap.parsing.specials.astring.AString.string"]], "tag (pymap.parsing.command.command attribute)": [[21, "pymap.parsing.command.Command.tag"]], "tag (pymap.parsing.response.response attribute)": [[21, "pymap.parsing.response.Response.tag"]], "text (pymap.parsing.response.response property)": [[21, "pymap.parsing.response.Response.text"]], "text (pymap.parsing.response.specials.esearchresponse property)": [[21, "pymap.parsing.response.specials.ESearchResponse.text"]], "text (pymap.parsing.response.specials.existsresponse property)": [[21, "pymap.parsing.response.specials.ExistsResponse.text"]], "text (pymap.parsing.response.specials.expungeresponse property)": [[21, "pymap.parsing.response.specials.ExpungeResponse.text"]], "text (pymap.parsing.response.specials.fetchresponse property)": [[21, "pymap.parsing.response.specials.FetchResponse.text"]], "text (pymap.parsing.response.specials.flagsresponse property)": [[21, "pymap.parsing.response.specials.FlagsResponse.text"]], "text (pymap.parsing.response.specials.listresponse property)": [[21, "pymap.parsing.response.specials.ListResponse.text"]], "text (pymap.parsing.response.specials.recentresponse property)": [[21, "pymap.parsing.response.specials.RecentResponse.text"]], "text (pymap.parsing.response.specials.searchresponse property)": [[21, "pymap.parsing.response.specials.SearchResponse.text"]], "text (pymap.parsing.response.specials.statusresponse property)": [[21, "pymap.parsing.response.specials.StatusResponse.text"]], "uid (pymap.parsing.specials.sequenceset.sequenceset attribute)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.uid"]], "valid_statuses (pymap.parsing.specials.statusattr.statusattribute attribute)": [[21, "pymap.parsing.specials.statusattr.StatusAttribute.valid_statuses"]], "value (pymap.parsing.endline property)": [[21, "pymap.parsing.EndLine.value"]], "value (pymap.parsing.expectedparseable property)": [[21, "pymap.parsing.ExpectedParseable.value"]], "value (pymap.parsing.parseable property)": [[21, "pymap.parsing.Parseable.value"]], "value (pymap.parsing.space property)": [[21, "pymap.parsing.Space.value"]], "value (pymap.parsing.command.command property)": [[21, "pymap.parsing.command.Command.value"]], "value (pymap.parsing.commands.invalidcommand property)": [[21, "pymap.parsing.commands.InvalidCommand.value"]], "value (pymap.parsing.primitives.atom property)": [[21, "pymap.parsing.primitives.Atom.value"]], "value (pymap.parsing.primitives.list property)": [[21, "pymap.parsing.primitives.List.value"]], "value (pymap.parsing.primitives.literalstring property)": [[21, "pymap.parsing.primitives.LiteralString.value"]], "value (pymap.parsing.primitives.nil property)": [[21, "pymap.parsing.primitives.Nil.value"]], "value (pymap.parsing.primitives.number property)": [[21, "pymap.parsing.primitives.Number.value"]], "value (pymap.parsing.primitives.quotedstring property)": [[21, "pymap.parsing.primitives.QuotedString.value"]], "value (pymap.parsing.specials.astring.astring property)": [[21, "pymap.parsing.specials.astring.AString.value"]], "value (pymap.parsing.specials.datetime_.datetime property)": [[21, "pymap.parsing.specials.datetime_.DateTime.value"]], "value (pymap.parsing.specials.fetchattr.fetchattribute property)": [[21, "pymap.parsing.specials.fetchattr.FetchAttribute.value"]], "value (pymap.parsing.specials.flag.flag property)": [[21, "pymap.parsing.specials.flag.Flag.value"]], "value (pymap.parsing.specials.mailbox.mailbox property)": [[21, "pymap.parsing.specials.mailbox.Mailbox.value"]], "value (pymap.parsing.specials.objectid.objectid property)": [[21, "pymap.parsing.specials.objectid.ObjectId.value"]], "value (pymap.parsing.specials.options.extensionoption property)": [[21, "pymap.parsing.specials.options.ExtensionOption.value"]], "value (pymap.parsing.specials.options.extensionoptions property)": [[21, "pymap.parsing.specials.options.ExtensionOptions.value"]], "value (pymap.parsing.specials.searchkey.searchkey property)": [[21, "pymap.parsing.specials.searchkey.SearchKey.value"]], "value (pymap.parsing.specials.sequenceset.sequenceset property)": [[21, "pymap.parsing.specials.sequenceset.SequenceSet.value"]], "value (pymap.parsing.specials.statusattr.statusattribute property)": [[21, "pymap.parsing.specials.statusattr.StatusAttribute.value"]], "value (pymap.parsing.specials.tag.tag property)": [[21, "pymap.parsing.specials.tag.Tag.value"]], "value_str (pymap.parsing.specials.searchkey.searchkey property)": [[21, "pymap.parsing.specials.searchkey.SearchKey.value_str"]], "write() (pymap.parsing.primitives.list method)": [[21, "pymap.parsing.primitives.List.write"]], "write() (pymap.parsing.primitives.literalstring method)": [[21, "pymap.parsing.primitives.LiteralString.write"]], "write() (pymap.parsing.response.commandresponse method)": [[21, "pymap.parsing.response.CommandResponse.write"]], "write() (pymap.parsing.response.response method)": [[21, "pymap.parsing.response.Response.write"]], "write() (pymap.parsing.response.fetch.bodystructure method)": [[21, "pymap.parsing.response.fetch.BodyStructure.write"]], "write() (pymap.parsing.response.fetch.envelopestructure method)": [[21, "pymap.parsing.response.fetch.EnvelopeStructure.write"]], "write() (pymap.parsing.response.specials.fetchresponse method)": [[21, "pymap.parsing.response.specials.FetchResponse.write"]], "plugin (class in pymap.plugin)": [[22, "pymap.plugin.Plugin"]], "plugint (class in pymap.plugin)": [[22, "pymap.plugin.PluginT"]], "add() (pymap.plugin.plugin method)": [[22, "pymap.plugin.Plugin.add"]], "default (pymap.plugin.plugin property)": [[22, "pymap.plugin.Plugin.default"]], "pymap.plugin": [[22, "module-pymap.plugin"]], "register() (pymap.plugin.plugin method)": [[22, "pymap.plugin.Plugin.register"]], "registered (pymap.plugin.plugin property)": [[22, "pymap.plugin.Plugin.registered"]], "allsearchcriteria (class in pymap.search)": [[23, "pymap.search.AllSearchCriteria"]], "bodysearchcriteria (class in pymap.search)": [[23, "pymap.search.BodySearchCriteria"]], "datesearchcriteria (class in pymap.search)": [[23, "pymap.search.DateSearchCriteria"]], "envelopesearchcriteria (class in pymap.search)": [[23, "pymap.search.EnvelopeSearchCriteria"]], "hasemailidsearchcriteria (class in pymap.search)": [[23, "pymap.search.HasEmailIdSearchCriteria"]], "hasflagsearchcriteria (class in pymap.search)": [[23, "pymap.search.HasFlagSearchCriteria"]], "hasthreadidsearchcriteria (class in pymap.search)": [[23, "pymap.search.HasThreadIdSearchCriteria"]], "headerdatesearchcriteria (class in pymap.search)": [[23, "pymap.search.HeaderDateSearchCriteria"]], "headersearchcriteria (class in pymap.search)": [[23, "pymap.search.HeaderSearchCriteria"]], "inversesearchcriteria (class in pymap.search)": [[23, "pymap.search.InverseSearchCriteria"]], "newsearchcriteria (class in pymap.search)": [[23, "pymap.search.NewSearchCriteria"]], "orsearchcriteria (class in pymap.search)": [[23, "pymap.search.OrSearchCriteria"]], "searchcriteria (class in pymap.search)": [[23, "pymap.search.SearchCriteria"]], "searchcriteriaset (class in pymap.search)": [[23, "pymap.search.SearchCriteriaSet"]], "searchparams (class in pymap.search)": [[23, "pymap.search.SearchParams"]], "sequencesetsearchcriteria (class in pymap.search)": [[23, "pymap.search.SequenceSetSearchCriteria"]], "sizesearchcriteria (class in pymap.search)": [[23, "pymap.search.SizeSearchCriteria"]], "matches() (pymap.search.allsearchcriteria method)": [[23, "pymap.search.AllSearchCriteria.matches"]], "matches() (pymap.search.bodysearchcriteria method)": [[23, "pymap.search.BodySearchCriteria.matches"]], "matches() (pymap.search.datesearchcriteria method)": [[23, "pymap.search.DateSearchCriteria.matches"]], "matches() (pymap.search.envelopesearchcriteria method)": [[23, "pymap.search.EnvelopeSearchCriteria.matches"]], "matches() (pymap.search.hasemailidsearchcriteria method)": [[23, "pymap.search.HasEmailIdSearchCriteria.matches"]], "matches() (pymap.search.hasflagsearchcriteria method)": [[23, "pymap.search.HasFlagSearchCriteria.matches"]], "matches() (pymap.search.hasthreadidsearchcriteria method)": [[23, "pymap.search.HasThreadIdSearchCriteria.matches"]], "matches() (pymap.search.headersearchcriteria method)": [[23, "pymap.search.HeaderSearchCriteria.matches"]], "matches() (pymap.search.inversesearchcriteria method)": [[23, "pymap.search.InverseSearchCriteria.matches"]], "matches() (pymap.search.newsearchcriteria method)": [[23, "pymap.search.NewSearchCriteria.matches"]], "matches() (pymap.search.orsearchcriteria method)": [[23, "pymap.search.OrSearchCriteria.matches"]], "matches() (pymap.search.searchcriteria method)": [[23, "pymap.search.SearchCriteria.matches"]], "matches() (pymap.search.searchcriteriaset method)": [[23, "pymap.search.SearchCriteriaSet.matches"]], "matches() (pymap.search.sequencesetsearchcriteria method)": [[23, "pymap.search.SequenceSetSearchCriteria.matches"]], "matches() (pymap.search.sizesearchcriteria method)": [[23, "pymap.search.SizeSearchCriteria.matches"]], "of() (pymap.search.searchcriteria class method)": [[23, "pymap.search.SearchCriteria.of"]], "pymap.search": [[23, "module-pymap.search"]], "sequence_set (pymap.search.searchcriteriaset property)": [[23, "pymap.search.SearchCriteriaSet.sequence_set"]], "selectedmailbox (class in pymap.selected)": [[24, "pymap.selected.SelectedMailbox"]], "selectedset (class in pymap.selected)": [[24, "pymap.selected.SelectedSet"]], "synchronizedmessages (class in pymap.selected)": [[24, "pymap.selected.SynchronizedMessages"]], "add() (pymap.selected.selectedset method)": [[24, "pymap.selected.SelectedSet.add"]], "add_updates() (pymap.selected.selectedmailbox method)": [[24, "pymap.selected.SelectedMailbox.add_updates"]], "any_selected (pymap.selected.selectedset property)": [[24, "pymap.selected.SelectedSet.any_selected"]], "exists (pymap.selected.synchronizedmessages property)": [[24, "pymap.selected.SynchronizedMessages.exists"]], "fork() (pymap.selected.selectedmailbox method)": [[24, "pymap.selected.SelectedMailbox.fork"]], "get() (pymap.selected.synchronizedmessages method)": [[24, "pymap.selected.SynchronizedMessages.get"]], "get_all() (pymap.selected.synchronizedmessages method)": [[24, "pymap.selected.SynchronizedMessages.get_all"]], "get_uids() (pymap.selected.synchronizedmessages method)": [[24, "pymap.selected.SynchronizedMessages.get_uids"]], "hide_expunged (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.hide_expunged"]], "lookup (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.lookup"]], "mailbox_id (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.mailbox_id"]], "max_uid (pymap.selected.synchronizedmessages property)": [[24, "pymap.selected.SynchronizedMessages.max_uid"]], "messages (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.messages"]], "mod_sequence (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.mod_sequence"]], "permanent_flags (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.permanent_flags"]], "pymap.selected": [[24, "module-pymap.selected"]], "readonly (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.readonly"]], "session_flags (pymap.selected.selectedmailbox property)": [[24, "pymap.selected.SelectedMailbox.session_flags"]], "set_deleted() (pymap.selected.selectedmailbox method)": [[24, "pymap.selected.SelectedMailbox.set_deleted"]], "set_messages() (pymap.selected.selectedmailbox method)": [[24, "pymap.selected.SelectedMailbox.set_messages"]], "silence() (pymap.selected.selectedmailbox method)": [[24, "pymap.selected.SelectedMailbox.silence"]], "pymap.service": [[25, "module-pymap.service"]], "services (in module pymap.service)": [[25, "pymap.service.services"]], "managesieveconnection (class in pymap.sieve.manage)": [[26, "pymap.sieve.manage.ManageSieveConnection"]], "managesieveserver (class in pymap.sieve.manage)": [[26, "pymap.sieve.manage.ManageSieveServer"]], "managesieveservice (class in pymap.sieve.manage)": [[26, "pymap.sieve.manage.ManageSieveService"]], "sievecompiler (class in pymap.sieve)": [[26, "pymap.sieve.SieveCompiler"]], "sievefilter (class in pymap.sieve)": [[26, "pymap.sieve.SieveFilter"]], "sieveparseerror": [[26, "pymap.sieve.SieveParseError"]], "sievetest (class in pymap.sieve.tests)": [[26, "pymap.sieve.tests.SieveTest"]], "add_arguments() (pymap.sieve.manage.managesieveservice class method)": [[26, "pymap.sieve.manage.ManageSieveService.add_arguments"]], "apply() (pymap.sieve.sievefilter method)": [[26, "pymap.sieve.SieveFilter.apply"]], "compile() (pymap.sieve.sievecompiler method)": [[26, "pymap.sieve.SieveCompiler.compile"]], "extensions (pymap.sieve.sievecompiler attribute)": [[26, "pymap.sieve.SieveCompiler.extensions"]], "filter_type (pymap.sieve.sievecompiler property)": [[26, "pymap.sieve.SieveCompiler.filter_type"]], "of() (pymap.sieve.tests.sievetest class method)": [[26, "pymap.sieve.tests.SieveTest.of"]], "pymap.sieve": [[26, "module-pymap.sieve"]], "pymap.sieve.manage": [[26, "module-pymap.sieve.manage"]], "pymap.sieve.tests": [[26, "module-pymap.sieve.tests"]], "run() (pymap.sieve.manage.managesieveconnection method)": [[26, "pymap.sieve.manage.ManageSieveConnection.run"]], "run() (pymap.sieve.tests.sievetest method)": [[26, "pymap.sieve.tests.SieveTest.run"]], "start() (pymap.sieve.manage.managesieveservice method)": [[26, "pymap.sieve.manage.ManageSieveService.start"]], "value_type (pymap.sieve.sievecompiler property)": [[26, "pymap.sieve.SieveCompiler.value_type"]], "inheritedsockets (class in pymap.sockets)": [[27, "pymap.sockets.InheritedSockets"]], "for_systemd() (pymap.sockets.inheritedsockets class method)": [[27, "pymap.sockets.InheritedSockets.for_systemd"]], "get() (pymap.sockets.inheritedsockets method)": [[27, "pymap.sockets.InheritedSockets.get"]], "of() (pymap.sockets.inheritedsockets class method)": [[27, "pymap.sockets.InheritedSockets.of"]], "pymap.sockets": [[27, "module-pymap.sockets"]], "supports() (pymap.sockets.inheritedsockets class method)": [[27, "pymap.sockets.InheritedSockets.supports"]], "threadkey (class in pymap.threads)": [[28, "pymap.threads.ThreadKey"]], "get_all() (pymap.threads.threadkey class method)": [[28, "pymap.threads.ThreadKey.get_all"]], "pymap.threads": [[28, "module-pymap.threads"]], "alltokens (class in pymap.token)": [[29, "pymap.token.AllTokens"]], "macarooncredentials (class in pymap.token.macaroon)": [[29, "pymap.token.macaroon.MacaroonCredentials"]], "macaroontokens (class in pymap.token.macaroon)": [[29, "pymap.token.macaroon.MacaroonTokens"]], "tokensbase (class in pymap.token)": [[29, "pymap.token.TokensBase"]], "authcid (pymap.token.macaroon.macarooncredentials property)": [[29, "pymap.token.macaroon.MacaroonCredentials.authcid"]], "authzid (pymap.token.macaroon.macarooncredentials property)": [[29, "pymap.token.macaroon.MacaroonCredentials.authzid"]], "get_admin_token() (pymap.token.alltokens method)": [[29, "pymap.token.AllTokens.get_admin_token"]], "get_admin_token() (pymap.token.macaroon.macaroontokens method)": [[29, "pymap.token.macaroon.MacaroonTokens.get_admin_token"]], "get_login_token() (pymap.token.alltokens method)": [[29, "pymap.token.AllTokens.get_login_token"]], "get_login_token() (pymap.token.macaroon.macaroontokens method)": [[29, "pymap.token.macaroon.MacaroonTokens.get_login_token"]], "identifier (pymap.token.macaroon.macarooncredentials property)": [[29, "pymap.token.macaroon.MacaroonCredentials.identifier"]], "parse() (pymap.token.alltokens method)": [[29, "pymap.token.AllTokens.parse"]], "parse() (pymap.token.macaroon.macaroontokens method)": [[29, "pymap.token.macaroon.MacaroonTokens.parse"]], "pymap.token": [[29, "module-pymap.token"]], "pymap.token.macaroon": [[29, "module-pymap.token.macaroon"]], "role (pymap.token.macaroon.macarooncredentials property)": [[29, "pymap.token.macaroon.MacaroonCredentials.role"]], "tokens (in module pymap.token)": [[29, "pymap.token.tokens"]], "verify() (pymap.token.macaroon.macarooncredentials method)": [[29, "pymap.token.macaroon.MacaroonCredentials.verify"]], "usermetadata (class in pymap.user)": [[30, "pymap.user.UserMetadata"]], "userroles (class in pymap.user)": [[30, "pymap.user.UserRoles"]], "add() (pymap.user.userroles method)": [[30, "pymap.user.UserRoles.add"]], "authcid (pymap.user.usermetadata property)": [[30, "pymap.user.UserMetadata.authcid"]], "check_password() (pymap.user.usermetadata method)": [[30, "pymap.user.UserMetadata.check_password"]], "compare_secret() (pymap.user.usermetadata method)": [[30, "pymap.user.UserMetadata.compare_secret"]], "create() (pymap.user.usermetadata class method)": [[30, "pymap.user.UserMetadata.create"]], "discard() (pymap.user.userroles method)": [[30, "pymap.user.UserRoles.discard"]], "get_clear_secret() (pymap.user.usermetadata method)": [[30, "pymap.user.UserMetadata.get_clear_secret"]], "params (pymap.user.usermetadata property)": [[30, "pymap.user.UserMetadata.params"]], "password (pymap.user.usermetadata property)": [[30, "pymap.user.UserMetadata.password"]], "pymap.user": [[30, "module-pymap.user"]], "roles (pymap.user.usermetadata property)": [[30, "pymap.user.UserMetadata.roles"]], "token_key (pymap.user.usermetadata property)": [[30, "pymap.user.UserMetadata.token_key"]]}})